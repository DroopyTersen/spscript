{"version":3,"sources":["../src/csr.js"],"names":["renderers","exports","require","registerFormField","fieldComponent","opts","renderer","formField","create","locations","registerField","registerDisplayField","displayField","field","forEach","l","defaults","Templates","Fields","templateOverride","name","SPClientTemplates","TemplateManager","RegisterTemplateOverrides","registerView","templates","options","Header","Footer"],"mappings":";;;;AAAA,IAAIA,YAAYC,QAAQD,SAAR,GAAoBE,QAAQ,iBAAR,CAApC;;AAEA;AACA,IAAIC,oBAAoBF,QAAQE,iBAAR,GAA4B,UAASC,cAAT,EAAyBC,IAAzB,EAA+B;AAC/E,QAAIC,WAAWN,UAAUO,SAAV,CAAoBC,MAApB,CAA2BJ,cAA3B,CAAf;AACAA,mBAAeK,SAAf,GAA2BL,eAAeK,SAAf,IAA4B,CAAC,SAAD,EAAY,UAAZ,CAAvD;AACA,WAAOC,cAAcN,cAAd,EAA8BE,QAA9B,EAAwCD,IAAxC,CAAP;AACH,CAJD;;AAMA;AACA,IAAIM,uBAAuBV,QAAQU,oBAAR,GAA+B,UAASP,cAAT,EAAyBC,IAAzB,EAA+B;AACrF,QAAIC,WAAWN,UAAUY,YAAV,CAAuBJ,MAAvB,CAA8BJ,cAA9B,CAAf;AACAA,mBAAeK,SAAf,GAA2BL,eAAeK,SAAf,IAA4B,CAAC,MAAD,EAAS,aAAT,CAAvD;AACA,WAAOC,cAAcN,cAAd,EAA8BE,QAA9B,EAAwCD,IAAxC,CAAP;AACH,CAJD;;AAMA,IAAIK,gBAAgBT,QAAQS,aAAR,GAAwB,UAASG,KAAT,EAAgBP,QAAhB,EAA0BD,IAA1B,EAAgC;AACxE,QAAIL,YAAY,EAAhB;AACA;AACAa,UAAMJ,SAAN,CAAgBK,OAAhB,CAAwB;AAAA,eAAKd,UAAUe,CAAV,IAAeT,QAApB;AAAA,KAAxB;AACA,QAAIU,WAAW;AACXC,mBAAW;AACPC,oBAAQ;AADD;AADA,KAAf;AAKA,QAAIC,mBAAmB,SAAc,EAAd,EAAkBH,QAAlB,EAA4BX,IAA5B,CAAvB;AACAc,qBAAiBF,SAAjB,CAA2BC,MAA3B,CAAkCL,MAAMO,IAAxC,IAAgDpB,SAAhD;AACAqB,sBAAkBC,eAAlB,CAAkCC,yBAAlC,CAA4DJ,gBAA5D;AACA,WAAON,KAAP;AACH,CAbD;;AAeA,IAAIW,eAAevB,QAAQuB,YAAR,GAAuB,UAASC,SAAT,EAAoBC,OAApB,EAA6B;AACnE;AACA;AACA,QAAIV,WAAW;AACX;AACA;AACAC,mBAAW;AACPU,oBAAQ,kBAAW;AAAE,uBAAO,EAAP;AAAW,aADzB;AAEPC,oBAAQ,kBAAW;AAAE,uBAAO,EAAP;AAAW;AAFzB;AAHA,KAAf;;AASA,QAAIT,mBAAmB,SAAc,EAAd,EAAkBH,QAAlB,EAA4BU,OAA5B,CAAvB;AACAP,qBAAiBF,SAAjB,GAA6B,SAAc,EAAd,EAAkBE,iBAAiBF,SAAnC,EAA8CQ,SAA9C,CAA7B;;AAEAJ,sBAAkBC,eAAlB,CAAkCC,yBAAlC,CAA4DJ,gBAA5D;AACH,CAhBD","file":"csr.js","sourcesContent":["var renderers = exports.renderers = require(\"./csr-renderers\");\r\n\r\n//fieldComponent = { name, onReady, render, getValue, locations:[\"View\", \"NewForm\",\"DisplayForm\", \"EditForm\"] }\r\nvar registerFormField = exports.registerFormField = function(fieldComponent, opts) {\r\n    var renderer = renderers.formField.create(fieldComponent);\r\n    fieldComponent.locations = fieldComponent.locations || [\"NewForm\", \"EditForm\"];\r\n    return registerField(fieldComponent, renderer, opts);\r\n};\r\n\r\n//{name, onReady, render, locations: [\"View\", \"DisplayForm\"]}\r\nvar registerDisplayField = exports.registerDisplayField = function(fieldComponent, opts) {\r\n    var renderer = renderers.displayField.create(fieldComponent);\r\n    fieldComponent.locations = fieldComponent.locations || [\"View\", \"DisplayForm\"];\r\n    return registerField(fieldComponent, renderer, opts);\r\n};\r\n\r\nvar registerField = exports.registerField = function(field, renderer, opts) {\r\n    var renderers = {}\r\n    //View, DisplayForm, EditForm, NewForm\r\n    field.locations.forEach(l => renderers[l] = renderer);\r\n    var defaults = {\r\n        Templates: {\r\n            Fields: {}\r\n        }\r\n    };\r\n    var templateOverride = Object.assign({}, defaults, opts);\r\n    templateOverride.Templates.Fields[field.name] = renderers;\r\n    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\r\n    return field;\r\n};\r\n\r\nvar registerView = exports.registerView = function(templates, options) {\r\n    // templates keys are Header, Item, Footer\r\n    //RenderFieldTemplateDefault(ctx); default renderer?\r\n    var defaults = {\r\n        //BaseViewID\r\n        //ListTemplateType\r\n        Templates: {\r\n            Header: function() { return \"\" },\r\n            Footer: function() { return \"\" }\r\n        }\r\n    }\r\n\r\n    var templateOverride = Object.assign({}, defaults, options);\r\n    templateOverride.Templates = Object.assign({}, templateOverride.Templates, templates);\r\n\r\n    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\r\n}\r\n"]}