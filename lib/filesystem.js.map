{"version":3,"sources":["../src/filesystem.js"],"names":["utils","require","Folder","spFolder","mapProperties","populateChildren","prototype","Folders","results","folders","map","f","Files","files","File","name","Name","serverRelativeUrl","ServerRelativeUrl","itemCount","ItemCount","guid","UniqueId","uri","__metadata","spFile","title","Title","checkoutType","CheckOutType","byteLength","Length","majorVersion","MajorVersion","minorVersion","MinorVersion","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,SAAR,CAAZ;;AAEA;;;;;;;;;;;;;;;;;AAiBA,IAAIC,SAAS,SAATA,MAAS,CAASC,QAAT,EAAmB;AAC/B,OAAKC,aAAL,CAAmBD,QAAnB;AACA,OAAKE,gBAAL,CAAsBF,QAAtB;AACA,CAHD;;AAKAD,OAAOI,SAAP,CAAiBD,gBAAjB,GAAoC,UAASF,QAAT,EAAmB;AACtD,MAAIA,YAAYA,SAASI,OAArB,IAAgCJ,SAASI,OAAT,CAAiBC,OAArD,EAA8D;AAC7D,SAAKC,OAAL,GAAeN,SAASI,OAAT,CAAiBC,OAAjB,CAAyBE,GAAzB,CAA6B;AAAA,aAAK,IAAIR,MAAJ,CAAWS,CAAX,CAAL;AAAA,KAA7B,CAAf;AACA;AACD,MAAIR,YAAYA,SAASS,KAArB,IAA8BT,SAASS,KAAT,CAAeJ,OAAjD,EAA0D;AACzD,SAAKK,KAAL,GAAaV,SAASS,KAAT,CAAeJ,OAAf,CAAuBE,GAAvB,CAA2B;AAAA,aAAK,IAAII,IAAJ,CAASH,CAAT,CAAL;AAAA,KAA3B,CAAb;AACA;AACD,CAPD;;AASAT,OAAOI,SAAP,CAAiBF,aAAjB,GAAiC,UAASD,QAAT,EAAmB;AACnD,OAAKY,IAAL,GAAYZ,SAASa,IAArB;AACA,OAAKC,iBAAL,GAAyBd,SAASe,iBAAlC;AACA,OAAKC,SAAL,GAAiBhB,SAASiB,SAA1B;AACA,OAAKC,IAAL,GAAYlB,SAASmB,QAArB;AACA,OAAKC,GAAL,GAAWpB,SAASqB,UAAT,CAAoBD,GAA/B;AACA,CAND;;AAQA;;;;;;;;;;;;;;;;;;AAkBA,IAAIT,OAAO,SAAPA,IAAO,CAASW,MAAT,EAAiB;AAC3B,OAAKrB,aAAL,CAAmBqB,MAAnB;AACA,CAFD;;AAIAX,KAAKR,SAAL,CAAeF,aAAf,GAA+B,UAASqB,MAAT,EAAiB;AAC/C,OAAKV,IAAL,GAAYU,OAAOT,IAAnB,EACA,KAAKU,KAAL,GAAaD,OAAOE,KADpB,EAEA,KAAKC,YAAL,GAAoBH,OAAOI,YAF3B,EAGA,KAAKC,UAAL,GAAkBL,OAAOM,MAHzB,EAIA,KAAKC,YAAL,GAAoBP,OAAOQ,YAJ3B,EAKA,KAAKC,YAAL,GAAoBT,OAAOU,YAL3B,EAMA,KAAKlB,iBAAL,GAAyBQ,OAAOP,iBANhC,EAOA,KAAKK,GAAL,GAAYE,OAAOD,UAAP,CAAkBD,GAP9B;AAQA,CATD;;AAYAa,OAAOC,OAAP,GAAiB;AAChBvB,QAAMA,IADU;AAEhBZ,UAAQA;AAFQ,CAAjB","file":"filesystem.js","sourcesContent":["var utils = require(\"./utils\");\r\n\r\n/**\r\n * Represents a SharePoint Folder.  Keep in mind, and File or Folder objects obtained from the 'files' and 'folders' array will not have their child items populated.\r\n * @typedef Folder\r\n * @property {string} name - Folder name\r\n * @property {string} serverRelativeUrl - Server relative url\r\n * @property {int} itemCount - Number of items in the folder\r\n * @property {string} guid - Unique ID of the folder\r\n * @property {string} uri - API url to get the raw SP.Folder object\r\n * @property {Array<File>} files - An array of files in that folder\r\n * @property {Array<Folder>} folders - An array of sub folders\r\n * @example\r\n *  dao.web.getFolder(\"/sites/mysite/Shared Documents\")\r\n *\t\t\t.then(function(folder) { \r\n *\t\t\t\tconsole.log(folder.name);\r\n *\t\t\t\tconsole.log(folder.files);\r\n *\t\t\t});\r\n */\r\nvar Folder = function(spFolder) {\r\n\tthis.mapProperties(spFolder);\r\n\tthis.populateChildren(spFolder);\r\n};\r\n\r\nFolder.prototype.populateChildren = function(spFolder) {\r\n\tif (spFolder && spFolder.Folders && spFolder.Folders.results) {\r\n\t\tthis.folders = spFolder.Folders.results.map(f => new Folder(f));\r\n\t}\r\n\tif (spFolder && spFolder.Files && spFolder.Files.results) {\r\n\t\tthis.files = spFolder.Files.results.map(f => new File(f));\r\n\t}\r\n};\r\n\r\nFolder.prototype.mapProperties = function(spFolder) {\r\n\tthis.name = spFolder.Name;\r\n\tthis.serverRelativeUrl = spFolder.ServerRelativeUrl;\r\n\tthis.itemCount = spFolder.ItemCount;\r\n\tthis.guid = spFolder.UniqueId;\r\n\tthis.uri = spFolder.__metadata.uri;\r\n};\r\n\r\n/**\r\n * Represents a SharePoint File\r\n * @typedef File\r\n * @property {string} name - Folder name\r\n * @property {string} title - Folder title\r\n * @property {string} serverRelativeUrl - Server relative url\r\n * @property {int} byteLength - File size in bytes\r\n * @property {string} checkoutType - Checked out status of file.  \"none\", \"offline\", \"online\".\r\n * @property {number} majorVersion - Major version of the file\r\n * @property {number} minorVersion - Minor version of the file\r\n * @property {string} uri - API url to get the raw SP.Folder object\r\n * @example\r\n *  dao.web.getFile(\"/sites/mysite/Shared Documents/myFile.docx\")\r\n *\t\t\t.then(function(file) { \r\n *\t\t\t\tconsole.log(file.name);\r\n *\t\t\t\tconsole.log(\"Size:\" + (file.byteLength / 1000) + \"KB\");\r\n *\t\t\t});\r\n */\r\nvar File = function(spFile) {\r\n\tthis.mapProperties(spFile);\r\n};\r\n\r\nFile.prototype.mapProperties = function(spFile) {\r\n\tthis.name = spFile.Name,\r\n\tthis.title = spFile.Title,\r\n\tthis.checkoutType = spFile.CheckOutType,\r\n\tthis.byteLength = spFile.Length,\r\n\tthis.majorVersion = spFile.MajorVersion,\r\n\tthis.minorVersion = spFile.MinorVersion,\r\n\tthis.serverRelativeUrl = spFile.ServerRelativeUrl,\r\n\tthis.uri =  spFile.__metadata.uri\r\n};\r\n\t\r\n\r\nmodule.exports = {\r\n\tFile: File,\r\n\tFolder: Folder\r\n};"]}