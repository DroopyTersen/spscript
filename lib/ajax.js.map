{"version":3,"sources":["../src/ajax.js"],"names":[],"mappings":";;;;;;;;AAIA,IAAI,WAAW;AACd,SAAQ,KADM;AAEd,QAAO,IAFO;AAGd,OAAM,MAHQ,E;AAId,OAAM;AAJQ,CAAf;;AAOA,IAAI,eAAe,CAClB,KADkB,EAElB,MAFkB,EAGlB,KAHkB,EAIlB,MAJkB,EAKlB,QALkB,EAMlB,OANkB,CAAnB;;AASA,IAAI,gBAAgB,EAApB;;AAEA,IAAI,kBAAkB,SAAlB,eAAkB,CAAS,OAAT,EAAkB;AACvC,KAAI,CAAC,OAAD,IAAY,CAAC,QAAQ,GAArB,IAA4B,aAAa,OAAb,CAAqB,QAAQ,MAA7B,IAAuC,CAAvE,EACC,OAAO,KAAP,CADD,KAEK,OAAO,IAAP;AACL,CAJD;;AAMA,IAAI,aAAa,SAAb,UAAa,CAAS,GAAT,EAAc,UAAd,EAA0B;AAC1C,KAAI,UAAJ,EAAgB;AACf,SAAO,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CAAgC,eAAO;AACtC,OAAI,gBAAJ,CAAqB,GAArB,EAA0B,WAAW,GAAX,CAA1B;AACA,GAFD;AAGA;AACD,CAND;;;;;;;;;;;;;;;;;;;AAyBA,IAAI,OAAO,SAAP,IAAO,CAAS,OAAT,EAAkB;AAC5B,KAAI,OAAO,SAAc,EAAd,EAAkB,QAAlB,EAA4B,OAA5B,CAAX;AACA,KAAI,CAAC,gBAAgB,OAAhB,CAAL,EACC,OAAO,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,wCAAV,CAAf,CAAP;;AAED,KAAI,MAAM,IAAI,cAAJ,EAAV;AACA,KAAI,OAAO,IAAX,EACC,OAAO,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,qDAAV,CAAf,CAAP;;AAGD,KAAI,IAAJ,CAAS,KAAK,MAAd,EAAsB,KAAK,GAA3B,EAAgC,KAAK,KAArC;AACA,YAAW,GAAX,EAAgB,KAAK,OAArB;AACA,KAAI,YAAJ,GAAmB,KAAK,IAAxB;;AAEA,QAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,MAAI,kBAAJ,GAAyB,YAAW;;AAEnC,OAAI,IAAI,UAAJ,KAAmB,CAAvB,EAA0B;;AAEzB,QAAI,IAAI,MAAJ,GAAa,GAAb,IAAoB,IAAI,MAAJ,IAAc,GAAtC,EAA2C;AAC1C,aAAQ,IAAI,QAAZ;AACA,KAFD,MAEO;AACN,SAAI,QAAQ,IAAI,KAAJ,CAAU,yCAAyC,IAAI,MAAvD,CAAZ;AACA,WAAM,UAAN,GAAmB,IAAI,MAAvB;AACA,WAAM,IAAN,GAAa,IAAI,QAAjB;AACA,mBAAc,OAAd,CAAsB;AAAA,aAAM,GAAG,KAAH,EAAU,GAAV,CAAN;AAAA,MAAtB;AACA,YAAO,KAAP;AACA;AACD;AACD,GAdD;;AAgBA,MAAI,IAAJ,CAAS,KAAK,IAAd;AACA,EAlBM,CAAP;AAmBA,CAjCD;;AAmCA,KAAK,eAAL,GAAuB,UAAC,EAAD;AAAA,QAAQ,cAAc,IAAd,CAAmB,EAAnB,CAAR;AAAA,CAAvB;AACA,KAAK,WAAL,GAAmB,UAAC,OAAD;AAAA,QAAa,SAAc,QAAd,EAAwB,OAAxB,CAAb;AAAA,CAAnB;;AAEA,OAAO,OAAP,GAAiB,IAAjB","file":"ajax.js","sourcesContent":["/**\r\n* @namespace SPScript.ajax\r\n*/\r\n\r\nvar defaults = {\r\n\tmethod: \"GET\",\r\n\tasync: true,\r\n\ttype: \"json\", //XMLHttpRequest.responseType\r\n\tdata: undefined\r\n};\r\n\r\nvar validMethods = [\r\n\t\"GET\",\r\n\t\"POST\",\r\n\t\"PUT\",\r\n\t\"HEAD\",\r\n\t\"DELETE\",\r\n\t\"PATCH\"\r\n];\r\n\r\nvar errorHandlers = [];\r\n\r\nvar validateOptions = function(options) {\r\n\tif (!options || !options.url || validMethods.indexOf(options.method) < 0)\r\n\t\treturn false\r\n\telse return true\r\n};\r\n\r\nvar setHeaders = function(xhr, headersObj) {\r\n\tif (headersObj) {\r\n\t\tObject.keys(headersObj).forEach(key => {\r\n\t\t\txhr.setRequestHeader(key, headersObj[key]);\r\n\t\t})\r\n\t}\r\n};\r\n\r\n/**\r\n * Performs and AJAX request based on options you pass you. Your options must at least have a url.\r\n * @param {object} options - Request options like { url, headers, method };\r\n * @returns {Promise} - A ES6 Promise that resolves or rejects when the request comes back\r\n * @function ajax\r\n * @memberof SPScript.ajax\r\n * @example\r\n * var ajaxOptions = { \r\n *    url: '/_api/web/contentTypes', \r\n *    method: \"GET\", \r\n *    headers: { Accept: \"application/json;odata=verbose\" } \r\n * };\r\n * SPScript.utils.ajax(ajaxOptions)\r\n *\t\t.then(SPScript.utils.parseJSON)\r\n *\t\t.then(function(data){ console.log(data.d.results) })\r\n *\t\t.catch(function(error) { console.log(error)})\r\n */\r\nvar ajax = function(options) {\r\n\tvar opts = Object.assign({}, defaults, options);\r\n\tif (!validateOptions(options))\r\n\t\treturn Promise.reject(new Error(\"Invalid options passed into ajax call.\"));\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\tif (xhr == null) \r\n\t\treturn Promise.reject(new Error(\"Your browser doesn't support XMLHttpRequest (ajax).\"));\r\n\r\n\r\n\txhr.open(opts.method, opts.url, opts.async);\r\n\tsetHeaders(xhr, opts.headers);\r\n\txhr.responseType = opts.type;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\txhr.onreadystatechange = function() {\r\n\t\t\t//completed\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\t// SUCCESS\r\n\t\t\t\tif (xhr.status < 400 && xhr.status >= 100) {\r\n\t\t\t\t\tresolve(xhr.response);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar error = new Error(\"AJAX Request Error: Response Code = \" + xhr.status);\r\n\t\t\t\t\terror.statusCode = xhr.status;\r\n\t\t\t\t\terror.body = xhr.response;\r\n\t\t\t\t\terrorHandlers.forEach(fn => fn(error, xhr));\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\txhr.send(opts.data);\r\n\t})\r\n};\r\n\r\najax.addErrorHandler = (fn) => errorHandlers.push(fn);\r\najax.setDefaults = (options) => Object.assign(defaults, options);\r\n\r\nmodule.exports = ajax;"]}