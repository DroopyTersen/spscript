{"version":3,"sources":["../src/crossDomainDao.js"],"names":[],"mappings":";;AAAA,WAAW,QAAQ,YAAR,CAAX;AACA,SAAS,OAAT,GAAmB,QAAQ,WAAR,CAAnB;AACA,SAAS,OAAT,GAAmB,QAAQ,WAAR,CAAnB;AACA,IAAI,IAAI,QAAQ,QAAR,CAAR;;AAEA,CAAC,UAAS,EAAT,EAAa;AACb,KAAI,iBAAiB,SAAjB,cAAiB,CAAS,SAAT,EAAoB,OAApB,EAA6B;AACjD,OAAK,MAAL,GAAc,SAAd;AACA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,WAAL,GAAmB,IAAI,EAAE,QAAN,EAAnB;;;AAGA,MAAI,CAAC,OAAO,EAAR,IAAc,CAAC,OAAO,EAAP,CAAU,eAA7B,EAA8C;AAC7C,QAAK,WAAL,GAAmB,EAAE,GAAF,CAAM,UAAU,oCAAhB,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,QAAlE,CAAnB;AACA,GAFD,MAEO;AACN,cAAW,YAAW;AACrB,SAAK,WAAL,CAAiB,OAAjB;AACA,IAFD,EAEG,CAFH;AAGA;AACD,EAbD;;AAeA,gBAAe,SAAf,GAA2B,IAAI,SAAS,OAAb,EAA3B;;AAEA,gBAAe,SAAf,CAAyB,cAAzB,GAA0C,UAAS,eAAT,EAA0B,OAA1B,EAAmC;AAC5E,MAAI,OAAO,IAAX;MACC,WAAW,IAAI,EAAE,QAAN,EADZ;;;;;AAKC,oBAAkB,SAAlB,eAAkB,CAAS,QAAT,EAAmB;AACpC,OAAI,OAAO,EAAE,SAAF,CAAY,SAAS,IAArB,CAAX;;AAEA,OAAI,QAAQ,OAAZ,EAAqB;AACpB,YAAQ,OAAR,CAAgB,IAAhB,EAAsB,QAAtB;AACA,IAFD,MAEO;;AAEN,OAAG,OAAH,CAAW,eAAX,CAA2B,IAA3B,EAAiC,QAAjC;AACA;AACD,GAdF;MAeC,gBAAgB,SAAhB,aAAgB,CAAS,IAAT,EAAe,SAAf,EAA0B,YAA1B,EAAwC;;AAEvD,OAAI,QAAQ,KAAZ,EAAmB;AAClB,YAAQ,KAAR,CAAc,IAAd,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,QAA7C;AACA,IAFD,MAEO;;AAEN,aAAS,MAAT,CAAgB,YAAhB;AACA;AACD,GAvBF;;AAyBA,OAAK,WAAL,CAAiB,IAAjB,CAAsB,YAAW;;AAEhC,OAAI,gBAAgB,OAAhB,CAAwB,GAAxB,MAAiC,CAAC,CAAtC,EAAyC;AACxC,sBAAkB,kBAAkB,GAApC;AACA;;AAED,OAAI,WAAW,IAAI,GAAG,eAAP,CAAuB,KAAK,MAA5B,CAAf;OACC,UAAU,KAAK,MAAL,GAAc,kCAAd,GAAmD,eAAnD,GAAqE,WAArE,GAAmF,KAAK,OAAxF,GAAkG,GAD7G;;AAGA,OAAI,iBAAiB;AACpB,SAAK,OADe;AAEpB,UAAM,KAFc;AAGpB,aAAS;AACR,eAAU;AADF,KAHW;AAMpB,aAAS,eANW;AAOpB,WAAO;AAPa,IAArB;;AAUA,KAAE,MAAF,CAAS,IAAT,EAAe,cAAf,EAA+B,OAA/B;AACA,YAAS,YAAT,CAAsB,cAAtB;AACA,GArBD;AAsBA,SAAO,SAAS,OAAT,EAAP;AACA,EAjDD;;AAmDA,IAAG,cAAH,GAAoB,cAApB;AACA,CAtED,EAsEG,QAtEH;;AAwEA,OAAO,OAAP,GAAiB,SAAS,cAA1B","file":"crossDomainDao.js","sourcesContent":["SPScript = require(\"./spscript\");\r\nSPScript.helpers = require(\"./helpers\");\r\nSPScript.BaseDao = require(\"./baseDao\");\r\nvar $ = require(\"jquery\");\r\n\r\n(function(sp) {\r\n\tvar CrossDomainDao = function(appWebUrl, hostUrl) {\r\n\t\tthis.appUrl = appWebUrl;\r\n\t\tthis.hostUrl = hostUrl;\r\n\t\tthis.scriptReady = new $.Deferred();\r\n\r\n\t\t//Load of up to RequestExecutor javascript from the host site if its not there.\r\n\t\tif (!window.SP || !window.SP.RequestExecutor) {\r\n\t\t\tthis.scriptReady = $.get(hostUrl + \"/_layouts/15/SP.RequestExecutor.js\", null, null, \"script\");\r\n\t\t} else {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tthis.scriptReady.resolve();\t\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t};\r\n\r\n\tCrossDomainDao.prototype = new SPScript.BaseDao();\r\n\r\n\tCrossDomainDao.prototype.executeRequest = function(hostRelativeUrl, options) {\r\n\t\tvar self = this,\r\n\t\t\tdeferred = new $.Deferred(),\r\n\r\n\t\t\t//If a callback was given execute it, passing response then the deferred\r\n\t\t\t//otherwise just resolve the deferred.\r\n\t\t\tsuccessCallback = function(response) {\r\n\t\t\t\tvar data = $.parseJSON(response.body);\r\n\t\t\t\t//a suceess callback was passed in\r\n\t\t\t\tif (options.success) {\r\n\t\t\t\t\toptions.success(data, deferred);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//no success callback so just make sure its valid OData\r\n\t\t\t\t\tsp.helpers.validateODataV2(data, deferred);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorCallback = function(data, errorCode, errorMessage) {\r\n\t\t\t\t//an error callback was passed in\r\n\t\t\t\tif (options.error) {\r\n\t\t\t\t\toptions.error(data, errorCode, errorMessage, deferred);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//no error callback so just reject it\r\n\t\t\t\t\tdeferred.reject(errorMessage);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tthis.scriptReady.done(function() {\r\n\t\t\t//tack on the query string question mark if not there already\r\n\t\t\tif (hostRelativeUrl.indexOf(\"?\") === -1) {\r\n\t\t\t\thostRelativeUrl = hostRelativeUrl + \"?\";\r\n\t\t\t}\r\n\r\n\t\t\tvar executor = new SP.RequestExecutor(self.appUrl),\r\n\t\t\t\tfullUrl = self.appUrl + \"/_api/SP.AppContextSite(@target)\" + hostRelativeUrl + \"@target='\" + self.hostUrl + \"'\";\r\n\r\n\t\t\tvar executeOptions = {\r\n\t\t\t\turl: fullUrl,\r\n\t\t\t\ttype: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Accept\": \"application/json; odata=verbose\"\r\n\t\t\t\t},\r\n\t\t\t\tsuccess: successCallback,\r\n\t\t\t\terror: errorCallback\r\n\t\t\t};\r\n\t\t\t//Merge passed in options\r\n\t\t\t$.extend(true, executeOptions, options);\r\n\t\t\texecutor.executeAsync(executeOptions);\r\n\t\t});\r\n\t\treturn deferred.promise();\r\n\t};\r\n\r\n\tsp.CrossDomainDao = CrossDomainDao;\r\n})(SPScript);\r\n\r\nmodule.exports = SPScript.CrossDomainDao;"]}