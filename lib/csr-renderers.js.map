{"version":3,"sources":["../src/csr-renderers.js"],"names":["createFormFieldRenderer","field","ctx","formCtx","FormContext","clonedCtx","onReady","registerInitCallback","name","bind","setTimeout","getValue","registerGetValueCallback","updateControlValue","setValue","value","render","createDisplayFieldRenderer","renderers","formField","create","displayField","module","exports"],"mappings":";;;;AAAA,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AACpC,WAAO,UAASC,GAAT,EAAc;AACjB,YAAIC,UAAUD,IAAIE,WAAlB;AACA;AACA,YAAIC,YAAY,SAAc,EAAd,EAAkBH,GAAlB,CAAhB;AACA,YAAID,MAAMK,OAAV,EAAmB;AACf,gBAAIH,OAAJ,EAAa;AACTA,wBAAQI,oBAAR,CAA6BN,MAAMO,IAAnC,EAAyCP,MAAMK,OAAN,CAAcG,IAAd,CAAmB,IAAnB,EAAyBJ,SAAzB,CAAzC;AACH,aAFD,MAEO;AACHK,2BAAWT,MAAMK,OAAN,CAAcG,IAAd,CAAmB,IAAnB,EAAyBJ,SAAzB,CAAX,EAAgD,GAAhD;AACH;AACJ;AACD,YAAIJ,MAAMU,QAAN,IAAkBR,OAAtB,EAA+B;AAC3BA,oBAAQS,wBAAR,CAAiCX,MAAMO,IAAvC,EAA6CP,MAAMU,QAAN,CAAeF,IAAf,CAAoB,IAApB,EAA0BJ,SAA1B,CAA7C;AACH;AACD;AACA,YAAIF,WAAWA,QAAQU,kBAAvB,EAA2C;AACvCZ,kBAAMa,QAAN,GAAiB,UAASC,KAAT,EAAgB;AAC7BZ,wBAAQU,kBAAR,CAA2BZ,MAAMO,IAAjC,EAAuCO,KAAvC;AACH,aAFD;AAGH;;AAED,eAAOd,MAAMe,MAAN,CAAad,GAAb,CAAP;AACH,KAtBD;AAuBH;;AAED,SAASe,0BAAT,CAAoChB,KAApC,EAA2C;AACvC,WAAO,UAASC,GAAT,EAAc;AACjB,YAAIC,UAAUD,IAAIE,WAAlB;AACA,YAAGD,WAAWA,QAAQI,oBAAnB,IAA2CN,MAAMK,OAApD,EAA6D;AACzDH,oBAAQI,oBAAR,CAA6BN,MAAMO,IAAnC,EAAyCP,MAAMK,OAA/C;AACH;AACD,eAAOL,MAAMe,MAAN,CAAad,GAAb,CAAP;AACH,KAND;AAOH;;AAED,IAAIgB,YAAY;AACZC,eAAY;AACRC,gBAAQpB;AADA,KADA;AAIZqB,kBAAc;AACVD,gBAAQH;AADE;AAJF,CAAhB;;AASAK,OAAOC,OAAP,GAAiBL,SAAjB","file":"csr-renderers.js","sourcesContent":["function createFormFieldRenderer(field) {\r\n    return function(ctx) {\r\n        var formCtx = ctx.FormContext;\r\n        // need to clone ctx, it is getting overwritten so we lost CurrentItem\r\n        var clonedCtx = Object.assign({}, ctx);\r\n        if (field.onReady) {\r\n            if (formCtx) {\r\n                formCtx.registerInitCallback(field.name, field.onReady.bind(null, clonedCtx))\r\n            } else {\r\n                setTimeout(field.onReady.bind(null, clonedCtx), 100);\r\n            }\r\n        }\r\n        if (field.getValue && formCtx) {\r\n            formCtx.registerGetValueCallback(field.name, field.getValue.bind(null, clonedCtx));\r\n        }\r\n        // tack on 'setValue' function\r\n        if (formCtx && formCtx.updateControlValue) {\r\n            field.setValue = function(value) {\r\n                formCtx.updateControlValue(field.name, value);\r\n            }            \r\n        }\r\n\r\n        return field.render(ctx);\r\n    }\r\n}\r\n\r\nfunction createDisplayFieldRenderer(field) {\r\n    return function(ctx) {\r\n        var formCtx = ctx.FormContext;\r\n        if(formCtx && formCtx.registerInitCallback && field.onReady) {\r\n            formCtx.registerInitCallback(field.name, field.onReady)\r\n        }\r\n        return field.render(ctx);\r\n    }\r\n}\r\n\r\nvar renderers = {\r\n    formField : {\r\n        create: createFormFieldRenderer\r\n    },\r\n    displayField: {\r\n        create: createDisplayFieldRenderer\r\n    }\r\n}\r\n\r\nmodule.exports = renderers;"]}