{"version":3,"sources":["../src/csr-renderers.js"],"names":[],"mappings":";;AAAA,SAAS,uBAAT,CAAiC,KAAjC,EAAwC;AACpC,WAAO,UAAS,GAAT,EAAc;AACjB,YAAI,UAAU,IAAI,WAAlB;AACA,YAAI,MAAM,OAAV,EAAmB;AACf,gBAAI,OAAJ,EAAa;AACT,wBAAQ,oBAAR,CAA6B,MAAM,IAAnC,EAAyC,MAAM,OAAN,CAAc,IAAd,CAAmB,IAAnB,EAAyB,GAAzB,CAAzC;AACH,aAFD,MAEO;AACH,2BAAW,MAAM,OAAN,CAAc,IAAd,CAAmB,IAAnB,EAAyB,GAAzB,CAAX,EAA0C,GAA1C;AACH;AACJ;AACD,YAAI,MAAM,QAAN,IAAkB,OAAtB,EAA+B;AAC3B,oBAAQ,wBAAR,CAAiC,MAAM,IAAvC,EAA6C,MAAM,QAAN,CAAe,IAAf,CAAoB,IAApB,EAA0B,GAA1B,CAA7C;AACH;;AAED,YAAI,WAAW,QAAQ,kBAAvB,EAA2C;AACvC,kBAAM,QAAN,GAAiB,UAAS,KAAT,EAAgB;AAC7B,wBAAQ,kBAAR,CAA2B,MAAM,IAAjC,EAAuC,KAAvC;AACH,aAFD;AAGH;;AAED,eAAO,MAAM,MAAN,CAAa,GAAb,CAAP;AACH,KApBD;AAqBH;;AAED,SAAS,0BAAT,CAAoC,KAApC,EAA2C;AACvC,WAAO,UAAS,GAAT,EAAc;AACjB,YAAI,UAAU,IAAI,WAAlB;AACA,YAAG,WAAW,QAAQ,oBAAnB,IAA2C,MAAM,OAApD,EAA6D;AACzD,oBAAQ,oBAAR,CAA6B,MAAM,IAAnC,EAAyC,MAAM,OAA/C;AACH;AACD,eAAO,MAAM,MAAN,CAAa,GAAb,CAAP;AACH,KAND;AAOH;;AAED,IAAI,YAAY;AACZ,eAAY;AACR,gBAAQ;AADA,KADA;AAIZ,kBAAc;AACV,gBAAQ;AADE;AAJF,CAAhB;;AASA,OAAO,OAAP,GAAiB,SAAjB","file":"csr-renderers.js","sourcesContent":["function createFormFieldRenderer(field) {\r\n    return function(ctx) {\r\n        var formCtx = ctx.FormContext;\r\n        if (field.onReady) {\r\n            if (formCtx) {\r\n                formCtx.registerInitCallback(field.name, field.onReady.bind(null, ctx))\r\n            } else {\r\n                setTimeout(field.onReady.bind(null, ctx), 100);\r\n            }\r\n        }\r\n        if (field.getValue && formCtx) {\r\n            formCtx.registerGetValueCallback(field.name, field.getValue.bind(null, ctx));\r\n        }\r\n        // tack on 'setValue' function\r\n        if (formCtx && formCtx.updateControlValue) {\r\n            field.setValue = function(value) {\r\n                formCtx.updateControlValue(field.name, value);\r\n            }            \r\n        }\r\n\r\n        return field.render(ctx);\r\n    }\r\n}\r\n\r\nfunction createDisplayFieldRenderer(field) {\r\n    return function(ctx) {\r\n        var formCtx = ctx.FormContext;\r\n        if(formCtx && formCtx.registerInitCallback && field.onReady) {\r\n            formCtx.registerInitCallback(field.name, field.onReady)\r\n        }\r\n        return field.render(ctx);\r\n    }\r\n}\r\n\r\nvar renderers = {\r\n    formField : {\r\n        create: createFormFieldRenderer\r\n    },\r\n    displayField: {\r\n        create: createDisplayFieldRenderer\r\n    }\r\n}\r\n\r\nmodule.exports = renderers;"]}