{"version":3,"sources":["webpack:///spscript.js","webpack:///webpack/bootstrap d90908eb637223c0e4d7?be54","webpack:///./entries/spscript.js","webpack:///./lib/utils.js?cd26","webpack:///./lib/requestHeaders.js","webpack:///./~/process/browser.js?82e4","webpack:///./~/promise-polyfill/promise.js?6ded","webpack:///./~/setimmediate/setImmediate.js?4a80","webpack:///./~/timers-browserify/main.js?b088","webpack:///./lib/ajax.js","webpack:///./lib/permissions.js","webpack:///./lib/queryString.js","webpack:///./lib/baseDao.js","webpack:///./lib/csr-renderers.js","webpack:///./lib/csr.js","webpack:///./lib/customActions.js","webpack:///./lib/filesystem.js","webpack:///./lib/list.js","webpack:///./lib/profiles.js","webpack:///./lib/restDao.js","webpack:///./lib/search.js","webpack:///./lib/web.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","promisePolyfill","Promise","SPScript","RestDao","queryString","utils","ajax","CSR","headers","this","parseJSON","isBrowser","window","data","JSON","parse","e","_waitForLibraries","validateODataV2","results","d","length","arrayFromBitMask","nMask","parseInt","nShifted","aFromMask","push","Boolean","namespaces","resolve","missing","filter","namespace","validateNamespace","setTimeout","waitForLibraries","reject","waitForLibrary","scope","sections","split","sectionsLength","i","prop","getScript","getScripts","urls","all","map","url","scriptTag","document","createElement","firstScriptTag","getElementsByTagName","async","parentNode","insertBefore","onload","onreadystatechange","arg","isAbort","readyState","test","undefined","src","getArrayBuffer","file","File","reader","FileReader","target","result","readAsArrayBuffer","loadCss","link","setAttribute","querySelector","appendChild","handleErrorResponse","err","res","console","log","statusCode","code","msg","body","error","message","value","ex","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","jsonMimeType","getStandardHeaders","digest","Accept","Content-Type","getAddHeaders","getActionHeaders","getFilestreamHeaders","X-RequestDigest","binaryStringRequestBody","verb","X-HTTP-Method","decorateETag","etag","getUpdateHeaders","getDeleteHeaders","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","setImmediate","root","bind","fn","thisArg","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","promise","ret","newValue","then","finale","_unhandledRejectionFn","Handler","done","reason","setTimeoutFunc","prom","arr","slice","val","remaining","constructor","race","values","warn","_setImmediateFn","_setUnhandledRejectionFn","callback","Function","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","Math","random","onGlobalMessage","event","indexOf","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","doc","documentElement","script","removeChild","installSetTimeoutImplementation","attachTo","getPrototypeOf","toString","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","defaults","method","type","validMethods","errorHandlers","validateOptions","options","setHeaders","xhr","headersObj","keys","forEach","setRequestHeader","opts","XMLHttpRequest","open","responseType","status","response","responseText","send","addErrorHandler","setDefaults","Permissions","baseUrl","dao","_dao","getRoleAssignments","get","transforms","roleAssignment","check","email","_this","checkPrivs","user","login","encodeURIComponent","LoginName","req","web","getUser","_spPageContextInfo","userId","privs","permissionMaskToStrings","GetUserEffectivePermissions","Low","High","raw","priv","member","Member","Title","Id","roles","RoleDefinitionBindings","roleDef","Name","description","Description","basePermissions","BasePermissions","lowMask","highMask","spBasePermissions","basePermission","low","high","qs","toObj","fromObj","obj","quoteValues","writeParam","trim","str","join","location","search","substr","contains","text","getValue","List","Web","Profiles","Search","CustomActions","headerUtils","BaseDao","profiles","customActions","executeRequest","relativeQueryUrl","extendedOptions","getRequestDigest","post","GetContextWebInformation","FormDigestValue","lists","listname","relativePostUrl","packagePostBody","authorizedPost","ensureRequestDigest","stringify","createFormFieldRenderer","field","ctx","formCtx","FormContext","clonedCtx","onReady","registerInitCallback","registerGetValueCallback","updateControlValue","setValue","render","createDisplayFieldRenderer","renderers","formField","create","displayField","registerField","registerFormField","fieldComponent","renderer","locations","registerDisplayField","l","Templates","Fields","templateOverride","SPClientTemplates","TemplateManager","RegisterTemplateOverrides","registerView","templates","Header","Footer","metadata","__metadata","scopes","Site","getById","_this2","siteCustomActions","webCustomActions","matches","a","_getUrl","_this3","Scope","_getUrlAndDigest","_this4","prep","update","updates","_this5","remove","_this6","add","customAction","_this7","Location","addScriptLink","Group","Sequence","ScriptSrc","addCSSLink","scriptBlockStr","ScriptBlock","Folder","spFolder","mapProperties","populateChildren","Folders","folders","f","Files","files","serverRelativeUrl","ServerRelativeUrl","itemCount","ItemCount","guid","UniqueId","uri","spFile","checkoutType","CheckOutType","byteLength","Length","majorVersion","MajorVersion","minorVersion","MinorVersion","permissions","getFields","odataQuery","appendOData","getField","fieldName","fields","updateField","getItems","getItemById","odata","info","addItem","ListItemEntityTypeFullName","customOptions","updateItem","itemId","deleteItem","addAttachment","filename","content","requestDigest","_addAttachment","deleteAttachment","_deleteAttachment","findItems","extraOData","filterValue","findItem","items","prefix","transformPersonProperties","profile","UserProfileProperties","keyvalue","Key","Value","current","setProperty","userOrEmail","propertyName","propertyValue","getByEmail","accountName","AccountName","getProfile","webUrl","webAbsoluteUrl","fullUrl","defaultOptions","ajaxOptions","catch","QueryOptions","sourceid","startrow","rowlimit","selectedproperties","refiners","refinementfilters","hiddenconstraints","sortlist","convertRowsToObjects","itemRows","row","j","Cells","SearchResults","queryResponse","elapsedTime","ElapsedTime","suggestion","SpellingSuggestion","resultsCount","PrimaryQueryResult","RelevantResults","RowCount","totalResults","TotalRows","totalResultsIncludingDuplicates","TotalRowsIncludingDuplicates","Table","Rows","mapRefiners","RefinementResults","refinementResults","Refiners","r","RefinerName","RefinerOptions","Entries","query","queryText","queryOptions","optionsQueryString","resp","people","sites","subsites","getFolder","charAt","folder","uploadFile","fileContent","folderUrl","_uploadFile","_uploadBinaryData","arrayBuffer","_setFileFields","ParentList","binaryContent","uploadUrl","getFile","copyFile","sourceUrl","destinationUrl","_copyFile","strNewUrl","bOverWrite","fileAction","action","params","_fileAction","deleteFile","fileUrl","_deleteFile","ensureUser","sep","eq","regexp","maxKeys","kstr","vstr","k","v","x","replace","idx","decodeURIComponent","isArray","stringifyPrimitive","isFinite","ks","decode","encode"],"mappings":"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","file":"spscript.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var promisePolyfill = __webpack_require__(8);\r\n\tif (!global.Promise) {\r\n\t\tglobal.Promise = promisePolyfill;\r\n\t}\r\n\tvar SPScript = {};\r\n\tSPScript.RestDao = __webpack_require__(26);\r\n\tSPScript.queryString = __webpack_require__(13);\r\n\tSPScript.utils = __webpack_require__(1);\r\n\tSPScript.ajax = __webpack_require__(11);\r\n\tSPScript.CSR = __webpack_require__(21);\r\n\tSPScript.headers = __webpack_require__(2);\r\n\tmodule.exports = global.SPScript = SPScript;\r\n\t\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\r\n\t* @namespace SPScript.utils\r\n\t*/\n\t\n\tvar isBrowser = exports.isBrowser = function () {\n\t\treturn !(typeof window === 'undefined');\n\t};\n\t/**\r\n\t * If you pass in string, it will try to run JSON.parse(). The SPScript get() and post() methods already run the response through this method, so you'd really only need this if you are doing a manual ajax request. Different browsers handle JSON response differently so it is safest to call this method if you aren't going through SPScript.\r\n\t * @param {string} data - Raw response from JSON request\r\n\t * @returns {object} - JSON parsed object. Returns null if JSON.parse fails\r\n\t * @function parseJSON\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * dao.executeRequest('/web/contentTypes')\r\n\t *\t\t.then(SPScript.utils.parseJSON)\r\n\t *\t\t.then(function(data) { console.log(data.d.results)})\r\n\t */\n\tvar parseJSON = exports.parseJSON = function (data) {\n\t\tif (typeof data === \"string\") {\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(data);\n\t\t\t} catch (e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t};\n\t\n\t/**\r\n\t * Helps parse raw json response to remove ceremonious OData data.d namespace. Tries JSON.parse() and then pulling out actual result from data.d or data.d.results\r\n\t * @function validateODataV2\r\n\t * @memberof SPScript.utils\r\n\t * @param {string|object} data - Raw response from JSON request\r\n\t * @returns {object} - JSON parsed object with that removes data.d OData structure \r\n\t * @example\r\n\t * dao.get('/web/contentTypes')\r\n\t *\t\t.then(SPScript.utils.validateODataV2)\r\n\t *\t\t.then(function(contentTypes) { console.log(contentTypes)})\r\n\t */\n\tvar validateODataV2 = exports.validateODataV2 = function (data) {\n\t\tvar data = parseJSON(data);\n\t\tvar results = null;\n\t\tif (data.d && data.d.results && data.d.results.length != null) {\n\t\t\tresults = data.d.results;\n\t\t} else if (data.d) {\n\t\t\tresults = data.d;\n\t\t}\n\t\treturn results || data;\n\t};\n\t\n\t//'Borrowed' from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n\tvar arrayFromBitMask = exports.arrayFromBitMask = function (nMask) {\n\t\t// nMask must be between -2147483648 and 2147483647\n\t\tif (typeof nMask === \"string\") {\n\t\t\tnMask = parseInt(nMask);\n\t\t}\n\t\t// if (nMask > 0x7fffffff || nMask < -0x80000000) { \n\t\t// \tthrow new TypeError(\"arrayFromMask - out of range\"); \n\t\t// }\n\t\tfor (var nShifted = nMask, aFromMask = []; nShifted; aFromMask.push(Boolean(nShifted & 1)), nShifted >>>= 1) {}\n\t\treturn aFromMask;\n\t};\n\t\n\tvar _waitForLibraries = function _waitForLibraries(namespaces, resolve) {\n\t\tvar missing = namespaces.filter(function (namespace) {\n\t\t\treturn !validateNamespace(namespace);\n\t\t});\n\t\n\t\tif (missing.length === 0) resolve();else setTimeout(function () {\n\t\t\treturn _waitForLibraries(namespaces, resolve);\n\t\t}, 25);\n\t};\n\t\n\t/**\r\n\t * A method to allow you to wait for script dependencies to load.\r\n\t * @param {Array} namespaces - An array of global namespaces, things on the global 'window'. For example, when jQuery is on the page, window.jQuery is valid.  So 'jQuery' is the namespace.\r\n\t * @returns {Promise} - A Promise that resolves when all your namespaces are on the page\r\n\t * @function waitForLibraries\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * function doMyStuff() { };\r\n\t * SPScript.utils.waitForLibraries([\"jQuery\", \"SP.UI.Dialog\"]).then(doMyStuff);\r\n\t */\n\tvar waitForLibraries = exports.waitForLibraries = function (namespaces) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treturn _waitForLibraries(namespaces, resolve);\n\t\t});\n\t};\n\t\n\t/**\r\n\t * A method to allow you to wait for a single script dependency to load.\r\n\t * @param {string} namespace - A global namespace. For example, when jQuery is on the page, window.jQuery is valid. So 'jQuery' is the namespace.\r\n\t * @returns {Promise} - A Promise that resolves when all your namespace is on the page\r\n\t * @function waitForLibrary\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * function doMyStuff() { };\r\n\t * SPScript.utils.waitForLibrary(\"jQuery\").then(doMyStuff);\r\n\t */\n\tvar waitForLibrary = exports.waitForLibrary = function (namespace) {\n\t\treturn waitForLibraries([namespace]);\n\t};\n\t\n\t/**\r\n\t * A method to check if a given namespace is on the global object (window).\r\n\t * @param {string} namespace - A global namespace\r\n\t * @returns {Bool} - True or False if the namespace is on the page\r\n\t * @function validateNamespace\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * var canUseModals = SPScript.utils.validateNamespace(\"SP.UI.Dialog\");\r\n\t */\n\tvar validateNamespace = exports.validateNamespace = function (namespace) {\n\t\tvar scope = window;\n\t\tvar sections = namespace.split(\".\");\n\t\tvar sectionsLength = sections.length;\n\t\tfor (var i = 0; i < sectionsLength; i++) {\n\t\t\tvar prop = sections[i];\n\t\t\tif (prop in scope) {\n\t\t\t\tscope = scope[prop];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t\n\t/**\r\n\t * A method to load a javascript file onto your page\r\n\t * @param {Array<string>} urls - An Array of urls to javascript files you want to load on your page\r\n\t * @returns {Promise} - A Promise that resolves when all the files are done loading\r\n\t * @function getScripts\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * function doMyStuff() { };\r\n\t * var momentjsUrl = \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js\"\r\n\t * var jQueryUrl = \"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js\"\r\n\t * SPScript.utils.getScript([momentjsUrl, jQueryUrl]).then(doMyStuff);\r\n\t */\n\tvar getScripts = exports.getScripts = function (urls) {\n\t\treturn Promise.all(urls.map(getScript));\n\t};\n\t\n\t/**\r\n\t * A method to load a javascript file onto your page\r\n\t * @param {string} url - Url to the java script file you want to load\r\n\t * @returns {Promise} - A Promise that resolves when the file is done loading\r\n\t * @function getScript\r\n\t * @memberof SPScript.utils\r\n\t * @example\r\n\t * function doMyStuff() { };\r\n\t * var momentjsUrl = \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js\"\r\n\t * SPScript.utils.getScript(momentjsUrl).then(doMyStuff);\r\n\t */\n\tvar getScript = exports.getScript = function (url) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tvar scriptTag = window.document.createElement(\"script\");\n\t\t\tvar firstScriptTag = document.getElementsByTagName('script')[0];\n\t\t\tscriptTag.async = 1;\n\t\t\tfirstScriptTag.parentNode.insertBefore(scriptTag, firstScriptTag);\n\t\n\t\t\tscriptTag.onload = scriptTag.onreadystatechange = function (arg, isAbort) {\n\t\t\t\t// if its been aborted, readyState is gone, or readyState is in a 'done' status\n\t\t\t\tif (isAbort || !scriptTag.readyState || /loaded|complete/.test(scriptTag.readyState)) {\n\t\t\t\t\t//clean up\n\t\t\t\t\tscriptTag.onload = scriptTag.onreadystatechange = null;\n\t\t\t\t\tscriptTag = undefined;\n\t\n\t\t\t\t\t// resolve/reject the promise\n\t\t\t\t\tif (!isAbort) resolve();else reject;\n\t\t\t\t}\n\t\t\t};\n\t\t\tscriptTag.src = url;\n\t\t});\n\t};\n\t\n\tvar getArrayBuffer = exports.getArrayBuffer = function (file) {\n\t\tif (file && file instanceof File) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function (e) {\n\t\t\t\t\tresolve(e.target.result);\n\t\t\t\t};\n\t\t\t\treader.readAsArrayBuffer(file);\n\t\t\t});\n\t\t} else {\n\t\t\tthrow \"SPScript.utils.getArrayBuffer: Cant get ArrayBuffer if you don't pass in a file\";\n\t\t}\n\t};\n\tvar loadCss = exports.loadCss = function (url) {\n\t\tvar link = document.createElement(\"link\");\n\t\tlink.setAttribute(\"rel\", \"stylesheet\");\n\t\tlink.setAttribute(\"type\", \"text/css\");\n\t\tlink.setAttribute(\"href\", url);\n\t\tdocument.querySelector(\"head\").appendChild(link);\n\t};\n\t\n\tvar handleErrorResponse = exports.handleErrorResponse = function (err, res) {\n\t\tconsole.log(\"REQUEST ERROR - \" + err.statusCode || err.code);\n\t\tvar msg = err.body;\n\t\ttry {\n\t\t\tvar data = err.body;\n\t\t\tif (typeof data === \"string\") data = JSON.parse(err.body);\n\t\t\tif (data.error) msg = data.error.message.value;\n\t\t} catch (ex) {}\n\t\tconsole.log(msg);\n\t\treturn err;\n\t};\n\t//# sourceMappingURL=utils.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar utils = __webpack_require__(1);\n\t\n\tvar jsonMimeType = exports.jsonMimeType = \"application/json;odata=verbose\";\n\tvar getStandardHeaders = exports.getStandardHeaders = function (digest) {\n\t\tvar headers = {\n\t\t\t\"Accept\": jsonMimeType,\n\t\t\t\"Content-Type\": jsonMimeType\n\t\t};\n\t\tif (digest) headers[\"X-RequestDigest\"] = digest;\n\t\treturn headers;\n\t};\n\t\n\texports.getAddHeaders = getStandardHeaders;\n\t\n\tvar getFilestreamHeaders = exports.getFilestreamHeaders = function (digest) {\n\t\treturn {\n\t\t\t'Accept': jsonMimeType,\n\t\t\t'X-RequestDigest': digest,\n\t\t\t'Content-Type': \"application/octet-stream\",\n\t\t\t'binaryStringRequestBody': \"true\"\n\t\t};\n\t};\n\t\n\tvar getActionHeaders = exports.getActionHeaders = function (verb, digest) {\n\t\tif (!verb) return getStandardHeaders(digest);\n\t\treturn _extends({}, getStandardHeaders(digest), {\n\t\t\t\"X-HTTP-Method\": verb\n\t\t});\n\t};\n\t\n\tvar decorateETag = function decorateETag(headers, etag) {\n\t\tif (etag) headers[\"If-Match\"] = etag;\n\t\treturn headers;\n\t};\n\t\n\texports.getUpdateHeaders = function (digest, etag) {\n\t\treturn decorateETag(getActionHeaders(\"MERGE\", digest), etag);\n\t};\n\texports.getDeleteHeaders = function (digest, etag) {\n\t\treturn decorateETag(getActionHeaders(\"DELETE\", digest), etag);\n\t};\n\t//# sourceMappingURL=requestHeaders.js.map\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\t\n\t  // Store setTimeout reference so promise-polyfill will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var setTimeoutFunc = setTimeout;\n\t\n\t  function noop() {}\n\t  \n\t  // Polyfill for Function.prototype.bind\n\t  function bind(fn, thisArg) {\n\t    return function () {\n\t      fn.apply(thisArg, arguments);\n\t    };\n\t  }\n\t\n\t  function Promise(fn) {\n\t    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n\t    if (typeof fn !== 'function') throw new TypeError('not a function');\n\t    this._state = 0;\n\t    this._handled = false;\n\t    this._value = undefined;\n\t    this._deferreds = [];\n\t\n\t    doResolve(fn, this);\n\t  }\n\t\n\t  function handle(self, deferred) {\n\t    while (self._state === 3) {\n\t      self = self._value;\n\t    }\n\t    if (self._state === 0) {\n\t      self._deferreds.push(deferred);\n\t      return;\n\t    }\n\t    self._handled = true;\n\t    Promise._immediateFn(function () {\n\t      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t      if (cb === null) {\n\t        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t        return;\n\t      }\n\t      var ret;\n\t      try {\n\t        ret = cb(self._value);\n\t      } catch (e) {\n\t        reject(deferred.promise, e);\n\t        return;\n\t      }\n\t      resolve(deferred.promise, ret);\n\t    });\n\t  }\n\t\n\t  function resolve(self, newValue) {\n\t    try {\n\t      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n\t        var then = newValue.then;\n\t        if (newValue instanceof Promise) {\n\t          self._state = 3;\n\t          self._value = newValue;\n\t          finale(self);\n\t          return;\n\t        } else if (typeof then === 'function') {\n\t          doResolve(bind(then, newValue), self);\n\t          return;\n\t        }\n\t      }\n\t      self._state = 1;\n\t      self._value = newValue;\n\t      finale(self);\n\t    } catch (e) {\n\t      reject(self, e);\n\t    }\n\t  }\n\t\n\t  function reject(self, newValue) {\n\t    self._state = 2;\n\t    self._value = newValue;\n\t    finale(self);\n\t  }\n\t\n\t  function finale(self) {\n\t    if (self._state === 2 && self._deferreds.length === 0) {\n\t      Promise._immediateFn(function() {\n\t        if (!self._handled) {\n\t          Promise._unhandledRejectionFn(self._value);\n\t        }\n\t      });\n\t    }\n\t\n\t    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t      handle(self, self._deferreds[i]);\n\t    }\n\t    self._deferreds = null;\n\t  }\n\t\n\t  function Handler(onFulfilled, onRejected, promise) {\n\t    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t    this.promise = promise;\n\t  }\n\t\n\t  /**\n\t   * Take a potentially misbehaving resolver function and make sure\n\t   * onFulfilled and onRejected are only called once.\n\t   *\n\t   * Makes no guarantees about asynchrony.\n\t   */\n\t  function doResolve(fn, self) {\n\t    var done = false;\n\t    try {\n\t      fn(function (value) {\n\t        if (done) return;\n\t        done = true;\n\t        resolve(self, value);\n\t      }, function (reason) {\n\t        if (done) return;\n\t        done = true;\n\t        reject(self, reason);\n\t      });\n\t    } catch (ex) {\n\t      if (done) return;\n\t      done = true;\n\t      reject(self, ex);\n\t    }\n\t  }\n\t\n\t  Promise.prototype['catch'] = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t  };\n\t\n\t  Promise.prototype.then = function (onFulfilled, onRejected) {\n\t    var prom = new (this.constructor)(noop);\n\t\n\t    handle(this, new Handler(onFulfilled, onRejected, prom));\n\t    return prom;\n\t  };\n\t\n\t  Promise.all = function (arr) {\n\t    var args = Array.prototype.slice.call(arr);\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      if (args.length === 0) return resolve([]);\n\t      var remaining = args.length;\n\t\n\t      function res(i, val) {\n\t        try {\n\t          if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t            var then = val.then;\n\t            if (typeof then === 'function') {\n\t              then.call(val, function (val) {\n\t                res(i, val);\n\t              }, reject);\n\t              return;\n\t            }\n\t          }\n\t          args[i] = val;\n\t          if (--remaining === 0) {\n\t            resolve(args);\n\t          }\n\t        } catch (ex) {\n\t          reject(ex);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < args.length; i++) {\n\t        res(i, args[i]);\n\t      }\n\t    });\n\t  };\n\t\n\t  Promise.resolve = function (value) {\n\t    if (value && typeof value === 'object' && value.constructor === Promise) {\n\t      return value;\n\t    }\n\t\n\t    return new Promise(function (resolve) {\n\t      resolve(value);\n\t    });\n\t  };\n\t\n\t  Promise.reject = function (value) {\n\t    return new Promise(function (resolve, reject) {\n\t      reject(value);\n\t    });\n\t  };\n\t\n\t  Promise.race = function (values) {\n\t    return new Promise(function (resolve, reject) {\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        values[i].then(resolve, reject);\n\t      }\n\t    });\n\t  };\n\t\n\t  // Use polyfill for setImmediate for performance gains\n\t  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n\t    function (fn) {\n\t      setTimeoutFunc(fn, 0);\n\t    };\n\t\n\t  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t    if (typeof console !== 'undefined' && console) {\n\t      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the immediate function to execute callbacks\n\t   * @param fn {function} Function to execute\n\t   * @deprecated\n\t   */\n\t  Promise._setImmediateFn = function _setImmediateFn(fn) {\n\t    Promise._immediateFn = fn;\n\t  };\n\t\n\t  /**\n\t   * Change the function to execute on unhandled rejection\n\t   * @param {function} fn Function to execute on unhandled rejection\n\t   * @deprecated\n\t   */\n\t  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t    Promise._unhandledRejectionFn = fn;\n\t  };\n\t  \n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = Promise;\n\t  } else if (!root.Promise) {\n\t    root.Promise = Promise;\n\t  }\n\t\n\t})(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10).setImmediate))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(7)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(9);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\t/**\r\n\t* @namespace SPScript.ajax\r\n\t*/\n\t\n\tvar defaults = {\n\t\tmethod: \"GET\",\n\t\tasync: true,\n\t\ttype: \"json\", //XMLHttpRequest.responseType\n\t\tdata: undefined\n\t};\n\t\n\tvar validMethods = [\"GET\", \"POST\", \"PUT\", \"HEAD\", \"DELETE\", \"PATCH\"];\n\t\n\tvar errorHandlers = [];\n\t\n\tvar validateOptions = function validateOptions(options) {\n\t\tif (!options || !options.url || validMethods.indexOf(options.method) < 0) return false;else return true;\n\t};\n\t\n\tvar setHeaders = function setHeaders(xhr, headersObj) {\n\t\tif (headersObj) {\n\t\t\tObject.keys(headersObj).forEach(function (key) {\n\t\t\t\txhr.setRequestHeader(key, headersObj[key]);\n\t\t\t});\n\t\t}\n\t};\n\t\n\t/**\r\n\t * Performs and AJAX request based on options you pass you. Your options must at least have a url.\r\n\t * @param {object} options - Request options like { url, headers, method };\r\n\t * @returns {Promise} - A ES6 Promise that resolves or rejects when the request comes back\r\n\t * @function ajax\r\n\t * @memberof SPScript.ajax\r\n\t * @example\r\n\t * var ajaxOptions = { \r\n\t *    url: '/_api/web/contentTypes', \r\n\t *    method: \"GET\", \r\n\t *    headers: { Accept: \"application/json;odata=verbose\" } \r\n\t * };\r\n\t * SPScript.utils.ajax(ajaxOptions)\r\n\t *\t\t.then(SPScript.utils.parseJSON)\r\n\t *\t\t.then(function(data){ console.log(data.d.results) })\r\n\t *\t\t.catch(function(error) { console.log(error)})\r\n\t */\n\tvar ajax = function ajax(options) {\n\t\tvar opts = _extends({}, defaults, options);\n\t\tif (!validateOptions(options)) return Promise.reject(new Error(\"Invalid options passed into ajax call.\"));\n\t\n\t\tvar xhr = new XMLHttpRequest();\n\t\tif (xhr == null) return Promise.reject(new Error(\"Your browser doesn't support XMLHttpRequest (ajax).\"));\n\t\n\t\txhr.open(opts.method, opts.url, opts.async);\n\t\tsetHeaders(xhr, opts.headers);\n\t\txhr.responseType = opts.type;\n\t\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t//completed\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\t// SUCCESS\n\t\t\t\t\tif (xhr.status < 400 && xhr.status >= 100) {\n\t\t\t\t\t\tif (xhr.status >= 200 && xhr.status < 300 && xhr.status !== 204) {\n\t\t\t\t\t\t\tresolve(xhr.response || xhr.responseText);\n\t\t\t\t\t\t} else resolve(xhr.response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar error = new Error(\"AJAX Request Error: Response Code = \" + xhr.status);\n\t\t\t\t\t\terror.statusCode = xhr.status;\n\t\t\t\t\t\terror.body = xhr.response;\n\t\t\t\t\t\terrorHandlers.forEach(function (fn) {\n\t\t\t\t\t\t\treturn fn(error, xhr);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\txhr.send(opts.data);\n\t\t});\n\t};\n\t\n\tajax.addErrorHandler = function (fn) {\n\t\treturn errorHandlers.push(fn);\n\t};\n\tajax.setDefaults = function (options) {\n\t\treturn _extends(defaults, options);\n\t};\n\t\n\tmodule.exports = ajax;\n\t//# sourceMappingURL=ajax.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar utils = __webpack_require__(1);\n\t\n\t/**\r\n\t * Allows you to to check on the security of a list or site. You shouldn't be creating instances of the this class, you will get it from the Web or List class.\r\n\t * @class\r\n\t * @param {string} baseUrl - Url to the securable\r\n\t * @param {IBaseDao} dao - Data access object used to make requests.\r\n\t * @example <caption>Access Permissions class using the 'permissions' property on a Web</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t *\r\n\t * dao.web.permissions.getRoleAssignments()\r\n\t *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n\t * @example <caption>Access Permissions class using the 'permissions' property on a List</caption>\r\n\t * dao.lists(\"Restricted Library\").permissions.getRoleAssignments()\r\n\t *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n\t */\n\tvar Permissions = function Permissions(baseUrl, dao) {\n\t   this._dao = dao;\n\t   this.baseUrl = baseUrl;\n\t};\n\t\n\t/**\r\n\t * Gets all the role assignments on that securable\r\n\t * @returns {Promise<Array<RoleAssignment>>} - A Promise that resolves to an array of role assignments\r\n\t * @example\r\n\t * dao.web.permissions.getRoleAssignments()\r\n\t *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n\t */\n\tPermissions.prototype.getRoleAssignments = function () {\n\t   var url = this.baseUrl + \"/RoleAssignments?$expand=Member,RoleDefinitionBindings\";\n\t   return this._dao.get(url).then(utils.validateODataV2).then(function (results) {\n\t      return results.map(transforms.roleAssignment);\n\t   });\n\t};\n\t\n\t/**\r\n\t * Gets all the role assignments on that securable. If you don't pass an email, it will use the current user.\r\n\t * @param {string} [email] - If you don't pass an email it will use current user\r\n\t * @returns {Promise<Array>} - A Promise that resolves to an array of string base permission values\r\n\t * @example <caption>Get the current users permissions on a site</caption>\r\n\t * dao.web.permissions.check()\r\n\t *     .then(function(basePermissions) { console.log(basePermissions) });\r\n\t * @example <caption>Get a specified user's permissions on a list</caption>\r\n\t * var email = \"andrew@andrewpetersen.onmicrosoft.com\"\r\n\t * dao.lists(\"Restricted Library\").permissions.check(email)\r\n\t *     .then(function(basePermissions) { console.log(basePermissions) });\r\n\t */\n\tPermissions.prototype.check = function (email) {\n\t   var _this = this;\n\t\n\t   var checkPrivs = function checkPrivs(user) {\n\t      var login = encodeURIComponent(user.LoginName);\n\t      var url = _this.baseUrl + \"/getusereffectivepermissions(@v)?@v='\" + login + \"'\";\n\t      return _this._dao.get(url).then(utils.validateODataV2);\n\t   };\n\t\n\t   //if no email, and no current user id, reject\n\t   if (!email && !utils.isBrowser()) {\n\t      return Promise.reject(\"Can't Check Permissions.  No email passed and no current user\");\n\t   }\n\t\n\t   // If no email is passed, then get current user, else get user by email\n\t   var req = !email ? this._dao.get('/web/getuserbyid(' + _spPageContextInfo.userId + ')').then(function (data) {\n\t      return data.d;\n\t   }) : this._dao.web.getUser(email);\n\t\n\t   return req.then(checkPrivs).then(function (privs) {\n\t      return permissionMaskToStrings(privs.GetUserEffectivePermissions.Low, privs.GetUserEffectivePermissions.High);\n\t   });\n\t};\n\t\n\t/**\r\n\t * Represents a permission on the securable\r\n\t * @typedef {Object} RoleMember\r\n\t * @property {string} login - Login Name\r\n\t * @property {string} name - User or Group title\r\n\t * @property {string} id - Member Id\r\n\t */\n\t\n\t/**\r\n\t * Represents a permission on the securable\r\n\t * @typedef {Object} RoleDef\r\n\t * @property {string} name - Role Definition name\r\n\t * @property {string} description - Role Definition description\r\n\t * @property {Array} basePermissions - Array of base permission strings\r\n\t */\n\t\n\t/**\r\n\t * Represents a permission on the securable\r\n\t * @typedef {Object} RoleAssignment\r\n\t * @property {RoleMember} member - User or group\r\n\t * @property {Array<RoleDef>} roles - An array of role definitions\r\n\t */\n\tvar transforms = {\n\t   roleAssignment: function roleAssignment(raw) {\n\t      var priv = {\n\t         member: {\n\t            login: raw.Member.LoginName,\n\t            name: raw.Member.Title,\n\t            id: raw.Member.Id\n\t         }\n\t      };\n\t      priv.roles = raw.RoleDefinitionBindings.results.map(function (roleDef) {\n\t         return {\n\t            name: roleDef.Name,\n\t            description: roleDef.Description,\n\t            basePermissions: permissionMaskToStrings(roleDef.BasePermissions.Low, roleDef.BasePermissions.High)\n\t         };\n\t      });\n\t      return priv;\n\t   }\n\t};\n\t\n\tvar permissionMaskToStrings = function permissionMaskToStrings(lowMask, highMask) {\n\t   var basePermissions = [];\n\t   spBasePermissions.forEach(function (basePermission) {\n\t      if ((basePermission.low & lowMask) > 0 || (basePermission.high & highMask) > 0) {\n\t         basePermissions.push(basePermission.name);\n\t      }\n\t   });\n\t   return basePermissions;\n\t};\n\t\n\t// Scraped it from SP.PermissionKind. \n\t// Storing it in here to remove sp.js dependency\n\t\n\t// var basePermissions = [];\n\t// Object.keys(SP.PermissionKind).forEach(function(key) { \n\t// \tvar perm = new SP.BasePermissions();\n\t//     perm.set(SP.PermissionKind[key]);\n\t//     var permisison = {\n\t//     \tname: key,\n\t//     \tlow: perm.$A_1,\n\t//     \thigh: perm.$9_1\n\t//     };\n\t//     basePermissions.push(permisison);\n\t// });\n\t\n\tvar spBasePermissions = [{\n\t   \"name\": \"emptyMask\",\n\t   \"low\": 0,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"viewListItems\",\n\t   \"low\": 1,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"addListItems\",\n\t   \"low\": 2,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"editListItems\",\n\t   \"low\": 4,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"deleteListItems\",\n\t   \"low\": 8,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"approveItems\",\n\t   \"low\": 16,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"openItems\",\n\t   \"low\": 32,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"viewVersions\",\n\t   \"low\": 64,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"deleteVersions\",\n\t   \"low\": 128,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"cancelCheckout\",\n\t   \"low\": 256,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"managePersonalViews\",\n\t   \"low\": 512,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"manageLists\",\n\t   \"low\": 2048,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"viewFormPages\",\n\t   \"low\": 4096,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"anonymousSearchAccessList\",\n\t   \"low\": 8192,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"open\",\n\t   \"low\": 65536,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"viewPages\",\n\t   \"low\": 131072,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"addAndCustomizePages\",\n\t   \"low\": 262144,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"applyThemeAndBorder\",\n\t   \"low\": 524288,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"applyStyleSheets\",\n\t   \"low\": 1048576,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"viewUsageData\",\n\t   \"low\": 2097152,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"createSSCSite\",\n\t   \"low\": 4194304,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"manageSubwebs\",\n\t   \"low\": 8388608,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"createGroups\",\n\t   \"low\": 16777216,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"managePermissions\",\n\t   \"low\": 33554432,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"browseDirectories\",\n\t   \"low\": 67108864,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"browseUserInfo\",\n\t   \"low\": 134217728,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"addDelPrivateWebParts\",\n\t   \"low\": 268435456,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"updatePersonalWebParts\",\n\t   \"low\": 536870912,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"manageWeb\",\n\t   \"low\": 1073741824,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"anonymousSearchAccessWebLists\",\n\t   \"low\": -2147483648,\n\t   \"high\": 0\n\t}, {\n\t   \"name\": \"useClientIntegration\",\n\t   \"low\": 0,\n\t   \"high\": 16\n\t}, {\n\t   \"name\": \"useRemoteAPIs\",\n\t   \"low\": 0,\n\t   \"high\": 32\n\t}, {\n\t   \"name\": \"manageAlerts\",\n\t   \"low\": 0,\n\t   \"high\": 64\n\t}, {\n\t   \"name\": \"createAlerts\",\n\t   \"low\": 0,\n\t   \"high\": 128\n\t}, {\n\t   \"name\": \"editMyUserInfo\",\n\t   \"low\": 0,\n\t   \"high\": 256\n\t}, {\n\t   \"name\": \"enumeratePermissions\",\n\t   \"low\": 0,\n\t   \"high\": 1073741824\n\t}];\n\t\n\tmodule.exports = Permissions;\n\t//# sourceMappingURL=permissions.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar qs = __webpack_require__(57);\n\t\n\t/**\r\n\t* @namespace SPScript.queryString\r\n\t*/\n\t\n\t/**\r\n\t * Turns a normal js Object into a string in form of \"key1=value1&key2=value2...\"\r\n\t * @param {Object} obj - Javascript object to query stringify\r\n\t * @param {bool} [[quoteValues]] - By default, if the value has a space, it will be single quoted. Passing true will cause all values to be quoted.\r\n\t * @returns {string} - Note: tt does NOT prepend '?' char\r\n\t * @function fromObj\r\n\t * @memberof SPScript.queryString\r\n\t * @example\r\n\t * var myObj = { id: 123, title: \"My Title\" }\r\n\t * var qs = SPScript.queryString.fromObj(myObj);\r\n\t * // qs would output: \"id=123&title='MyTitle'\"\r\n\t */\n\tvar fromObj = exports.fromObj = function (obj, quoteValues) {\n\t\n\t  var writeParam = function writeParam(key) {\n\t    var value = (obj[key] + \"\").trim();\n\t    // if there is a space, wrap in single quotes\n\t    if (value.indexOf(\" \") > -1 || quoteValues) value = \"'\" + value + \"'\";\n\t\n\t    return key + \"=\" + value;\n\t  };\n\t\n\t  var str = Object.keys(obj).map(writeParam).join(\"&\");\n\t  return str;\n\t};\n\t\n\t/**\r\n\t * Turns a string in form of \"key1=value1&key2=value2...\" into a javascript object\r\n\t * @param {string} str - must be in query string format to work\r\n\t * @returns {Object} - A javascript object with properties for each key found in the query string passed in.\r\n\t * @function toObj\r\n\t * @memberof SPScript.queryString\r\n\t * @example\r\n\t * // your url is \"https://sharepoint.com/sites/mysite/home.aspx?id=123&title='My Title'\"\r\n\t * var myObj = SPScript.queryString.toObj(window.location.search);\r\n\t * //myObj would be { id: 123, title: \"My Title\" }\r\n\t */\n\tvar toObj = exports.toObj = function (str) {\n\t  //if no string is passed use window.location.search\n\t  if (str === undefined && window && window.location && window.location.search) {\n\t    str = window.location.search;\n\t  }\n\t  if (!str) return {};\n\t  //trim off the leading '?' if its there\n\t  if (str[0] === \"?\") str = str.substr(1);\n\t\n\t  return qs.parse(str);\n\t};\n\t\n\texports.contains = function (key, text) {\n\t  return toObj(text).hasOwnProperty(key);\n\t};\n\texports.getValue = function (key, text) {\n\t  return toObj(text)[key] || \"\";\n\t};\n\t//# sourceMappingURL=queryString.js.map\n\n/***/ }),\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar List = __webpack_require__(24);\n\tvar Web = __webpack_require__(28);\n\tvar Profiles = __webpack_require__(25);\n\tvar Search = __webpack_require__(27);\n\tvar utils = __webpack_require__(1);\n\tvar CustomActions = __webpack_require__(22);\n\tvar headerUtils = __webpack_require__(2);\n\t/**\r\n\t * Abstract class. You'll never work with this directly. \r\n\t * @abstract\r\n\t * @private\r\n\t * @property {Web} web - Allows interacting with the SharePoint site you connected to\r\n\t * @property {Search} search - Allows querying through the SP Search Service\r\n\t * @property {Profiles} profiles - Allows interacting with the SP Profile Service\r\n\t */\n\tvar BaseDao = function BaseDao() {\n\t\tthis.web = new Web(this);\n\t\tthis.search = new Search(this);\n\t\tthis.profiles = new Profiles(this);\n\t\tthis.customActions = new CustomActions(this);\n\t};\n\t\n\tBaseDao.prototype.executeRequest = function () {\n\t\tthrow \"Not implemented exception\";\n\t};\n\t\n\t/**\r\n\t * Generic helper to make AJAX GET request\r\n\t  * @example <caption>Use generic GET method to retrieve a site's content types</caption>\r\n\t * dao.get('/web/contentTypes').then(function(data) { console.log(data.d.results)})\r\n\t * @param {string} relativeQueryUrl - the API url relative to \"/_api\"\r\n\t * @param {Object} [extendedOptions] - AJAX options (like custom request headers)\r\n\t * @returns {Promise} - An ES6 Promise that resolves to the an object probably in the form of data.d\r\n\t */\n\tBaseDao.prototype.get = function (relativeQueryUrl, extendedOptions) {\n\t\tvar options = _extends({}, {\n\t\t\tmethod: \"GET\"\n\t\t}, extendedOptions);\n\t\treturn this.executeRequest(relativeQueryUrl, options).then(utils.parseJSON);\n\t};\n\t\n\tBaseDao.prototype.getRequestDigest = function () {\n\t\treturn this.post('/contextinfo', {}).then(function (data) {\n\t\t\treturn data.d.GetContextWebInformation.FormDigestValue;\n\t\t});\n\t};\n\t/**\r\n\t * If a list name is passed, an SPScript.List object, otherwise performs a request to get all the site's lists\r\n\t * @param {string} [listname] - If a list name is passed, method is synchronous returning an SPScript.List\r\n\t * @returns {List|Promise} - SPScript.List object or a Promise that resolves to an Array of lists\r\n\t * @example <caption>Option 1: No List Name gets all the lists of a site</caption>\r\n\t * dao.lists().then(function(lists) { console.log(lists)});\r\n\t * @example <caption>Option 2: Pass a List Name to get a list object</caption>\r\n\t * var list = dao.lists('MyList');\r\n\t * list.getItemById(12).then(function(item) { console.log(item)});\r\n\t */\n\tBaseDao.prototype.lists = function (listname) {\n\t\tif (!listname) {\n\t\t\treturn this.get(\"/web/lists\").then(utils.validateODataV2);\n\t\t}\n\t\treturn new List(listname, this);\n\t};\n\t\n\t/**\r\n\t * Generic helper to make AJAX POST request\r\n\t * @param {string} relativeQueryUrl - the API url relative to \"/_api\"\r\n\t * @param {Object} [extendedOptions] - AJAX options (like custom request headers)\r\n\t * @returns {Promise} - An ES6 Promise\r\n\t */\n\tBaseDao.prototype.post = function (relativePostUrl, body, opts) {\n\t\tbody = packagePostBody(body, opts);\n\t\tvar options = {\n\t\t\tmethod: \"POST\",\n\t\t\tdata: body\n\t\t};\n\t\toptions = _extends({}, options, opts);\n\t\treturn this.executeRequest(relativePostUrl, options).then(utils.parseJSON);\n\t};\n\t\n\tBaseDao.prototype.authorizedPost = function (relativePostUrl, body, verb) {\n\t\tvar _this = this;\n\t\n\t\treturn this.getRequestDigest().then(function (digest) {\n\t\t\treturn headerUtils.getActionHeaders(verb, digest);\n\t\t}).then(function (headers) {\n\t\t\treturn _this.post(relativePostUrl, body, { headers: headers });\n\t\t});\n\t};\n\t\n\tBaseDao.prototype.ensureRequestDigest = function (digest) {\n\t\treturn digest ? Promise.resolve(digest) : this.getRequestDigest();\n\t};\n\t\n\t//Skip stringify it its already a string or it has an explicit Content-Type that is not JSON\n\tvar packagePostBody = function packagePostBody(body, opts) {\n\t\t// if its already a string just return\n\t\tif (typeof body === \"string\") return body;\n\t\t// if it has an explicit content-type, asssume the body is already that type\n\t\tif (opts && opts.headers && opts.headers[\"Content-Type\"] && opts.headers[\"Content-Type\"].indexOf(\"json\") === -1) {\n\t\t\treturn body;\n\t\t}\n\t\t//others stringify\n\t\treturn JSON.stringify(body);\n\t};\n\tmodule.exports = BaseDao;\n\t//# sourceMappingURL=baseDao.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction createFormFieldRenderer(field) {\n\t    return function (ctx) {\n\t        var formCtx = ctx.FormContext;\n\t        // need to clone ctx, it is getting overwritten so we lost CurrentItem\n\t        var clonedCtx = _extends({}, ctx);\n\t        if (field.onReady) {\n\t            if (formCtx) {\n\t                formCtx.registerInitCallback(field.name, field.onReady.bind(null, clonedCtx));\n\t            } else {\n\t                setTimeout(field.onReady.bind(null, clonedCtx), 100);\n\t            }\n\t        }\n\t        if (field.getValue && formCtx) {\n\t            formCtx.registerGetValueCallback(field.name, field.getValue.bind(null, clonedCtx));\n\t        }\n\t        // tack on 'setValue' function\n\t        if (formCtx && formCtx.updateControlValue) {\n\t            field.setValue = function (value) {\n\t                formCtx.updateControlValue(field.name, value);\n\t            };\n\t        }\n\t\n\t        return field.render(ctx);\n\t    };\n\t}\n\t\n\tfunction createDisplayFieldRenderer(field) {\n\t    return function (ctx) {\n\t        var formCtx = ctx.FormContext;\n\t        if (formCtx && formCtx.registerInitCallback && field.onReady) {\n\t            formCtx.registerInitCallback(field.name, field.onReady);\n\t        }\n\t        return field.render(ctx);\n\t    };\n\t}\n\t\n\tvar renderers = {\n\t    formField: {\n\t        create: createFormFieldRenderer\n\t    },\n\t    displayField: {\n\t        create: createDisplayFieldRenderer\n\t    }\n\t};\n\t\n\tmodule.exports = renderers;\n\t//# sourceMappingURL=csr-renderers.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar renderers = exports.renderers = __webpack_require__(20);\n\t\n\t//fieldComponent = { name, onReady, render, getValue, locations:[\"View\", \"NewForm\",\"DisplayForm\", \"EditForm\"] }\n\t// var renderColoredStatus = function(ctx) {\n\t//     // map statuses  to colors\n\t//     var colors = {\n\t//         \"Not Started\": \"orange\",\n\t//         \"In Progress\": \"yellow\",\n\t//         \"Done\": \"green\"\n\t//     };\n\t\n\t//     // Look at the item's status to get the mapped color\n\t//     // If the item has a status value that is not mapped, then use 'red'\n\t//     var color = colors[ctx.CurrentItem.Status] || \"red\";\n\t\n\t//     // return the html used to render the status field;\n\t//     return \"<h4 style='color:\" + color + \"'>\" + ctx.CurrentItem.Status + \"</h4>\";\n\t// };\n\t\n\t// var fieldOverride = {\n\t//     name:  \"Status\",\n\t//     render: renderColoredStatus\n\t// };\n\t\n\t// SPScript.CSR.registerDisplayField(fieldOverride);\n\t\n\tvar registerFormField = exports.registerFormField = function (fieldComponent, opts) {\n\t    var renderer = renderers.formField.create(fieldComponent);\n\t    fieldComponent.locations = fieldComponent.locations || [\"NewForm\", \"EditForm\"];\n\t    return registerField(fieldComponent, renderer, opts);\n\t};\n\t\n\t//{name, onReady, render, locations: [\"View\", \"DisplayForm\"]}\n\tvar registerDisplayField = exports.registerDisplayField = function (fieldComponent, opts) {\n\t    var renderer = renderers.displayField.create(fieldComponent);\n\t    fieldComponent.locations = fieldComponent.locations || [\"View\", \"DisplayForm\"];\n\t    return registerField(fieldComponent, renderer, opts);\n\t};\n\t\n\tvar registerField = exports.registerField = function (field, renderer, opts) {\n\t    var renderers = {};\n\t    //View, DisplayForm, EditForm, NewForm\n\t    field.locations.forEach(function (l) {\n\t        return renderers[l] = renderer;\n\t    });\n\t    var defaults = {\n\t        Templates: {\n\t            Fields: {}\n\t        }\n\t    };\n\t    var templateOverride = _extends({}, defaults, opts);\n\t    templateOverride.Templates.Fields[field.name] = renderers;\n\t    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\n\t    return field;\n\t};\n\t\n\tvar registerView = exports.registerView = function (templates, options) {\n\t    // templates keys are Header, Item, Footer\n\t    //RenderFieldTemplateDefault(ctx); default renderer?\n\t    var defaults = {\n\t        //BaseViewID\n\t        //ListTemplateType\n\t        Templates: {\n\t            Header: function Header() {\n\t                return \"\";\n\t            },\n\t            Footer: function Footer() {\n\t                return \"\";\n\t            }\n\t        }\n\t    };\n\t\n\t    var templateOverride = _extends({}, defaults, options);\n\t    templateOverride.Templates = _extends({}, templateOverride.Templates, templates);\n\t\n\t    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\n\t};\n\t//# sourceMappingURL=csr.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar utils = __webpack_require__(1);\n\tvar headers = __webpack_require__(2);\n\t\n\tvar metadata = {\n\t\t__metadata: {\n\t\t\t\"type\": \"SP.UserCustomAction\"\n\t\t}\n\t};\n\t\n\tvar CustomActions = function CustomActions(dao) {\n\t\tvar _this = this;\n\t\n\t\tthis._dao = dao;\n\t\n\t\tthis.scopes = {\n\t\t\t\"Web\": {\n\t\t\t\tid: 3,\n\t\t\t\tname: \"Web\",\n\t\t\t\turl: \"/web/usercustomactions\"\n\t\t\t},\n\t\t\t\"Site\": {\n\t\t\t\tid: 2,\n\t\t\t\tname: \"Site\",\n\t\t\t\turl: \"/site/usercustomactions\"\n\t\t\t}\n\t\t};\n\t\tthis.scopes.getById = function (id) {\n\t\t\treturn id === 2 ? _this.scopes.Site : _this.scopes.Web;\n\t\t};\n\t};\n\t\n\t// \n\t// If a name is passed, filter the result set\n\tCustomActions.prototype.get = function (name) {\n\t\tvar _this2 = this;\n\t\n\t\t// first get the site scoped ones, then the web scoped ones\n\t\treturn this._dao.get(this.scopes.Site.url).then(utils.validateODataV2).then(function (siteCustomActions) {\n\t\t\treturn _this2._dao.get(_this2.scopes.Web.url).then(utils.validateODataV2)\n\t\t\t//combine site scoped and web scoped into single array\n\t\t\t.then(function (webCustomActions) {\n\t\t\t\treturn siteCustomActions.concat(webCustomActions);\n\t\t\t});\n\t\t}).then(function (customActions) {\n\t\t\t// if a name was passed filter it otherwise return everything\n\t\t\tif (name) {\n\t\t\t\tvar matches = customActions.filter(function (a) {\n\t\t\t\t\treturn a.Name === name;\n\t\t\t\t});\n\t\t\t\tif (matches.length) {\n\t\t\t\t\treturn matches[0];\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"Unable to find Custom Action with name: \" + name);\n\t\t\t} else return customActions;\n\t\t});\n\t};\n\t\n\tCustomActions.prototype._getUrl = function (name) {\n\t\tvar _this3 = this;\n\t\n\t\treturn this.get(name).then(function (a) {\n\t\t\treturn _this3.scopes.getById(a.Scope).url + \"('\" + a.Id + \"')\";\n\t\t});\n\t};\n\t\n\tCustomActions.prototype._getUrlAndDigest = function (name) {\n\t\tvar _this4 = this;\n\t\n\t\tvar prep = {};\n\t\treturn this._getUrl(name).then(function (url) {\n\t\t\tprep.url = url;\n\t\t\treturn _this4._dao.getRequestDigest();\n\t\t}).then(function (digest) {\n\t\t\tprep.digest = digest;\n\t\t\treturn prep;\n\t\t});\n\t};\n\t\n\tCustomActions.prototype.update = function (updates) {\n\t\tvar _this5 = this;\n\t\n\t\tif (!updates || !updates.Name) throw new Error(\"You must at least pass a Custom Action 'Name'\");\n\t\n\t\treturn this._getUrlAndDigest(updates.Name).then(function (prep) {\n\t\t\tupdates = _extends({}, metadata, updates);\n\t\t\tvar opts = {\n\t\t\t\theaders: headers.getUpdateHeaders(prep.digest)\n\t\t\t};\n\t\t\treturn _this5._dao.post(prep.url, updates, opts);\n\t\t});\n\t};\n\t\n\tCustomActions.prototype.remove = function (name) {\n\t\tvar _this6 = this;\n\t\n\t\tif (!name) throw new Error(\"You must at least pass a Custom Action 'Name'\");\n\t\treturn this._getUrlAndDigest(name).then(function (prep) {\n\t\t\tvar opts = {\n\t\t\t\theaders: headers.getDeleteHeaders(prep.digest)\n\t\t\t};\n\t\t\treturn _this6._dao.post(prep.url, {}, opts);\n\t\t});\n\t};\n\t\n\tCustomActions.prototype.add = function (customAction) {\n\t\tvar _this7 = this;\n\t\n\t\tif (!customAction || !customAction.Name || !customAction.Location) throw new Error(\"You must at least pass a Custom Action 'Name' and 'Location'\");\n\t\tcustomAction.Scope = customAction.Scope || \"Web\";\n\t\treturn this._dao.getRequestDigest().then(function (digest) {\n\t\t\tcustomAction = _extends({}, metadata, customAction);\n\t\t\tvar scope = _this7.scopes[customAction.Scope];\n\t\t\tcustomAction.Scope = scope.id;\n\t\t\tvar opts = {\n\t\t\t\theaders: headers.getAddHeaders(digest)\n\t\t\t};\n\t\t\treturn _this7._dao.post(scope.url, customAction, opts);\n\t\t});\n\t};\n\t\n\tCustomActions.prototype.addScriptLink = function (name, url, opts) {\n\t\tvar customAction = {\n\t\t\tName: name,\n\t\t\tTitle: name,\n\t\t\tDescription: name,\n\t\t\tGroup: name,\n\t\t\tSequence: 100,\n\t\t\tScope: \"Web\",\n\t\t\tLocation: \"ScriptLink\",\n\t\t\tScriptSrc: url\n\t\t};\n\t\tcustomAction = _extends({}, customAction, opts || {});\n\t\n\t\treturn this.add(customAction);\n\t};\n\t\n\tCustomActions.prototype.addCSSLink = function (name, url, opts) {\n\t\tvar scriptBlockStr = \"\\n\\t\\t(function() {\\n\\t\\t\\tvar head = document.querySelector(\\\"head\\\");\\n\\t\\t\\tvar styleTag = document.createElement(\\\"style\\\");\\n\\t\\t\\tstyleTag.appendChild(document.createTextNode(\\\"body { opacity: 0 }\\\"));\\n\\t\\t\\t\\n\\t\\t\\tvar linkTag = document.createElement(\\\"link\\\");\\n\\t\\t\\tlinkTag.rel = \\\"stylesheet\\\";\\tlinkTag.href = \\\"\" + url + \"\\\"; linkTag.type = \\\"text/css\\\";\\n\\t\\t\\tlinkTag.addEventListener(\\\"load\\\", function() {\\n\\t\\t\\t\\thead.removeChild(styleTag);\\n\\t\\t\\t});\\n\\n\\t\\t\\thead.appendChild(styleTag);\\n\\t\\t\\thead.appendChild(linkTag);\\n\\t\\t})();\";\n\t\n\t\tvar customAction = {\n\t\t\tName: name,\n\t\t\tTitle: name,\n\t\t\tDescription: name,\n\t\t\tGroup: name,\n\t\t\tSequence: 100,\n\t\t\tScope: \"Web\",\n\t\t\tLocation: \"ScriptLink\",\n\t\t\tScriptBlock: scriptBlockStr\n\t\t};\n\t\tcustomAction = _extends({}, customAction, opts || {});\n\t\n\t\treturn this.add(customAction);\n\t};\n\tCustomActions.metadata = metadata;\n\t\n\tmodule.exports = CustomActions;\n\t//# sourceMappingURL=customActions.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar utils = __webpack_require__(1);\n\t\n\t/**\r\n\t * Represents a SharePoint Folder.  Keep in mind, and File or Folder objects obtained from the 'files' and 'folders' array will not have their child items populated.\r\n\t * @typedef Folder\r\n\t * @property {string} name - Folder name\r\n\t * @property {string} serverRelativeUrl - Server relative url\r\n\t * @property {int} itemCount - Number of items in the folder\r\n\t * @property {string} guid - Unique ID of the folder\r\n\t * @property {string} uri - API url to get the raw SP.Folder object\r\n\t * @property {Array<File>} files - An array of files in that folder\r\n\t * @property {Array<Folder>} folders - An array of sub folders\r\n\t * @example\r\n\t *  dao.web.getFolder(\"/sites/mysite/Shared Documents\")\r\n\t *\t\t\t.then(function(folder) { \r\n\t *\t\t\t\tconsole.log(folder.name);\r\n\t *\t\t\t\tconsole.log(folder.files);\r\n\t *\t\t\t});\r\n\t */\n\tvar Folder = function Folder(spFolder) {\n\t  this.mapProperties(spFolder);\n\t  this.populateChildren(spFolder);\n\t};\n\t\n\tFolder.prototype.populateChildren = function (spFolder) {\n\t  if (spFolder && spFolder.Folders && spFolder.Folders.results) {\n\t    this.folders = spFolder.Folders.results.map(function (f) {\n\t      return new Folder(f);\n\t    });\n\t  }\n\t  if (spFolder && spFolder.Files && spFolder.Files.results) {\n\t    this.files = spFolder.Files.results.map(function (f) {\n\t      return new File(f);\n\t    });\n\t  }\n\t};\n\t\n\tFolder.prototype.mapProperties = function (spFolder) {\n\t  this.name = spFolder.Name;\n\t  this.serverRelativeUrl = spFolder.ServerRelativeUrl;\n\t  this.itemCount = spFolder.ItemCount;\n\t  this.guid = spFolder.UniqueId;\n\t  this.uri = spFolder.__metadata.uri;\n\t};\n\t\n\t/**\r\n\t * Represents a SharePoint File\r\n\t * @typedef File\r\n\t * @property {string} name - Folder name\r\n\t * @property {string} title - Folder title\r\n\t * @property {string} serverRelativeUrl - Server relative url\r\n\t * @property {int} byteLength - File size in bytes\r\n\t * @property {string} checkoutType - Checked out status of file.  \"none\", \"offline\", \"online\".\r\n\t * @property {number} majorVersion - Major version of the file\r\n\t * @property {number} minorVersion - Minor version of the file\r\n\t * @property {string} uri - API url to get the raw SP.Folder object\r\n\t * @example\r\n\t *  dao.web.getFile(\"/sites/mysite/Shared Documents/myFile.docx\")\r\n\t *\t\t\t.then(function(file) { \r\n\t *\t\t\t\tconsole.log(file.name);\r\n\t *\t\t\t\tconsole.log(\"Size:\" + (file.byteLength / 1000) + \"KB\");\r\n\t *\t\t\t});\r\n\t */\n\tvar File = function File(spFile) {\n\t  this.mapProperties(spFile);\n\t};\n\t\n\tFile.prototype.mapProperties = function (spFile) {\n\t  this.name = spFile.Name, this.title = spFile.Title, this.checkoutType = spFile.CheckOutType, this.byteLength = spFile.Length, this.majorVersion = spFile.MajorVersion, this.minorVersion = spFile.MinorVersion, this.serverRelativeUrl = spFile.ServerRelativeUrl, this.uri = spFile.__metadata.uri;\n\t};\n\t\n\tmodule.exports = {\n\t  File: File,\n\t  Folder: Folder\n\t};\n\t//# sourceMappingURL=filesystem.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar utils = __webpack_require__(1);\n\tvar Permissions = __webpack_require__(12);\n\tvar headers = __webpack_require__(2);\n\t\n\t/**\r\n\t * Represents a SharePoint list. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n\t * @class\r\n\t * @param {IBaseDao} dao - Data access object used to make requests.\r\n\t * @property {Permissions} permissions - allows checking security information of the Web\r\n\t * @property {string} baseUrl - API relative url (value = \"/web\")\r\n\t * @example <caption>You access a 'List' by passing a name to the 'lists' property of the dao.</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t * var list = dao.lists(\"Tasks\");\r\n\t * list.getItemById(12).then(function(item) { console.log(item) });\r\n\t */\n\tvar List = function List(listname, dao) {\n\t\tthis.listname = listname;\n\t\tthis.baseUrl = \"/web/lists/getbytitle('\" + listname + \"')\";\n\t\tthis._dao = dao;\n\t\tthis.permissions = new Permissions(this.baseUrl, this._dao);\n\t};\n\t\n\tList.prototype.getFields = function (odataQuery) {\n\t\tvar url = this.baseUrl + \"/fields\" + appendOData(odataQuery);\n\t\treturn this._dao.get(url).then(utils.validateODataV2);\n\t};\n\t\n\tList.prototype.getField = function (fieldName) {\n\t\treturn this.getFields(\"$filter=InternalName eq '\" + fieldName + \"'\").then(function (fields) {\n\t\t\tif (fields.length) return fields[0];else throw new Error(\"Unable to find field: \" + fieldName);\n\t\t});\n\t};\n\t\n\tList.prototype.updateField = function (fieldName, updates) {\n\t\tvar _this = this;\n\t\n\t\tthis.getField(fieldName).then(function (f) {\n\t\t\tvar url = _this.baseUrl + \"/Fields(guid'\" + f.Id + \"')\";\n\t\t\tupdates.__metadata = { type: \"SP.Field\" };\n\t\t\treturn _this._dao.authorizedPost(url, updates, \"MERGE\");\n\t\t});\n\t};\n\t/**\r\n\t * Retrieves items in the lists\r\n\t * @param {string} [odata] - OData string\r\n\t * @returns {Promise<Array>} - A Promise that resolves an array of list items\r\n\t * @example <caption>Get all items</caption>\r\n\t * list.getItems().then(function(items) { console.log(items) });\r\n\t * @example <caption>Get first 5 items by passing in optional OData.</caption>\r\n\t * list.getItems(\"$top=5\").then(function(items) { console.log(items) });\r\n\t */\n\tList.prototype.getItems = function (odataQuery) {\n\t\treturn this._dao.get(this.baseUrl + \"/items\" + appendOData(odataQuery)).then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Retrieves a specific item based on SharePoint ID\r\n\t * @param {int} id - SharePoint integer Id\r\n\t * @param {string} [odata] - OData string\r\n\t * @returns {Promise} - A Promise that resolves to a single list item\r\n\t * @example <caption>Get the item with ID of 5.</caption>\r\n\t * list.getItemById(5).then(function(item) { console.log(item) });\r\n\t * @example <caption>Only bring back 'Title' and 'Status' using optional OData string</caption>\r\n\t * list.getItemById(5, \"$select=Title,Status\").then(function(items) { console.log(items) });\r\n\t */\n\tList.prototype.getItemById = function (id, odata) {\n\t\tvar url = this.baseUrl + \"/items(\" + id + \")\" + appendOData(odata);\n\t\treturn this._dao.get(url).then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Retrieves basic information about the list\r\n\t * @returns {Promise<SP.Web>} - A Promise that resolves to an object containing non-deferred properties of an SP.List (https://msdn.microsoft.com/en-us/library/office/jj244873.aspx)\r\n\t * @example\r\n\t * list.info().then(function(info) { console.log(info) });\r\n\t */\n\tList.prototype.info = function () {\n\t\treturn this._dao.get(this.baseUrl).then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Creates a SharePoint list item\r\n\t * @param {object} item - Javascript object representing the list item\r\n\t * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n\t * @returns {Promise} - A Promise that resolves to the inserted list item\r\n\t * @example <caption>Add a list item. Set Title and Status.</caption>\r\n\t * var newItem = {\r\n\t *    Title: \"Test Created Item\",\r\n\t *    MyStatus: \"Red\"\r\n\t * };\r\n\t * list.addItem(newItem).then(function(item) { console.log(item) });\r\n\t */\n\t\n\tList.prototype.addItem = function (item, digest) {\n\t\tvar _this2 = this;\n\t\n\t\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\t\treturn _this2._dao.get(_this2.baseUrl).then(function (data) {\n\t\n\t\t\t\t//decorate the item with the 'type' metadata\n\t\t\t\titem = _extends({}, {\n\t\t\t\t\t\"__metadata\": {\n\t\t\t\t\t\t\"type\": data.d.ListItemEntityTypeFullName\n\t\t\t\t\t}\n\t\t\t\t}, item);\n\t\n\t\t\t\tvar customOptions = {\n\t\t\t\t\theaders: headers.getAddHeaders(digest)\n\t\t\t\t};\n\t\t\t\treturn _this2._dao.post(_this2.baseUrl + \"/items\", item, customOptions);\n\t\t\t}).then(utils.validateODataV2);\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Updates a SharePoint list item\r\n\t * @param {int} itemId - The SharePoint Id of the item to update\r\n\t * @param {object} updates - Javascript object representing columns you want to update\r\n\t * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n\t * @returns {Promise} - A Promise\r\n\t * @example <caption>Update the item's Title</caption>\r\n\t * var updates = {\r\n\t *    Title: \"Updated Title\"\r\n\t * };\r\n\t * list.updateItem(12, updates).then(function() { console.log\"Success\") });\r\n\t */\n\tList.prototype.updateItem = function (itemId, updates, digest) {\n\t\tvar _this3 = this;\n\t\n\t\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\t\treturn _this3.getItemById(itemId).then(function (item) {\n\t\t\t\t//decorate the item with the 'type' metadata\n\t\t\t\tupdates = _extends({}, {\n\t\t\t\t\t\"__metadata\": {\n\t\t\t\t\t\t\"type\": item.__metadata.type\n\t\t\t\t\t}\n\t\t\t\t}, updates);\n\t\n\t\t\t\tvar customOptions = {\n\t\t\t\t\theaders: headers.getUpdateHeaders(digest, item.__metadata.etag)\n\t\t\t\t};\n\t\n\t\t\t\treturn _this3._dao.post(item.__metadata.uri, updates, customOptions);\n\t\t\t});\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Updates a SharePoint list item\r\n\t * @param {int} itemId - The SharePoint Id of the item to update\r\n\t * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n\t * @returns {Promise} - A Promise\r\n\t * @example <caption>Delete the item with an ID of 12</caption>\r\n\t * list.deleteItem(12).then(function() { console.log\"Success\") });\r\n\t */\n\tList.prototype.deleteItem = function (itemId, digest) {\n\t\tvar _this4 = this;\n\t\n\t\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\t\treturn _this4.getItemById(itemId).then(function (item) {\n\t\t\t\tvar customOptions = {\n\t\t\t\t\theaders: headers.getDeleteHeaders(digest, item.__metadata.etag)\n\t\t\t\t};\n\t\t\t\treturn _this4._dao.post(item.__metadata.uri, \"\", customOptions);\n\t\t\t});\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Attach file to an item in the list\r\n\t * @param {int} itemId - The SharePoint Id of the item to update\r\n\t * @param {string} filename - Filename to be put in SharePoint\r\n\t * @param {string} content - File content\r\n\t * @returns {Promise} - A Promise\r\n\t * @example <caption>Attach 'hello.txt' with content 'Hello World' to itemId 12</caption>\r\n\t * list.addAttachment(12, 'hello.txt', 'Hello World').then(function() { console.log\"Success\") });\r\n\t */\n\tList.prototype.addAttachment = function (itemId, filename, content, requestDigest) {\n\t\tvar _this5 = this;\n\t\n\t\tif (requestDigest) return this._addAttachment(itemId, filename, content, requestDigest);\n\t\treturn this._dao.getRequestDigest().then(function (requestDigest) {\n\t\t\treturn _this5._addAttachment(itemId, filename, content, requestDigest);\n\t\t});\n\t};\n\t\n\tList.prototype._addAttachment = function (itemId, filename, content, requestDigest) {\n\t\tvar customOptions = {\n\t\t\theaders: headers.getFilestreamHeaders(requestDigest),\n\t\t\tdata: content\n\t\t};\n\t\treturn this._dao.post(this.baseUrl + \"/items(\" + itemId + \")/AttachmentFiles/add(FileName='\" + filename + \"')\", null, customOptions);\n\t};\n\t\n\t/**\r\n\t * Delete attachment of an item in the list\r\n\t * @param {int} itemId - The SharePoint Id of the item to update\r\n\t * @param {string} filename - Filename to be deleted in SharePoint\r\n\t * @returns {Promise} - A Promise\r\n\t * @example <caption>Delete attachment 'hello.txt' in itemId 12</caption>\r\n\t * list.deleteAttachment(12, 'hello.txt').then(function() { console.log\"Success\") });\r\n\t */\n\tList.prototype.deleteAttachment = function (itemId, filename, requestDigest) {\n\t\tvar _this6 = this;\n\t\n\t\tif (requestDigest) return this._deleteAttachment(itemId, filename, requestDigest);\n\t\treturn this._dao.getRequestDigest().then(function (requestDigest) {\n\t\t\treturn _this6._deleteAttachment(itemId, filename, requestDigest);\n\t\t});\n\t};\n\tList.prototype._deleteAttachment = function (itemId, filename, requestDigest) {\n\t\tvar _this7 = this;\n\t\n\t\treturn this._dao.get(this.baseUrl).then(function (data) {\n\t\t\tvar customOptions = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json;odata=verbose',\n\t\t\t\t\t'X-RequestDigest': requestDigest,\n\t\t\t\t\t'X-HTTP-Method': \"DELETE\"\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn _this7._dao.post(_this7.baseUrl + \"/items(\" + itemId + \")/AttachmentFiles('\" + filename + \"')\", null, customOptions);\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Retrieves items in the list based on the value of a column\r\n\t * @param {string} key - The column name\r\n\t * @param {string} value - The column value to match on\r\n\t * @param {string} [odata] - OData string\r\n\t * @returns {Promise<Array>} - A Promise that resolves an array of list items\r\n\t * @example <caption>Get all items whose status is \"In Progress\"</caption>\r\n\t * list.findItems(\"Status\", \"In Progress\").then(function(items) { console.log(items) });\r\n\t * @example <caption>Get first 5 items whose Yes/No field is 'Yes'</caption>\r\n\t * list.getItems(\"MyYesNoField\", true, \"$top=5\").then(function(items) { console.log(items) });\r\n\t */\n\tList.prototype.findItems = function (key, value, extraOData) {\n\t\t//if its a string, wrap in single quotes\n\t\tvar filterValue = typeof value === \"string\" ? \"'\" + value + \"'\" : value;\n\t\tvar odata = \"$filter=\" + key + \" eq \" + filterValue + appendOData(extraOData, \"&\");\n\t\n\t\treturn this.getItems(odata);\n\t};\n\t\n\t/**\r\n\t * Retrieves the first list item that matches the column value you pass\r\n\t * @param {string} key - The column name\r\n\t * @param {string} value - The column value to match on\r\n\t * @param {string} [odata] - OData string\r\n\t * @returns {Promise} - A Promise that resolves to a list items\r\n\t * @example <caption>The first item whose Title is \"TODO\"</caption>\r\n\t * list.findItem(\"Title\", \"TODO\").then(function(item) { console.log(item) });\r\n\t */\n\tList.prototype.findItem = function (key, value, odata) {\n\t\treturn this.findItems(key, value, odata).then(function (items) {\n\t\t\tif (items && items.length && items.length > 0) {\n\t\t\t\treturn items[0];\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t};\n\t\n\tvar appendOData = function appendOData(odata, prefix) {\n\t\tprefix = prefix || \"?\";\n\t\tif (odata) return prefix + odata;\n\t\treturn \"\";\n\t};\n\t\n\tmodule.exports = List;\n\t//# sourceMappingURL=list.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar utils = __webpack_require__(1);\n\tvar headers = __webpack_require__(2);\n\t\n\t/**\r\n\t * Allows you to perform queries agains the SP Profile Service. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n\t * @class\r\n\t * @param {IBaseDao} dao - Data access object used to make requests.\r\n\t * @example <caption>You access this Profiles class using the 'profiles' property of the dao</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t * dao.profiles.current().then(function(profile) { console.log(profile) });\r\n\t */\n\tvar Profiles = function Profiles(dao) {\n\t\tthis._dao = dao;\n\t\tthis.baseUrl = \"/SP.UserProfiles.PeopleManager\";\n\t};\n\t\n\tvar transformPersonProperties = function transformPersonProperties(profile) {\n\t\tprofile.UserProfileProperties.results.forEach(function (keyvalue) {\n\t\t\tprofile[keyvalue.Key] = keyvalue.Value;\n\t\t});\n\t\treturn profile;\n\t};\n\t\n\t/**\r\n\t * Gets the profile of the current user\r\n\t * @returns {Promise} - A Promise that resolves an object containing all the profile properties\r\n\t * @example\r\n\t * dao.profiles.current().then(function(profile) { console.log(profile.PreferredName) });\r\n\t */\n\tProfiles.prototype.current = function () {\n\t\tvar url = this.baseUrl + \"/GetMyProperties\";\n\t\treturn this._dao.get(url).then(utils.validateODataV2).then(transformPersonProperties);\n\t};\n\t\n\t/**\r\n\t * Sets a profile property\r\n\t * @param {User|string} userOrEmail - Pass in a User object (must have 'AccountName' or 'LoginName') or an email address\r\n\t * @returns {Promise} - A Promise\r\n\t * @example\r\n\t * var email = \"andrew@andrewpetersen.onmicrosoft.com\";\r\n\t * var aboutMe = \"I am a web developer\";\r\n\t * dao.profiles.setProperty(email, \"AboutMe\", aboutMe).then(function() { console.log(\"Success\") });\r\n\t */\n\t// Supports email string or a user object\n\tProfiles.prototype.setProperty = function (userOrEmail, key, value, digest) {\n\t\tvar _this = this;\n\t\n\t\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\t\tvar url = _this.baseUrl + \"/SetSingleValueProfileProperty\";\n\t\t\tvar args = {\n\t\t\t\tpropertyName: key,\n\t\t\t\tpropertyValue: value\n\t\t\t};\n\t\n\t\t\tvar customOptions = {\n\t\t\t\theaders: headers.getStandardHeaders(digest)\n\t\t\t};\n\t\n\t\t\t// if a string is passed, assume its an email address, otherwise a user was passed\n\t\t\tif (typeof userOrEmail === \"string\") {\n\t\t\t\treturn _this.getByEmail(userOrEmail).then(function (user) {\n\t\t\t\t\targs.accountName = user.AccountName;\n\t\t\t\t\treturn _this._dao.post(url, args, customOptions);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\targs.accountName = userOrEmail.LoginName || userOrEmail.AccountName;\n\t\t\t\treturn _this._dao.post(url, args, customOptions);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tProfiles.prototype.getProfile = function (user) {\n\t\tvar login = encodeURIComponent(user.LoginName);\n\t\tvar url = this.baseUrl + \"/GetPropertiesFor(accountName=@v)?@v='\" + login + \"'\";\n\t\treturn this._dao.get(url).then(utils.validateODataV2).then(transformPersonProperties);\n\t};\n\t\n\t/**\r\n\t * Gets the profile of the user tied to the specified email\r\n\t * @returns {Promise} - A Promise that resolves an object containing all the profile properties\r\n\t * @example\r\n\t * var email = \"andrew@andrewpetersen.onmicrosoft.com\";\r\n\t * dao.profiles.getByEmail(email)\r\n\t *    .then(function(profile) { console.log(profile.PreferredName) });\r\n\t */\n\tProfiles.prototype.getByEmail = function (email) {\n\t\tvar _this2 = this;\n\t\n\t\treturn this._dao.web.getUser(email).then(function (user) {\n\t\t\treturn _this2.getProfile(user);\n\t\t});\n\t};\n\t\n\tmodule.exports = Profiles;\n\t//# sourceMappingURL=profiles.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar BaseDao = __webpack_require__(19);\n\tvar ajax = __webpack_require__(11);\n\tvar utils = __webpack_require__(1);\n\t/**\r\n\t * Main point of entry. Big Daddy class that all SP requests are routed through. Data Access Object (DAO)\r\n\t * @class\r\n\t * @augments BaseDao\r\n\t\r\n\t * @param {string} [url] - Url of the site you are connected to. _spPageContextInfo.webAbsoluteUrl will be used if no value is passed.\r\n\t * @property {string} webUrl - Url of the site you are connected to\r\n\t * @property {Web} web - Allows interacting with the SharePoint site you connected to\r\n\t * @property {Search} search - Allows querying through the SP Search Service\r\n\t * @property {Profiles} profiles - Allows interacting with the SP Profile Service\r\n\t * @example <caption>Create a new instance of a RestDao</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t */\n\tvar RestDao = function RestDao(url) {\n\t\tvar self = this;\n\t\tBaseDao.call(this);\n\t\tthis.webUrl = url || _spPageContextInfo.webAbsoluteUrl;\n\t};\n\t\n\tRestDao.prototype = Object.create(BaseDao.prototype);\n\t\n\tRestDao.prototype.executeRequest = function (url, options) {\n\t\tvar fullUrl = /^http/i.test(url) ? url : this.webUrl + \"/_api\" + url;\n\t\n\t\tvar defaultOptions = {\n\t\t\turl: fullUrl,\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Accept\": \"application/json; odata=verbose\",\n\t\t\t\t\"Content-Type\": \"application/json; odata=verbose\"\n\t\t\t}\n\t\t};\n\t\n\t\tvar ajaxOptions = _extends({}, defaultOptions, options);\n\t\treturn ajax(ajaxOptions).catch(utils.handleErrorResponse);\n\t};\n\t\n\tmodule.exports = RestDao;\n\t//# sourceMappingURL=restDao.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar queryString = __webpack_require__(13);\n\tvar utils = __webpack_require__(1);\n\t\n\t/**\r\n\t * Allows you to perform queries agains the SP Search Service. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n\t * @class\r\n\t * @param {IBaseDao} dao - Data access object used to make requests.\r\n\t * @example <caption>You access this Search class using the 'search' property of the dao</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t * dao.search.query('andrew').then(function(result) { console.log(result.items) });\r\n\t */\n\tvar Search = function Search(dao) {\n\t  this._dao = dao;\n\t};\n\t\n\t/**\r\n\t * Represents the response sent back from the Search Service after a query\r\n\t * @typedef {Object} QueryOptions\r\n\t * @property {string} sourceid - Special id that allows filter of types\r\n\t * @property {int} startrow - \r\n\t * @property {int} rowlimit - How many items to bring back\r\n\t * @property {Array<string>} selectedproperties - An array of the property names to bring back\r\n\t * @property {Array<string>} refiners - An array of the refiners to bring back\r\n\t * @property {?} hiddenconstraints - \r\n\t * @property {?} sortlist - \r\n\t */\n\tSearch.QueryOptions = function () {\n\t  this.sourceid = null;\n\t  this.startrow = null;\n\t  this.rowlimit = 30;\n\t  this.selectedproperties = null;\n\t  this.refiners = null;\n\t  this.refinementfilters = null;\n\t  this.hiddenconstraints = null;\n\t  this.sortlist = null;\n\t};\n\t\n\tvar convertRowsToObjects = function convertRowsToObjects(itemRows) {\n\t  var items = [];\n\t\n\t  for (var i = 0; i < itemRows.length; i++) {\n\t    var row = itemRows[i],\n\t        item = {};\n\t    for (var j = 0; j < row.Cells.results.length; j++) {\n\t      item[row.Cells.results[j].Key] = row.Cells.results[j].Value;\n\t    }\n\t\n\t    items.push(item);\n\t  }\n\t\n\t  return items;\n\t};\n\t\n\t/**\r\n\t * Represents the response sent back from the Search Service after a query\r\n\t * @typedef {Object} SearchResults\r\n\t * @property {string} elapsedTime - How long the query took\r\n\t * @property {object} suggestion - Spelling suggestion\r\n\t * @property {int} resultsCount - Number of results in this batch\r\n\t * @property {int} totalResults - Total number of results that could be returned\r\n\t * @property {int} totalResultsIncludingDuplicates - Total number of results that could be returned including duplicates\r\n\t * @property {Array} items - An array of search result items.  Properties will depend of the item type.\r\n\t * @property {?Array<Refiner>} refiners - An array of refiners. Can be null.\r\n\t */\n\tvar SearchResults = function SearchResults(queryResponse) {\n\t  this.elapsedTime = queryResponse.ElapsedTime;\n\t  this.suggestion = queryResponse.SpellingSuggestion;\n\t  this.resultsCount = queryResponse.PrimaryQueryResult.RelevantResults.RowCount;\n\t  this.totalResults = queryResponse.PrimaryQueryResult.RelevantResults.TotalRows;\n\t  this.totalResultsIncludingDuplicates = queryResponse.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n\t  this.items = convertRowsToObjects(queryResponse.PrimaryQueryResult.RelevantResults.Table.Rows.results);\n\t  this.refiners = mapRefiners(queryResponse.PrimaryQueryResult.RefinementResults);\n\t};\n\t\n\t/**\r\n\t * Represents the response sent back from the Search Service after a query\r\n\t * @typedef {Object} Refiner\r\n\t * @property {string} RefinerName - How long the query took\r\n\t * @property {Array} RefinerOptions - An array of valid refiner values\r\n\t */\n\t\n\tvar mapRefiners = function mapRefiners(refinementResults) {\n\t  var refiners = [];\n\t\n\t  if (refinementResults && refinementResults.Refiners && refinementResults.Refiners.results) {\n\t    refiners = refinementResults.Refiners.results.map(function (r) {\n\t      return {\n\t        RefinerName: r.Name,\n\t        RefinerOptions: r.Entries.results\n\t      };\n\t    });\n\t  }\n\t  return refiners;\n\t};\n\t\n\t/**\r\n\t * Performs a query using the search service\r\n\t * @param {string} queryText - The query text to send to the Search Service\r\n\t * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n\t * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n\t * @example\r\n\t * dao.search.query('audit').then(function(result) { console.log(result.items) });\r\n\t */\n\tSearch.prototype.query = function (queryText, queryOptions) {\n\t  var optionsQueryString = queryOptions != null ? \"&\" + queryString.fromObj(queryOptions, true) : \"\";\n\t\n\t  var url = \"/search/query?querytext='\" + queryText + \"'\" + optionsQueryString;\n\t  return this._dao.get(url).then(utils.validateODataV2).then(function (resp) {\n\t    if (resp.query) {\n\t      return new SearchResults(resp.query);\n\t    }\n\t    throw new Error(\"Invalid response back from search service\");\n\t  });\n\t};\n\t\n\t/**\r\n\t * Performs a query using the search service\r\n\t * @param {string} queryText - The query text to send to the Search Service\r\n\t * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n\t * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n\t * @example\r\n\t * dao.search.people('andrew').then(function(result) { console.log(result.items) });\r\n\t */\n\tSearch.prototype.people = function (queryText, queryOptions) {\n\t  var options = queryOptions || {};\n\t  options.sourceid = 'b09a7990-05ea-4af9-81ef-edfab16c4e31';\n\t  return this.query(queryText, options);\n\t};\n\t\n\t/**\r\n\t * Performs a query for just sites using the search service\r\n\t * @param {string} queryText - The query text to send to the Search Service\r\n\t * @param {string} [[scope]] - A url to scope the results to\r\n\t * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n\t * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n\t * @example\r\n\t * dao.search.sites('andrew').then(function(result) { console.log(result.items) });\r\n\t */\n\tSearch.prototype.sites = function (queryText, scope) {\n\t  var queryOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  queryText = queryText || \"\";\n\t  scope = scope ? 'Path:' + scope + '*' : \"\";\n\t  var query = (queryText + ' contentclass:STS_Web ' + scope).trim();\n\t  queryOptions.rowlimit = queryOptions.rowlimit || 499;\n\t  return this.query(query, queryOptions);\n\t};\n\t\n\tmodule.exports = Search;\n\t//# sourceMappingURL=search.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar utils = __webpack_require__(1);\n\tvar Permissions = __webpack_require__(12);\n\tvar headers = __webpack_require__(2);\n\tvar Folder = __webpack_require__(23).Folder;\n\t/**\r\n\t * Represents a SharePoint site. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n\t * @class\r\n\t * @param {IBaseDao} dao - Data access object used to make requests.\r\n\t * @property {Permissions} permissions - allows checking security information of the Web\r\n\t * @property {string} baseUrl - API relative url (value = \"/web\")\r\n\t * @example <caption>You access this Web class using the 'web' property of the dao</caption>\r\n\t * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n\t * dao.web.info().then(function(info) { console.log(info) });\r\n\t */\n\tvar Web = function Web(dao) {\n\t\tthis._dao = dao;\n\t\tthis.baseUrl = \"/web\";\n\t\tthis.permissions = new Permissions(this.baseUrl, this._dao);\n\t};\n\t\n\t/**\r\n\t * Retrieves basic information about the site\r\n\t * @returns {Promise<SP.Web>} - A Promise that resolves to an object containing non-deferred properties of SP.Web (https://msdn.microsoft.com/en-us/library/office/jj244873.aspx)\r\n\t * @example\r\n\t * dao.web.info().then(function(info) { console.log(info) });\r\n\t */\n\tWeb.prototype.info = function () {\n\t\treturn this._dao.get(this.baseUrl).then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Retrieves all of the subsites\r\n\t * @returns {Promise<SP.Web[]>} - A Promise that resolves to an array of subsite object, each loaded with all non-deferred properties\r\n\t * @example\r\n\t *  dao.web.subsites().then(function(sites) { console.log(sites) });\r\n\t */\n\tWeb.prototype.subsites = function () {\n\t\treturn this._dao.get(this.baseUrl + \"/webinfos\").then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Retrieves a token needed to authorize any updates\r\n\t * @return {string} - A Promise that resolves to a the token that needs to added to the \"X-RequestDigest\" request header\r\n\t * @example\r\n\t *  dao.web.getRequestDigest().then(function(digest) { console.log(digest) });\r\n\t */\n\tWeb.prototype.getRequestDigest = function () {\n\t\treturn this._dao.getRequestDigest();\n\t};\n\t\n\t/**\r\n\t * Retrieves a folder\r\n\t * @param {string} serverRelativeUrl - The server relative url of the folder\r\n\t * @returns {Promise<Folder>} - A Promise that resolves to a folder object contain a files and folders arrays\r\n\t * @example\r\n\t *  dao.web.getFolder(\"/sites/mysite/Shared Documents\")\r\n\t *\t\t\t.then(function(folder) { console.log(folder) });\r\n\t */\n\tWeb.prototype.getFolder = function (serverRelativeUrl) {\n\t\t//remove leading slash\n\t\tif (serverRelativeUrl.charAt(0) === \"/\") {\n\t\t\tserverRelativeUrl = serverRelativeUrl.substr(1);\n\t\t}\n\t\tvar url = \"/web/GetFolderByServerRelativeUrl('\" + serverRelativeUrl + \"')?$expand=Folders,Files\";\n\t\n\t\treturn this._dao.get(url).then(utils.validateODataV2).then(function (spFolder) {\n\t\t\tvar folder = new Folder(spFolder);\n\t\t\tfolder.populateChildren(spFolder);\n\t\t\treturn folder;\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Uploads a file\r\n\t * @param {HTML5.File|string} fileContent - Either an HTML5 File object (from a File input element) or the string content of the file\r\n\t * @param {string} folderUrl - The server relative folder where the file should be uploaded\r\n\t * @param {object} [[fields]] - An optional object containig the fields that should be set on the file after the upload completes. You can override the filename by passing 'name' property { name: \"NewFileName.docx\"}\r\n\t * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n\t * @example <caption>Upload files with file input element, assumes <input type='file' id='file-input' /> </caption>\r\n\t\t*var inputElement = document.getElementById(\"file-input\");\r\n\t\t*inputElement.addEventListener(\"change\", handleFiles, false);\r\n\t\t*function handleFiles() {\r\n\t\t*    var fileList = this.files;\r\n\t\t*    var folderUrl = \"/spscript/Shared Documents\";\r\n\t\t*    for (var i = 0; i < fileList.length; i++) {\r\n\t\t*        dao.web.uploadFile(fileList[i], folderUrl).then(function(result){\r\n\t\t*            console.log(result);\r\n\t\t*        });\r\n\t\t*    }\r\n\t\t*}\r\n\t */\n\tWeb.prototype.uploadFile = function (fileContent, folderUrl, fields, digest) {\n\t\tvar _this = this;\n\t\n\t\tif (digest) return this._uploadFile(fileContent, folderUrl, fields, digest);\n\t\treturn this.getRequestDigest().then(function (digest) {\n\t\t\treturn _this._uploadFile(fileContent, folderUrl, fields, digest);\n\t\t});\n\t};\n\t\n\tWeb.prototype._uploadFile = function (fileContent, folderUrl, fields, digest) {\n\t\tvar _this2 = this;\n\t\n\t\tfields = fields || {};\n\t\t// if its a string, just treat that as the raw content\n\t\tif (typeof fileContent === \"string\") {\n\t\t\tfields.name = fields.name || \"NewFile.txt\";\n\t\t\treturn this._uploadBinaryData(fileContent, folderUrl, fields, digest);\n\t\t}\n\t\n\t\t// If its a browser File object, use FileReader to get ArrayBuffer\n\t\tif (fileContent instanceof File) {\n\t\t\tfields.name = fields.name || fileContent.name;\n\t\t\treturn utils.getArrayBuffer(fileContent).then(function (arrayBuffer) {\n\t\t\t\treturn _this2._uploadBinaryData(arrayBuffer, folderUrl, fields, digest);\n\t\t\t});\n\t\t}\n\t};\n\t\n\tWeb.prototype._setFileFields = function (spFile, fields, digest) {\n\t\tvar _this3 = this;\n\t\n\t\t// Get the ListItem with ParentList properties so we can query by list title\n\t\treturn this._dao.get(spFile.__metadata.uri + \"/ListItemAllFields?$expand=ParentList\").then(utils.validateODataV2).then(function (item) {\n\t\t\tdelete fields.name;\n\t\t\t// if there were no fields passed in just return the file and list item\n\t\t\tif (Object.keys(fields).length === 0) {\n\t\t\t\treturn {\n\t\t\t\t\titem: item,\n\t\t\t\t\tfile: spFile\n\t\t\t\t};\n\t\t\t};\n\t\t\t// If extra fields were passed in, update the list item\n\t\t\treturn _this3._dao.lists(item.ParentList.Title).updateItem(item.Id, fields, digest).then(function () {\n\t\t\t\titem = _extends({}, item, fields);\n\t\t\t\treturn { item: item, file: spFile };\n\t\t\t});\n\t\t});\n\t};\n\t\n\tWeb.prototype._uploadBinaryData = function (binaryContent, folderUrl, fields, digest) {\n\t\tvar _this4 = this;\n\t\n\t\tvar uploadUrl = \"/web/GetFolderByServerRelativeUrl('\" + folderUrl + \"')/Files/Add(url='\" + fields.name + \"',overwrite=true)\";\n\t\tvar options = {\n\t\t\theaders: headers.getFilestreamHeaders(digest)\n\t\t};\n\t\treturn this._dao.post(uploadUrl, binaryContent, options).then(utils.validateODataV2).then(function (spFile) {\n\t\t\treturn _this4._setFileFields(spFile, fields, digest);\n\t\t});\n\t};\n\t\n\t/**\r\n\t * Retrieves a file object\r\n\t * @param {string} url - The server relative url of the file\r\n\t * @returns {Promise<File>} - A Promise that resolves to a file object\r\n\t * @example\r\n\t *  dao.web.getFile(\"/sites/mysite/Shared Documents/myfile.docx\")\r\n\t *\t\t\t.then(function(file) { console.log(file) });\r\n\t */\n\tWeb.prototype.getFile = function (url) {\n\t\tvar url = \"/web/getfilebyserverrelativeurl('\" + url + \"')\";\n\t\treturn this._dao.get(url).then(utils.validateODataV2);\n\t};\n\t\n\t/**\r\n\t * Copies a file\r\n\t * @param {string} sourceUrl - The server relative url of the file you want to copy\r\n\t * @param {string} destinationUrl - The server relative url of the destination\r\n\t * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n\t * @example\r\n\t * var sourceFile = \"/sites/mysite/Shared Documents/myfile.docx\";\r\n\t * var destination = \"/sites/mysite/Restricted Docs/myFile.docx\";\r\n\t * dao.web.copyFile(sourceFile, destination).then(function() { console.log(\"Success\") });\r\n\t */\n\tWeb.prototype.copyFile = function (sourceUrl, destinationUrl, digest) {\n\t\tvar _this5 = this;\n\t\n\t\tif (digest) return this._copyFile(sourceUrl, destinationUrl, digest);\n\t\n\t\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\t\treturn _this5._copyFile(sourceUrl, destinationUrl, requestDigest);\n\t\t});\n\t};\n\t\n\tWeb.prototype._copyFile = function (sourceUrl, destinationUrl, digest) {\n\t\tvar url = \"/web/getfilebyserverrelativeurl('\" + sourceUrl + \"')/CopyTo\"; //(strnewurl='${destinationUrl}',boverwrite=true)`\n\t\tvar options = {\n\t\t\theaders: headers.getAddHeaders(digest)\n\t\t};\n\t\tvar body = {\n\t\t\tstrNewUrl: destinationUrl,\n\t\t\tbOverWrite: true\n\t\t};\n\t\treturn this._dao.post(url, body, options);\n\t};\n\t\n\tWeb.prototype.fileAction = function (file, action) {\n\t\tvar _this6 = this;\n\t\n\t\tvar params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\tvar digest = arguments[3];\n\t\n\t\tif (digest) this._fileAction(file, action, params, digest);\n\t\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\t\treturn _this6._fileAction(file, action, params, requestDigest);\n\t\t});\n\t};\n\t\n\tWeb.prototype._fileAction = function (file, action, params, digest) {\n\t\tvar url = \"/web/getfilebyserverrelativeurl('\" + file + \"')/\" + action;\n\t\tvar options = {\n\t\t\theaders: headers.getAddHeaders(digest)\n\t\t};\n\t\treturn this._dao.post(url, params, options);\n\t};\n\t\n\t/**\r\n\t * Deletes a file\r\n\t * @param {string} fileUrl - The server relative url of the file you want to delete\r\n\t * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n\t * @example\r\n\t * dao.web.deleteFile(\"/sites/mysite/Shared Documents/myFile.docx\")\r\n\t *\t\t\t.then(function() { console.log(\"Success\")});\r\n\t */\n\tWeb.prototype.deleteFile = function (fileUrl, digest) {\n\t\tvar _this7 = this;\n\t\n\t\tif (digest) return this._deleteFile(fileUrl, digest);\n\t\n\t\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\t\treturn _this7._deleteFile(fileUrl, requestDigest);\n\t\t});\n\t};\n\t\n\tWeb.prototype._deleteFile = function (sourceUrl, requestDigest) {\n\t\tvar url = \"/web/getfilebyserverrelativeurl(@url)/?@Url='\" + sourceUrl + \"'\";\n\t\tvar options = {\n\t\t\theaders: headers.getDeleteHeaders(requestDigest)\n\t\t};\n\t\treturn this._dao.post(url, {}, options);\n\t};\n\t\n\t/**\r\n\t * Retrieves a users object based on an email address\r\n\t * @param {string} email - The email address of the user to retrieve\r\n\t * @returns {Promise<SP.User>} - A Promise that resolves to a an SP.User object\r\n\t * @example\r\n\t * dao.web.getUser(\"andrew@andrewpetersen.onmicrosoft.com\")\r\n\t * \t\t\t.then(function(user) { console.log(user)});\r\n\t */\n\tWeb.prototype.getUser = function (email) {\n\t\tvar url = this.baseUrl + \"/SiteUsers/GetByEmail('\" + email + \"')\";\n\t\treturn this._dao.get(url).then(utils.validateODataV2);\n\t};\n\t\n\tWeb.prototype.ensureUser = function (login) {\n\t\treturn this._dao.post(\"/web/ensureUser('\" + login + \"')\").then(utils.validateODataV2);\n\t};\n\t\n\tmodule.exports = Web;\n\t//# sourceMappingURL=web.js.map\n\n/***/ }),\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(55);\n\texports.encode = exports.stringify = __webpack_require__(56);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// spscript.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d90908eb637223c0e4d7","var promisePolyfill = require(\"promise-polyfill\");\r\nif (!global.Promise) {\r\n\tglobal.Promise = promisePolyfill;\r\n}\r\nvar SPScript = {};\r\nSPScript.RestDao = require(\"../lib/restDao\");\r\nSPScript.queryString = require(\"../lib/queryString\");\r\nSPScript.utils = require(\"../lib/utils\");\r\nSPScript.ajax = require(\"../lib/ajax\");\r\nSPScript.CSR = require(\"../lib/csr\");\r\nSPScript.headers = require(\"../lib/requestHeaders\");\r\nmodule.exports = global.SPScript = SPScript;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./entries/spscript.js\n// module id = 0\n// module chunks = 1","\"use strict\";\n\n/**\r\n* @namespace SPScript.utils\r\n*/\n\nvar isBrowser = exports.isBrowser = function () {\n\treturn !(typeof window === 'undefined');\n};\n/**\r\n * If you pass in string, it will try to run JSON.parse(). The SPScript get() and post() methods already run the response through this method, so you'd really only need this if you are doing a manual ajax request. Different browsers handle JSON response differently so it is safest to call this method if you aren't going through SPScript.\r\n * @param {string} data - Raw response from JSON request\r\n * @returns {object} - JSON parsed object. Returns null if JSON.parse fails\r\n * @function parseJSON\r\n * @memberof SPScript.utils\r\n * @example\r\n * dao.executeRequest('/web/contentTypes')\r\n *\t\t.then(SPScript.utils.parseJSON)\r\n *\t\t.then(function(data) { console.log(data.d.results)})\r\n */\nvar parseJSON = exports.parseJSON = function (data) {\n\tif (typeof data === \"string\") {\n\t\ttry {\n\t\t\tdata = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn data;\n};\n\n/**\r\n * Helps parse raw json response to remove ceremonious OData data.d namespace. Tries JSON.parse() and then pulling out actual result from data.d or data.d.results\r\n * @function validateODataV2\r\n * @memberof SPScript.utils\r\n * @param {string|object} data - Raw response from JSON request\r\n * @returns {object} - JSON parsed object with that removes data.d OData structure \r\n * @example\r\n * dao.get('/web/contentTypes')\r\n *\t\t.then(SPScript.utils.validateODataV2)\r\n *\t\t.then(function(contentTypes) { console.log(contentTypes)})\r\n */\nvar validateODataV2 = exports.validateODataV2 = function (data) {\n\tvar data = parseJSON(data);\n\tvar results = null;\n\tif (data.d && data.d.results && data.d.results.length != null) {\n\t\tresults = data.d.results;\n\t} else if (data.d) {\n\t\tresults = data.d;\n\t}\n\treturn results || data;\n};\n\n//'Borrowed' from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\nvar arrayFromBitMask = exports.arrayFromBitMask = function (nMask) {\n\t// nMask must be between -2147483648 and 2147483647\n\tif (typeof nMask === \"string\") {\n\t\tnMask = parseInt(nMask);\n\t}\n\t// if (nMask > 0x7fffffff || nMask < -0x80000000) { \n\t// \tthrow new TypeError(\"arrayFromMask - out of range\"); \n\t// }\n\tfor (var nShifted = nMask, aFromMask = []; nShifted; aFromMask.push(Boolean(nShifted & 1)), nShifted >>>= 1) {}\n\treturn aFromMask;\n};\n\nvar _waitForLibraries = function _waitForLibraries(namespaces, resolve) {\n\tvar missing = namespaces.filter(function (namespace) {\n\t\treturn !validateNamespace(namespace);\n\t});\n\n\tif (missing.length === 0) resolve();else setTimeout(function () {\n\t\treturn _waitForLibraries(namespaces, resolve);\n\t}, 25);\n};\n\n/**\r\n * A method to allow you to wait for script dependencies to load.\r\n * @param {Array} namespaces - An array of global namespaces, things on the global 'window'. For example, when jQuery is on the page, window.jQuery is valid.  So 'jQuery' is the namespace.\r\n * @returns {Promise} - A Promise that resolves when all your namespaces are on the page\r\n * @function waitForLibraries\r\n * @memberof SPScript.utils\r\n * @example\r\n * function doMyStuff() { };\r\n * SPScript.utils.waitForLibraries([\"jQuery\", \"SP.UI.Dialog\"]).then(doMyStuff);\r\n */\nvar waitForLibraries = exports.waitForLibraries = function (namespaces) {\n\treturn new Promise(function (resolve, reject) {\n\t\treturn _waitForLibraries(namespaces, resolve);\n\t});\n};\n\n/**\r\n * A method to allow you to wait for a single script dependency to load.\r\n * @param {string} namespace - A global namespace. For example, when jQuery is on the page, window.jQuery is valid. So 'jQuery' is the namespace.\r\n * @returns {Promise} - A Promise that resolves when all your namespace is on the page\r\n * @function waitForLibrary\r\n * @memberof SPScript.utils\r\n * @example\r\n * function doMyStuff() { };\r\n * SPScript.utils.waitForLibrary(\"jQuery\").then(doMyStuff);\r\n */\nvar waitForLibrary = exports.waitForLibrary = function (namespace) {\n\treturn waitForLibraries([namespace]);\n};\n\n/**\r\n * A method to check if a given namespace is on the global object (window).\r\n * @param {string} namespace - A global namespace\r\n * @returns {Bool} - True or False if the namespace is on the page\r\n * @function validateNamespace\r\n * @memberof SPScript.utils\r\n * @example\r\n * var canUseModals = SPScript.utils.validateNamespace(\"SP.UI.Dialog\");\r\n */\nvar validateNamespace = exports.validateNamespace = function (namespace) {\n\tvar scope = window;\n\tvar sections = namespace.split(\".\");\n\tvar sectionsLength = sections.length;\n\tfor (var i = 0; i < sectionsLength; i++) {\n\t\tvar prop = sections[i];\n\t\tif (prop in scope) {\n\t\t\tscope = scope[prop];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\n/**\r\n * A method to load a javascript file onto your page\r\n * @param {Array<string>} urls - An Array of urls to javascript files you want to load on your page\r\n * @returns {Promise} - A Promise that resolves when all the files are done loading\r\n * @function getScripts\r\n * @memberof SPScript.utils\r\n * @example\r\n * function doMyStuff() { };\r\n * var momentjsUrl = \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js\"\r\n * var jQueryUrl = \"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js\"\r\n * SPScript.utils.getScript([momentjsUrl, jQueryUrl]).then(doMyStuff);\r\n */\nvar getScripts = exports.getScripts = function (urls) {\n\treturn Promise.all(urls.map(getScript));\n};\n\n/**\r\n * A method to load a javascript file onto your page\r\n * @param {string} url - Url to the java script file you want to load\r\n * @returns {Promise} - A Promise that resolves when the file is done loading\r\n * @function getScript\r\n * @memberof SPScript.utils\r\n * @example\r\n * function doMyStuff() { };\r\n * var momentjsUrl = \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js\"\r\n * SPScript.utils.getScript(momentjsUrl).then(doMyStuff);\r\n */\nvar getScript = exports.getScript = function (url) {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar scriptTag = window.document.createElement(\"script\");\n\t\tvar firstScriptTag = document.getElementsByTagName('script')[0];\n\t\tscriptTag.async = 1;\n\t\tfirstScriptTag.parentNode.insertBefore(scriptTag, firstScriptTag);\n\n\t\tscriptTag.onload = scriptTag.onreadystatechange = function (arg, isAbort) {\n\t\t\t// if its been aborted, readyState is gone, or readyState is in a 'done' status\n\t\t\tif (isAbort || !scriptTag.readyState || /loaded|complete/.test(scriptTag.readyState)) {\n\t\t\t\t//clean up\n\t\t\t\tscriptTag.onload = scriptTag.onreadystatechange = null;\n\t\t\t\tscriptTag = undefined;\n\n\t\t\t\t// resolve/reject the promise\n\t\t\t\tif (!isAbort) resolve();else reject;\n\t\t\t}\n\t\t};\n\t\tscriptTag.src = url;\n\t});\n};\n\nvar getArrayBuffer = exports.getArrayBuffer = function (file) {\n\tif (file && file instanceof File) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function (e) {\n\t\t\t\tresolve(e.target.result);\n\t\t\t};\n\t\t\treader.readAsArrayBuffer(file);\n\t\t});\n\t} else {\n\t\tthrow \"SPScript.utils.getArrayBuffer: Cant get ArrayBuffer if you don't pass in a file\";\n\t}\n};\nvar loadCss = exports.loadCss = function (url) {\n\tvar link = document.createElement(\"link\");\n\tlink.setAttribute(\"rel\", \"stylesheet\");\n\tlink.setAttribute(\"type\", \"text/css\");\n\tlink.setAttribute(\"href\", url);\n\tdocument.querySelector(\"head\").appendChild(link);\n};\n\nvar handleErrorResponse = exports.handleErrorResponse = function (err, res) {\n\tconsole.log(\"REQUEST ERROR - \" + err.statusCode || err.code);\n\tvar msg = err.body;\n\ttry {\n\t\tvar data = err.body;\n\t\tif (typeof data === \"string\") data = JSON.parse(err.body);\n\t\tif (data.error) msg = data.error.message.value;\n\t} catch (ex) {}\n\tconsole.log(msg);\n\treturn err;\n};\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar utils = require(\"./utils\");\n\nvar jsonMimeType = exports.jsonMimeType = \"application/json;odata=verbose\";\nvar getStandardHeaders = exports.getStandardHeaders = function (digest) {\n\tvar headers = {\n\t\t\"Accept\": jsonMimeType,\n\t\t\"Content-Type\": jsonMimeType\n\t};\n\tif (digest) headers[\"X-RequestDigest\"] = digest;\n\treturn headers;\n};\n\nexports.getAddHeaders = getStandardHeaders;\n\nvar getFilestreamHeaders = exports.getFilestreamHeaders = function (digest) {\n\treturn {\n\t\t'Accept': jsonMimeType,\n\t\t'X-RequestDigest': digest,\n\t\t'Content-Type': \"application/octet-stream\",\n\t\t'binaryStringRequestBody': \"true\"\n\t};\n};\n\nvar getActionHeaders = exports.getActionHeaders = function (verb, digest) {\n\tif (!verb) return getStandardHeaders(digest);\n\treturn _extends({}, getStandardHeaders(digest), {\n\t\t\"X-HTTP-Method\": verb\n\t});\n};\n\nvar decorateETag = function decorateETag(headers, etag) {\n\tif (etag) headers[\"If-Match\"] = etag;\n\treturn headers;\n};\n\nexports.getUpdateHeaders = function (digest, etag) {\n\treturn decorateETag(getActionHeaders(\"MERGE\", digest), etag);\n};\nexports.getDeleteHeaders = function (digest, etag) {\n\treturn decorateETag(getActionHeaders(\"DELETE\", digest), etag);\n};\n//# sourceMappingURL=requestHeaders.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/requestHeaders.js\n// module id = 2\n// module chunks = 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 7\n// module chunks = 0 1","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise-polyfill/promise.js\n// module id = 8\n// module chunks = 0 1","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 9\n// module chunks = 0 1","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 10\n// module chunks = 0 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\r\n* @namespace SPScript.ajax\r\n*/\n\nvar defaults = {\n\tmethod: \"GET\",\n\tasync: true,\n\ttype: \"json\", //XMLHttpRequest.responseType\n\tdata: undefined\n};\n\nvar validMethods = [\"GET\", \"POST\", \"PUT\", \"HEAD\", \"DELETE\", \"PATCH\"];\n\nvar errorHandlers = [];\n\nvar validateOptions = function validateOptions(options) {\n\tif (!options || !options.url || validMethods.indexOf(options.method) < 0) return false;else return true;\n};\n\nvar setHeaders = function setHeaders(xhr, headersObj) {\n\tif (headersObj) {\n\t\tObject.keys(headersObj).forEach(function (key) {\n\t\t\txhr.setRequestHeader(key, headersObj[key]);\n\t\t});\n\t}\n};\n\n/**\r\n * Performs and AJAX request based on options you pass you. Your options must at least have a url.\r\n * @param {object} options - Request options like { url, headers, method };\r\n * @returns {Promise} - A ES6 Promise that resolves or rejects when the request comes back\r\n * @function ajax\r\n * @memberof SPScript.ajax\r\n * @example\r\n * var ajaxOptions = { \r\n *    url: '/_api/web/contentTypes', \r\n *    method: \"GET\", \r\n *    headers: { Accept: \"application/json;odata=verbose\" } \r\n * };\r\n * SPScript.utils.ajax(ajaxOptions)\r\n *\t\t.then(SPScript.utils.parseJSON)\r\n *\t\t.then(function(data){ console.log(data.d.results) })\r\n *\t\t.catch(function(error) { console.log(error)})\r\n */\nvar ajax = function ajax(options) {\n\tvar opts = _extends({}, defaults, options);\n\tif (!validateOptions(options)) return Promise.reject(new Error(\"Invalid options passed into ajax call.\"));\n\n\tvar xhr = new XMLHttpRequest();\n\tif (xhr == null) return Promise.reject(new Error(\"Your browser doesn't support XMLHttpRequest (ajax).\"));\n\n\txhr.open(opts.method, opts.url, opts.async);\n\tsetHeaders(xhr, opts.headers);\n\txhr.responseType = opts.type;\n\n\treturn new Promise(function (resolve, reject) {\n\t\txhr.onreadystatechange = function () {\n\t\t\t//completed\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t// SUCCESS\n\t\t\t\tif (xhr.status < 400 && xhr.status >= 100) {\n\t\t\t\t\tif (xhr.status >= 200 && xhr.status < 300 && xhr.status !== 204) {\n\t\t\t\t\t\tresolve(xhr.response || xhr.responseText);\n\t\t\t\t\t} else resolve(xhr.response);\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\"AJAX Request Error: Response Code = \" + xhr.status);\n\t\t\t\t\terror.statusCode = xhr.status;\n\t\t\t\t\terror.body = xhr.response;\n\t\t\t\t\terrorHandlers.forEach(function (fn) {\n\t\t\t\t\t\treturn fn(error, xhr);\n\t\t\t\t\t});\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\txhr.send(opts.data);\n\t});\n};\n\najax.addErrorHandler = function (fn) {\n\treturn errorHandlers.push(fn);\n};\najax.setDefaults = function (options) {\n\treturn _extends(defaults, options);\n};\n\nmodule.exports = ajax;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ajax.js\n// module id = 11\n// module chunks = 1","\"use strict\";\n\nvar utils = require(\"./utils\");\n\n/**\r\n * Allows you to to check on the security of a list or site. You shouldn't be creating instances of the this class, you will get it from the Web or List class.\r\n * @class\r\n * @param {string} baseUrl - Url to the securable\r\n * @param {IBaseDao} dao - Data access object used to make requests.\r\n * @example <caption>Access Permissions class using the 'permissions' property on a Web</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n *\r\n * dao.web.permissions.getRoleAssignments()\r\n *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n * @example <caption>Access Permissions class using the 'permissions' property on a List</caption>\r\n * dao.lists(\"Restricted Library\").permissions.getRoleAssignments()\r\n *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n */\nvar Permissions = function Permissions(baseUrl, dao) {\n   this._dao = dao;\n   this.baseUrl = baseUrl;\n};\n\n/**\r\n * Gets all the role assignments on that securable\r\n * @returns {Promise<Array<RoleAssignment>>} - A Promise that resolves to an array of role assignments\r\n * @example\r\n * dao.web.permissions.getRoleAssignments()\r\n *     .then(function(roleAssignments) { console.log(roleAssignments) });\r\n */\nPermissions.prototype.getRoleAssignments = function () {\n   var url = this.baseUrl + \"/RoleAssignments?$expand=Member,RoleDefinitionBindings\";\n   return this._dao.get(url).then(utils.validateODataV2).then(function (results) {\n      return results.map(transforms.roleAssignment);\n   });\n};\n\n/**\r\n * Gets all the role assignments on that securable. If you don't pass an email, it will use the current user.\r\n * @param {string} [email] - If you don't pass an email it will use current user\r\n * @returns {Promise<Array>} - A Promise that resolves to an array of string base permission values\r\n * @example <caption>Get the current users permissions on a site</caption>\r\n * dao.web.permissions.check()\r\n *     .then(function(basePermissions) { console.log(basePermissions) });\r\n * @example <caption>Get a specified user's permissions on a list</caption>\r\n * var email = \"andrew@andrewpetersen.onmicrosoft.com\"\r\n * dao.lists(\"Restricted Library\").permissions.check(email)\r\n *     .then(function(basePermissions) { console.log(basePermissions) });\r\n */\nPermissions.prototype.check = function (email) {\n   var _this = this;\n\n   var checkPrivs = function checkPrivs(user) {\n      var login = encodeURIComponent(user.LoginName);\n      var url = _this.baseUrl + \"/getusereffectivepermissions(@v)?@v='\" + login + \"'\";\n      return _this._dao.get(url).then(utils.validateODataV2);\n   };\n\n   //if no email, and no current user id, reject\n   if (!email && !utils.isBrowser()) {\n      return Promise.reject(\"Can't Check Permissions.  No email passed and no current user\");\n   }\n\n   // If no email is passed, then get current user, else get user by email\n   var req = !email ? this._dao.get('/web/getuserbyid(' + _spPageContextInfo.userId + ')').then(function (data) {\n      return data.d;\n   }) : this._dao.web.getUser(email);\n\n   return req.then(checkPrivs).then(function (privs) {\n      return permissionMaskToStrings(privs.GetUserEffectivePermissions.Low, privs.GetUserEffectivePermissions.High);\n   });\n};\n\n/**\r\n * Represents a permission on the securable\r\n * @typedef {Object} RoleMember\r\n * @property {string} login - Login Name\r\n * @property {string} name - User or Group title\r\n * @property {string} id - Member Id\r\n */\n\n/**\r\n * Represents a permission on the securable\r\n * @typedef {Object} RoleDef\r\n * @property {string} name - Role Definition name\r\n * @property {string} description - Role Definition description\r\n * @property {Array} basePermissions - Array of base permission strings\r\n */\n\n/**\r\n * Represents a permission on the securable\r\n * @typedef {Object} RoleAssignment\r\n * @property {RoleMember} member - User or group\r\n * @property {Array<RoleDef>} roles - An array of role definitions\r\n */\nvar transforms = {\n   roleAssignment: function roleAssignment(raw) {\n      var priv = {\n         member: {\n            login: raw.Member.LoginName,\n            name: raw.Member.Title,\n            id: raw.Member.Id\n         }\n      };\n      priv.roles = raw.RoleDefinitionBindings.results.map(function (roleDef) {\n         return {\n            name: roleDef.Name,\n            description: roleDef.Description,\n            basePermissions: permissionMaskToStrings(roleDef.BasePermissions.Low, roleDef.BasePermissions.High)\n         };\n      });\n      return priv;\n   }\n};\n\nvar permissionMaskToStrings = function permissionMaskToStrings(lowMask, highMask) {\n   var basePermissions = [];\n   spBasePermissions.forEach(function (basePermission) {\n      if ((basePermission.low & lowMask) > 0 || (basePermission.high & highMask) > 0) {\n         basePermissions.push(basePermission.name);\n      }\n   });\n   return basePermissions;\n};\n\n// Scraped it from SP.PermissionKind. \n// Storing it in here to remove sp.js dependency\n\n// var basePermissions = [];\n// Object.keys(SP.PermissionKind).forEach(function(key) { \n// \tvar perm = new SP.BasePermissions();\n//     perm.set(SP.PermissionKind[key]);\n//     var permisison = {\n//     \tname: key,\n//     \tlow: perm.$A_1,\n//     \thigh: perm.$9_1\n//     };\n//     basePermissions.push(permisison);\n// });\n\nvar spBasePermissions = [{\n   \"name\": \"emptyMask\",\n   \"low\": 0,\n   \"high\": 0\n}, {\n   \"name\": \"viewListItems\",\n   \"low\": 1,\n   \"high\": 0\n}, {\n   \"name\": \"addListItems\",\n   \"low\": 2,\n   \"high\": 0\n}, {\n   \"name\": \"editListItems\",\n   \"low\": 4,\n   \"high\": 0\n}, {\n   \"name\": \"deleteListItems\",\n   \"low\": 8,\n   \"high\": 0\n}, {\n   \"name\": \"approveItems\",\n   \"low\": 16,\n   \"high\": 0\n}, {\n   \"name\": \"openItems\",\n   \"low\": 32,\n   \"high\": 0\n}, {\n   \"name\": \"viewVersions\",\n   \"low\": 64,\n   \"high\": 0\n}, {\n   \"name\": \"deleteVersions\",\n   \"low\": 128,\n   \"high\": 0\n}, {\n   \"name\": \"cancelCheckout\",\n   \"low\": 256,\n   \"high\": 0\n}, {\n   \"name\": \"managePersonalViews\",\n   \"low\": 512,\n   \"high\": 0\n}, {\n   \"name\": \"manageLists\",\n   \"low\": 2048,\n   \"high\": 0\n}, {\n   \"name\": \"viewFormPages\",\n   \"low\": 4096,\n   \"high\": 0\n}, {\n   \"name\": \"anonymousSearchAccessList\",\n   \"low\": 8192,\n   \"high\": 0\n}, {\n   \"name\": \"open\",\n   \"low\": 65536,\n   \"high\": 0\n}, {\n   \"name\": \"viewPages\",\n   \"low\": 131072,\n   \"high\": 0\n}, {\n   \"name\": \"addAndCustomizePages\",\n   \"low\": 262144,\n   \"high\": 0\n}, {\n   \"name\": \"applyThemeAndBorder\",\n   \"low\": 524288,\n   \"high\": 0\n}, {\n   \"name\": \"applyStyleSheets\",\n   \"low\": 1048576,\n   \"high\": 0\n}, {\n   \"name\": \"viewUsageData\",\n   \"low\": 2097152,\n   \"high\": 0\n}, {\n   \"name\": \"createSSCSite\",\n   \"low\": 4194304,\n   \"high\": 0\n}, {\n   \"name\": \"manageSubwebs\",\n   \"low\": 8388608,\n   \"high\": 0\n}, {\n   \"name\": \"createGroups\",\n   \"low\": 16777216,\n   \"high\": 0\n}, {\n   \"name\": \"managePermissions\",\n   \"low\": 33554432,\n   \"high\": 0\n}, {\n   \"name\": \"browseDirectories\",\n   \"low\": 67108864,\n   \"high\": 0\n}, {\n   \"name\": \"browseUserInfo\",\n   \"low\": 134217728,\n   \"high\": 0\n}, {\n   \"name\": \"addDelPrivateWebParts\",\n   \"low\": 268435456,\n   \"high\": 0\n}, {\n   \"name\": \"updatePersonalWebParts\",\n   \"low\": 536870912,\n   \"high\": 0\n}, {\n   \"name\": \"manageWeb\",\n   \"low\": 1073741824,\n   \"high\": 0\n}, {\n   \"name\": \"anonymousSearchAccessWebLists\",\n   \"low\": -2147483648,\n   \"high\": 0\n}, {\n   \"name\": \"useClientIntegration\",\n   \"low\": 0,\n   \"high\": 16\n}, {\n   \"name\": \"useRemoteAPIs\",\n   \"low\": 0,\n   \"high\": 32\n}, {\n   \"name\": \"manageAlerts\",\n   \"low\": 0,\n   \"high\": 64\n}, {\n   \"name\": \"createAlerts\",\n   \"low\": 0,\n   \"high\": 128\n}, {\n   \"name\": \"editMyUserInfo\",\n   \"low\": 0,\n   \"high\": 256\n}, {\n   \"name\": \"enumeratePermissions\",\n   \"low\": 0,\n   \"high\": 1073741824\n}];\n\nmodule.exports = Permissions;\n//# sourceMappingURL=permissions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/permissions.js\n// module id = 12\n// module chunks = 1","\"use strict\";\n\nvar qs = require(\"querystring\");\n\n/**\r\n* @namespace SPScript.queryString\r\n*/\n\n/**\r\n * Turns a normal js Object into a string in form of \"key1=value1&key2=value2...\"\r\n * @param {Object} obj - Javascript object to query stringify\r\n * @param {bool} [[quoteValues]] - By default, if the value has a space, it will be single quoted. Passing true will cause all values to be quoted.\r\n * @returns {string} - Note: tt does NOT prepend '?' char\r\n * @function fromObj\r\n * @memberof SPScript.queryString\r\n * @example\r\n * var myObj = { id: 123, title: \"My Title\" }\r\n * var qs = SPScript.queryString.fromObj(myObj);\r\n * // qs would output: \"id=123&title='MyTitle'\"\r\n */\nvar fromObj = exports.fromObj = function (obj, quoteValues) {\n\n  var writeParam = function writeParam(key) {\n    var value = (obj[key] + \"\").trim();\n    // if there is a space, wrap in single quotes\n    if (value.indexOf(\" \") > -1 || quoteValues) value = \"'\" + value + \"'\";\n\n    return key + \"=\" + value;\n  };\n\n  var str = Object.keys(obj).map(writeParam).join(\"&\");\n  return str;\n};\n\n/**\r\n * Turns a string in form of \"key1=value1&key2=value2...\" into a javascript object\r\n * @param {string} str - must be in query string format to work\r\n * @returns {Object} - A javascript object with properties for each key found in the query string passed in.\r\n * @function toObj\r\n * @memberof SPScript.queryString\r\n * @example\r\n * // your url is \"https://sharepoint.com/sites/mysite/home.aspx?id=123&title='My Title'\"\r\n * var myObj = SPScript.queryString.toObj(window.location.search);\r\n * //myObj would be { id: 123, title: \"My Title\" }\r\n */\nvar toObj = exports.toObj = function (str) {\n  //if no string is passed use window.location.search\n  if (str === undefined && window && window.location && window.location.search) {\n    str = window.location.search;\n  }\n  if (!str) return {};\n  //trim off the leading '?' if its there\n  if (str[0] === \"?\") str = str.substr(1);\n\n  return qs.parse(str);\n};\n\nexports.contains = function (key, text) {\n  return toObj(text).hasOwnProperty(key);\n};\nexports.getValue = function (key, text) {\n  return toObj(text)[key] || \"\";\n};\n//# sourceMappingURL=queryString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/queryString.js\n// module id = 13\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar List = require(\"./list\");\nvar Web = require(\"./web\");\nvar Profiles = require(\"./profiles\");\nvar Search = require(\"./search\");\nvar utils = require(\"./utils\");\nvar CustomActions = require(\"./customActions\");\nvar headerUtils = require(\"./requestHeaders\");\n/**\r\n * Abstract class. You'll never work with this directly. \r\n * @abstract\r\n * @private\r\n * @property {Web} web - Allows interacting with the SharePoint site you connected to\r\n * @property {Search} search - Allows querying through the SP Search Service\r\n * @property {Profiles} profiles - Allows interacting with the SP Profile Service\r\n */\nvar BaseDao = function BaseDao() {\n\tthis.web = new Web(this);\n\tthis.search = new Search(this);\n\tthis.profiles = new Profiles(this);\n\tthis.customActions = new CustomActions(this);\n};\n\nBaseDao.prototype.executeRequest = function () {\n\tthrow \"Not implemented exception\";\n};\n\n/**\r\n * Generic helper to make AJAX GET request\r\n  * @example <caption>Use generic GET method to retrieve a site's content types</caption>\r\n * dao.get('/web/contentTypes').then(function(data) { console.log(data.d.results)})\r\n * @param {string} relativeQueryUrl - the API url relative to \"/_api\"\r\n * @param {Object} [extendedOptions] - AJAX options (like custom request headers)\r\n * @returns {Promise} - An ES6 Promise that resolves to the an object probably in the form of data.d\r\n */\nBaseDao.prototype.get = function (relativeQueryUrl, extendedOptions) {\n\tvar options = _extends({}, {\n\t\tmethod: \"GET\"\n\t}, extendedOptions);\n\treturn this.executeRequest(relativeQueryUrl, options).then(utils.parseJSON);\n};\n\nBaseDao.prototype.getRequestDigest = function () {\n\treturn this.post('/contextinfo', {}).then(function (data) {\n\t\treturn data.d.GetContextWebInformation.FormDigestValue;\n\t});\n};\n/**\r\n * If a list name is passed, an SPScript.List object, otherwise performs a request to get all the site's lists\r\n * @param {string} [listname] - If a list name is passed, method is synchronous returning an SPScript.List\r\n * @returns {List|Promise} - SPScript.List object or a Promise that resolves to an Array of lists\r\n * @example <caption>Option 1: No List Name gets all the lists of a site</caption>\r\n * dao.lists().then(function(lists) { console.log(lists)});\r\n * @example <caption>Option 2: Pass a List Name to get a list object</caption>\r\n * var list = dao.lists('MyList');\r\n * list.getItemById(12).then(function(item) { console.log(item)});\r\n */\nBaseDao.prototype.lists = function (listname) {\n\tif (!listname) {\n\t\treturn this.get(\"/web/lists\").then(utils.validateODataV2);\n\t}\n\treturn new List(listname, this);\n};\n\n/**\r\n * Generic helper to make AJAX POST request\r\n * @param {string} relativeQueryUrl - the API url relative to \"/_api\"\r\n * @param {Object} [extendedOptions] - AJAX options (like custom request headers)\r\n * @returns {Promise} - An ES6 Promise\r\n */\nBaseDao.prototype.post = function (relativePostUrl, body, opts) {\n\tbody = packagePostBody(body, opts);\n\tvar options = {\n\t\tmethod: \"POST\",\n\t\tdata: body\n\t};\n\toptions = _extends({}, options, opts);\n\treturn this.executeRequest(relativePostUrl, options).then(utils.parseJSON);\n};\n\nBaseDao.prototype.authorizedPost = function (relativePostUrl, body, verb) {\n\tvar _this = this;\n\n\treturn this.getRequestDigest().then(function (digest) {\n\t\treturn headerUtils.getActionHeaders(verb, digest);\n\t}).then(function (headers) {\n\t\treturn _this.post(relativePostUrl, body, { headers: headers });\n\t});\n};\n\nBaseDao.prototype.ensureRequestDigest = function (digest) {\n\treturn digest ? Promise.resolve(digest) : this.getRequestDigest();\n};\n\n//Skip stringify it its already a string or it has an explicit Content-Type that is not JSON\nvar packagePostBody = function packagePostBody(body, opts) {\n\t// if its already a string just return\n\tif (typeof body === \"string\") return body;\n\t// if it has an explicit content-type, asssume the body is already that type\n\tif (opts && opts.headers && opts.headers[\"Content-Type\"] && opts.headers[\"Content-Type\"].indexOf(\"json\") === -1) {\n\t\treturn body;\n\t}\n\t//others stringify\n\treturn JSON.stringify(body);\n};\nmodule.exports = BaseDao;\n//# sourceMappingURL=baseDao.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/baseDao.js\n// module id = 19\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction createFormFieldRenderer(field) {\n    return function (ctx) {\n        var formCtx = ctx.FormContext;\n        // need to clone ctx, it is getting overwritten so we lost CurrentItem\n        var clonedCtx = _extends({}, ctx);\n        if (field.onReady) {\n            if (formCtx) {\n                formCtx.registerInitCallback(field.name, field.onReady.bind(null, clonedCtx));\n            } else {\n                setTimeout(field.onReady.bind(null, clonedCtx), 100);\n            }\n        }\n        if (field.getValue && formCtx) {\n            formCtx.registerGetValueCallback(field.name, field.getValue.bind(null, clonedCtx));\n        }\n        // tack on 'setValue' function\n        if (formCtx && formCtx.updateControlValue) {\n            field.setValue = function (value) {\n                formCtx.updateControlValue(field.name, value);\n            };\n        }\n\n        return field.render(ctx);\n    };\n}\n\nfunction createDisplayFieldRenderer(field) {\n    return function (ctx) {\n        var formCtx = ctx.FormContext;\n        if (formCtx && formCtx.registerInitCallback && field.onReady) {\n            formCtx.registerInitCallback(field.name, field.onReady);\n        }\n        return field.render(ctx);\n    };\n}\n\nvar renderers = {\n    formField: {\n        create: createFormFieldRenderer\n    },\n    displayField: {\n        create: createDisplayFieldRenderer\n    }\n};\n\nmodule.exports = renderers;\n//# sourceMappingURL=csr-renderers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/csr-renderers.js\n// module id = 20\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar renderers = exports.renderers = require(\"./csr-renderers\");\n\n//fieldComponent = { name, onReady, render, getValue, locations:[\"View\", \"NewForm\",\"DisplayForm\", \"EditForm\"] }\n// var renderColoredStatus = function(ctx) {\n//     // map statuses  to colors\n//     var colors = {\n//         \"Not Started\": \"orange\",\n//         \"In Progress\": \"yellow\",\n//         \"Done\": \"green\"\n//     };\n\n//     // Look at the item's status to get the mapped color\n//     // If the item has a status value that is not mapped, then use 'red'\n//     var color = colors[ctx.CurrentItem.Status] || \"red\";\n\n//     // return the html used to render the status field;\n//     return \"<h4 style='color:\" + color + \"'>\" + ctx.CurrentItem.Status + \"</h4>\";\n// };\n\n// var fieldOverride = {\n//     name:  \"Status\",\n//     render: renderColoredStatus\n// };\n\n// SPScript.CSR.registerDisplayField(fieldOverride);\n\nvar registerFormField = exports.registerFormField = function (fieldComponent, opts) {\n    var renderer = renderers.formField.create(fieldComponent);\n    fieldComponent.locations = fieldComponent.locations || [\"NewForm\", \"EditForm\"];\n    return registerField(fieldComponent, renderer, opts);\n};\n\n//{name, onReady, render, locations: [\"View\", \"DisplayForm\"]}\nvar registerDisplayField = exports.registerDisplayField = function (fieldComponent, opts) {\n    var renderer = renderers.displayField.create(fieldComponent);\n    fieldComponent.locations = fieldComponent.locations || [\"View\", \"DisplayForm\"];\n    return registerField(fieldComponent, renderer, opts);\n};\n\nvar registerField = exports.registerField = function (field, renderer, opts) {\n    var renderers = {};\n    //View, DisplayForm, EditForm, NewForm\n    field.locations.forEach(function (l) {\n        return renderers[l] = renderer;\n    });\n    var defaults = {\n        Templates: {\n            Fields: {}\n        }\n    };\n    var templateOverride = _extends({}, defaults, opts);\n    templateOverride.Templates.Fields[field.name] = renderers;\n    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\n    return field;\n};\n\nvar registerView = exports.registerView = function (templates, options) {\n    // templates keys are Header, Item, Footer\n    //RenderFieldTemplateDefault(ctx); default renderer?\n    var defaults = {\n        //BaseViewID\n        //ListTemplateType\n        Templates: {\n            Header: function Header() {\n                return \"\";\n            },\n            Footer: function Footer() {\n                return \"\";\n            }\n        }\n    };\n\n    var templateOverride = _extends({}, defaults, options);\n    templateOverride.Templates = _extends({}, templateOverride.Templates, templates);\n\n    SPClientTemplates.TemplateManager.RegisterTemplateOverrides(templateOverride);\n};\n//# sourceMappingURL=csr.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/csr.js\n// module id = 21\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar utils = require(\"./utils\");\nvar headers = require(\"./requestHeaders\");\n\nvar metadata = {\n\t__metadata: {\n\t\t\"type\": \"SP.UserCustomAction\"\n\t}\n};\n\nvar CustomActions = function CustomActions(dao) {\n\tvar _this = this;\n\n\tthis._dao = dao;\n\n\tthis.scopes = {\n\t\t\"Web\": {\n\t\t\tid: 3,\n\t\t\tname: \"Web\",\n\t\t\turl: \"/web/usercustomactions\"\n\t\t},\n\t\t\"Site\": {\n\t\t\tid: 2,\n\t\t\tname: \"Site\",\n\t\t\turl: \"/site/usercustomactions\"\n\t\t}\n\t};\n\tthis.scopes.getById = function (id) {\n\t\treturn id === 2 ? _this.scopes.Site : _this.scopes.Web;\n\t};\n};\n\n// \n// If a name is passed, filter the result set\nCustomActions.prototype.get = function (name) {\n\tvar _this2 = this;\n\n\t// first get the site scoped ones, then the web scoped ones\n\treturn this._dao.get(this.scopes.Site.url).then(utils.validateODataV2).then(function (siteCustomActions) {\n\t\treturn _this2._dao.get(_this2.scopes.Web.url).then(utils.validateODataV2)\n\t\t//combine site scoped and web scoped into single array\n\t\t.then(function (webCustomActions) {\n\t\t\treturn siteCustomActions.concat(webCustomActions);\n\t\t});\n\t}).then(function (customActions) {\n\t\t// if a name was passed filter it otherwise return everything\n\t\tif (name) {\n\t\t\tvar matches = customActions.filter(function (a) {\n\t\t\t\treturn a.Name === name;\n\t\t\t});\n\t\t\tif (matches.length) {\n\t\t\t\treturn matches[0];\n\t\t\t}\n\t\t\tthrow new Error(\"Unable to find Custom Action with name: \" + name);\n\t\t} else return customActions;\n\t});\n};\n\nCustomActions.prototype._getUrl = function (name) {\n\tvar _this3 = this;\n\n\treturn this.get(name).then(function (a) {\n\t\treturn _this3.scopes.getById(a.Scope).url + \"('\" + a.Id + \"')\";\n\t});\n};\n\nCustomActions.prototype._getUrlAndDigest = function (name) {\n\tvar _this4 = this;\n\n\tvar prep = {};\n\treturn this._getUrl(name).then(function (url) {\n\t\tprep.url = url;\n\t\treturn _this4._dao.getRequestDigest();\n\t}).then(function (digest) {\n\t\tprep.digest = digest;\n\t\treturn prep;\n\t});\n};\n\nCustomActions.prototype.update = function (updates) {\n\tvar _this5 = this;\n\n\tif (!updates || !updates.Name) throw new Error(\"You must at least pass a Custom Action 'Name'\");\n\n\treturn this._getUrlAndDigest(updates.Name).then(function (prep) {\n\t\tupdates = _extends({}, metadata, updates);\n\t\tvar opts = {\n\t\t\theaders: headers.getUpdateHeaders(prep.digest)\n\t\t};\n\t\treturn _this5._dao.post(prep.url, updates, opts);\n\t});\n};\n\nCustomActions.prototype.remove = function (name) {\n\tvar _this6 = this;\n\n\tif (!name) throw new Error(\"You must at least pass a Custom Action 'Name'\");\n\treturn this._getUrlAndDigest(name).then(function (prep) {\n\t\tvar opts = {\n\t\t\theaders: headers.getDeleteHeaders(prep.digest)\n\t\t};\n\t\treturn _this6._dao.post(prep.url, {}, opts);\n\t});\n};\n\nCustomActions.prototype.add = function (customAction) {\n\tvar _this7 = this;\n\n\tif (!customAction || !customAction.Name || !customAction.Location) throw new Error(\"You must at least pass a Custom Action 'Name' and 'Location'\");\n\tcustomAction.Scope = customAction.Scope || \"Web\";\n\treturn this._dao.getRequestDigest().then(function (digest) {\n\t\tcustomAction = _extends({}, metadata, customAction);\n\t\tvar scope = _this7.scopes[customAction.Scope];\n\t\tcustomAction.Scope = scope.id;\n\t\tvar opts = {\n\t\t\theaders: headers.getAddHeaders(digest)\n\t\t};\n\t\treturn _this7._dao.post(scope.url, customAction, opts);\n\t});\n};\n\nCustomActions.prototype.addScriptLink = function (name, url, opts) {\n\tvar customAction = {\n\t\tName: name,\n\t\tTitle: name,\n\t\tDescription: name,\n\t\tGroup: name,\n\t\tSequence: 100,\n\t\tScope: \"Web\",\n\t\tLocation: \"ScriptLink\",\n\t\tScriptSrc: url\n\t};\n\tcustomAction = _extends({}, customAction, opts || {});\n\n\treturn this.add(customAction);\n};\n\nCustomActions.prototype.addCSSLink = function (name, url, opts) {\n\tvar scriptBlockStr = \"\\n\\t\\t(function() {\\n\\t\\t\\tvar head = document.querySelector(\\\"head\\\");\\n\\t\\t\\tvar styleTag = document.createElement(\\\"style\\\");\\n\\t\\t\\tstyleTag.appendChild(document.createTextNode(\\\"body { opacity: 0 }\\\"));\\n\\t\\t\\t\\n\\t\\t\\tvar linkTag = document.createElement(\\\"link\\\");\\n\\t\\t\\tlinkTag.rel = \\\"stylesheet\\\";\\tlinkTag.href = \\\"\" + url + \"\\\"; linkTag.type = \\\"text/css\\\";\\n\\t\\t\\tlinkTag.addEventListener(\\\"load\\\", function() {\\n\\t\\t\\t\\thead.removeChild(styleTag);\\n\\t\\t\\t});\\n\\n\\t\\t\\thead.appendChild(styleTag);\\n\\t\\t\\thead.appendChild(linkTag);\\n\\t\\t})();\";\n\n\tvar customAction = {\n\t\tName: name,\n\t\tTitle: name,\n\t\tDescription: name,\n\t\tGroup: name,\n\t\tSequence: 100,\n\t\tScope: \"Web\",\n\t\tLocation: \"ScriptLink\",\n\t\tScriptBlock: scriptBlockStr\n\t};\n\tcustomAction = _extends({}, customAction, opts || {});\n\n\treturn this.add(customAction);\n};\nCustomActions.metadata = metadata;\n\nmodule.exports = CustomActions;\n//# sourceMappingURL=customActions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/customActions.js\n// module id = 22\n// module chunks = 1","\"use strict\";\n\nvar utils = require(\"./utils\");\n\n/**\r\n * Represents a SharePoint Folder.  Keep in mind, and File or Folder objects obtained from the 'files' and 'folders' array will not have their child items populated.\r\n * @typedef Folder\r\n * @property {string} name - Folder name\r\n * @property {string} serverRelativeUrl - Server relative url\r\n * @property {int} itemCount - Number of items in the folder\r\n * @property {string} guid - Unique ID of the folder\r\n * @property {string} uri - API url to get the raw SP.Folder object\r\n * @property {Array<File>} files - An array of files in that folder\r\n * @property {Array<Folder>} folders - An array of sub folders\r\n * @example\r\n *  dao.web.getFolder(\"/sites/mysite/Shared Documents\")\r\n *\t\t\t.then(function(folder) { \r\n *\t\t\t\tconsole.log(folder.name);\r\n *\t\t\t\tconsole.log(folder.files);\r\n *\t\t\t});\r\n */\nvar Folder = function Folder(spFolder) {\n  this.mapProperties(spFolder);\n  this.populateChildren(spFolder);\n};\n\nFolder.prototype.populateChildren = function (spFolder) {\n  if (spFolder && spFolder.Folders && spFolder.Folders.results) {\n    this.folders = spFolder.Folders.results.map(function (f) {\n      return new Folder(f);\n    });\n  }\n  if (spFolder && spFolder.Files && spFolder.Files.results) {\n    this.files = spFolder.Files.results.map(function (f) {\n      return new File(f);\n    });\n  }\n};\n\nFolder.prototype.mapProperties = function (spFolder) {\n  this.name = spFolder.Name;\n  this.serverRelativeUrl = spFolder.ServerRelativeUrl;\n  this.itemCount = spFolder.ItemCount;\n  this.guid = spFolder.UniqueId;\n  this.uri = spFolder.__metadata.uri;\n};\n\n/**\r\n * Represents a SharePoint File\r\n * @typedef File\r\n * @property {string} name - Folder name\r\n * @property {string} title - Folder title\r\n * @property {string} serverRelativeUrl - Server relative url\r\n * @property {int} byteLength - File size in bytes\r\n * @property {string} checkoutType - Checked out status of file.  \"none\", \"offline\", \"online\".\r\n * @property {number} majorVersion - Major version of the file\r\n * @property {number} minorVersion - Minor version of the file\r\n * @property {string} uri - API url to get the raw SP.Folder object\r\n * @example\r\n *  dao.web.getFile(\"/sites/mysite/Shared Documents/myFile.docx\")\r\n *\t\t\t.then(function(file) { \r\n *\t\t\t\tconsole.log(file.name);\r\n *\t\t\t\tconsole.log(\"Size:\" + (file.byteLength / 1000) + \"KB\");\r\n *\t\t\t});\r\n */\nvar File = function File(spFile) {\n  this.mapProperties(spFile);\n};\n\nFile.prototype.mapProperties = function (spFile) {\n  this.name = spFile.Name, this.title = spFile.Title, this.checkoutType = spFile.CheckOutType, this.byteLength = spFile.Length, this.majorVersion = spFile.MajorVersion, this.minorVersion = spFile.MinorVersion, this.serverRelativeUrl = spFile.ServerRelativeUrl, this.uri = spFile.__metadata.uri;\n};\n\nmodule.exports = {\n  File: File,\n  Folder: Folder\n};\n//# sourceMappingURL=filesystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/filesystem.js\n// module id = 23\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar utils = require(\"./utils\");\nvar Permissions = require(\"./permissions\");\nvar headers = require(\"./requestHeaders\");\n\n/**\r\n * Represents a SharePoint list. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n * @class\r\n * @param {IBaseDao} dao - Data access object used to make requests.\r\n * @property {Permissions} permissions - allows checking security information of the Web\r\n * @property {string} baseUrl - API relative url (value = \"/web\")\r\n * @example <caption>You access a 'List' by passing a name to the 'lists' property of the dao.</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n * var list = dao.lists(\"Tasks\");\r\n * list.getItemById(12).then(function(item) { console.log(item) });\r\n */\nvar List = function List(listname, dao) {\n\tthis.listname = listname;\n\tthis.baseUrl = \"/web/lists/getbytitle('\" + listname + \"')\";\n\tthis._dao = dao;\n\tthis.permissions = new Permissions(this.baseUrl, this._dao);\n};\n\nList.prototype.getFields = function (odataQuery) {\n\tvar url = this.baseUrl + \"/fields\" + appendOData(odataQuery);\n\treturn this._dao.get(url).then(utils.validateODataV2);\n};\n\nList.prototype.getField = function (fieldName) {\n\treturn this.getFields(\"$filter=InternalName eq '\" + fieldName + \"'\").then(function (fields) {\n\t\tif (fields.length) return fields[0];else throw new Error(\"Unable to find field: \" + fieldName);\n\t});\n};\n\nList.prototype.updateField = function (fieldName, updates) {\n\tvar _this = this;\n\n\tthis.getField(fieldName).then(function (f) {\n\t\tvar url = _this.baseUrl + \"/Fields(guid'\" + f.Id + \"')\";\n\t\tupdates.__metadata = { type: \"SP.Field\" };\n\t\treturn _this._dao.authorizedPost(url, updates, \"MERGE\");\n\t});\n};\n/**\r\n * Retrieves items in the lists\r\n * @param {string} [odata] - OData string\r\n * @returns {Promise<Array>} - A Promise that resolves an array of list items\r\n * @example <caption>Get all items</caption>\r\n * list.getItems().then(function(items) { console.log(items) });\r\n * @example <caption>Get first 5 items by passing in optional OData.</caption>\r\n * list.getItems(\"$top=5\").then(function(items) { console.log(items) });\r\n */\nList.prototype.getItems = function (odataQuery) {\n\treturn this._dao.get(this.baseUrl + \"/items\" + appendOData(odataQuery)).then(utils.validateODataV2);\n};\n\n/**\r\n * Retrieves a specific item based on SharePoint ID\r\n * @param {int} id - SharePoint integer Id\r\n * @param {string} [odata] - OData string\r\n * @returns {Promise} - A Promise that resolves to a single list item\r\n * @example <caption>Get the item with ID of 5.</caption>\r\n * list.getItemById(5).then(function(item) { console.log(item) });\r\n * @example <caption>Only bring back 'Title' and 'Status' using optional OData string</caption>\r\n * list.getItemById(5, \"$select=Title,Status\").then(function(items) { console.log(items) });\r\n */\nList.prototype.getItemById = function (id, odata) {\n\tvar url = this.baseUrl + \"/items(\" + id + \")\" + appendOData(odata);\n\treturn this._dao.get(url).then(utils.validateODataV2);\n};\n\n/**\r\n * Retrieves basic information about the list\r\n * @returns {Promise<SP.Web>} - A Promise that resolves to an object containing non-deferred properties of an SP.List (https://msdn.microsoft.com/en-us/library/office/jj244873.aspx)\r\n * @example\r\n * list.info().then(function(info) { console.log(info) });\r\n */\nList.prototype.info = function () {\n\treturn this._dao.get(this.baseUrl).then(utils.validateODataV2);\n};\n\n/**\r\n * Creates a SharePoint list item\r\n * @param {object} item - Javascript object representing the list item\r\n * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n * @returns {Promise} - A Promise that resolves to the inserted list item\r\n * @example <caption>Add a list item. Set Title and Status.</caption>\r\n * var newItem = {\r\n *    Title: \"Test Created Item\",\r\n *    MyStatus: \"Red\"\r\n * };\r\n * list.addItem(newItem).then(function(item) { console.log(item) });\r\n */\n\nList.prototype.addItem = function (item, digest) {\n\tvar _this2 = this;\n\n\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\treturn _this2._dao.get(_this2.baseUrl).then(function (data) {\n\n\t\t\t//decorate the item with the 'type' metadata\n\t\t\titem = _extends({}, {\n\t\t\t\t\"__metadata\": {\n\t\t\t\t\t\"type\": data.d.ListItemEntityTypeFullName\n\t\t\t\t}\n\t\t\t}, item);\n\n\t\t\tvar customOptions = {\n\t\t\t\theaders: headers.getAddHeaders(digest)\n\t\t\t};\n\t\t\treturn _this2._dao.post(_this2.baseUrl + \"/items\", item, customOptions);\n\t\t}).then(utils.validateODataV2);\n\t});\n};\n\n/**\r\n * Updates a SharePoint list item\r\n * @param {int} itemId - The SharePoint Id of the item to update\r\n * @param {object} updates - Javascript object representing columns you want to update\r\n * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n * @returns {Promise} - A Promise\r\n * @example <caption>Update the item's Title</caption>\r\n * var updates = {\r\n *    Title: \"Updated Title\"\r\n * };\r\n * list.updateItem(12, updates).then(function() { console.log\"Success\") });\r\n */\nList.prototype.updateItem = function (itemId, updates, digest) {\n\tvar _this3 = this;\n\n\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\treturn _this3.getItemById(itemId).then(function (item) {\n\t\t\t//decorate the item with the 'type' metadata\n\t\t\tupdates = _extends({}, {\n\t\t\t\t\"__metadata\": {\n\t\t\t\t\t\"type\": item.__metadata.type\n\t\t\t\t}\n\t\t\t}, updates);\n\n\t\t\tvar customOptions = {\n\t\t\t\theaders: headers.getUpdateHeaders(digest, item.__metadata.etag)\n\t\t\t};\n\n\t\t\treturn _this3._dao.post(item.__metadata.uri, updates, customOptions);\n\t\t});\n\t});\n};\n\n/**\r\n * Updates a SharePoint list item\r\n * @param {int} itemId - The SharePoint Id of the item to update\r\n * @param {string} [requestDigest] - Optional request digest token used to authorize the action. One will be automatically retrieved if not provided.\r\n * @returns {Promise} - A Promise\r\n * @example <caption>Delete the item with an ID of 12</caption>\r\n * list.deleteItem(12).then(function() { console.log\"Success\") });\r\n */\nList.prototype.deleteItem = function (itemId, digest) {\n\tvar _this4 = this;\n\n\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\treturn _this4.getItemById(itemId).then(function (item) {\n\t\t\tvar customOptions = {\n\t\t\t\theaders: headers.getDeleteHeaders(digest, item.__metadata.etag)\n\t\t\t};\n\t\t\treturn _this4._dao.post(item.__metadata.uri, \"\", customOptions);\n\t\t});\n\t});\n};\n\n/**\r\n * Attach file to an item in the list\r\n * @param {int} itemId - The SharePoint Id of the item to update\r\n * @param {string} filename - Filename to be put in SharePoint\r\n * @param {string} content - File content\r\n * @returns {Promise} - A Promise\r\n * @example <caption>Attach 'hello.txt' with content 'Hello World' to itemId 12</caption>\r\n * list.addAttachment(12, 'hello.txt', 'Hello World').then(function() { console.log\"Success\") });\r\n */\nList.prototype.addAttachment = function (itemId, filename, content, requestDigest) {\n\tvar _this5 = this;\n\n\tif (requestDigest) return this._addAttachment(itemId, filename, content, requestDigest);\n\treturn this._dao.getRequestDigest().then(function (requestDigest) {\n\t\treturn _this5._addAttachment(itemId, filename, content, requestDigest);\n\t});\n};\n\nList.prototype._addAttachment = function (itemId, filename, content, requestDigest) {\n\tvar customOptions = {\n\t\theaders: headers.getFilestreamHeaders(requestDigest),\n\t\tdata: content\n\t};\n\treturn this._dao.post(this.baseUrl + \"/items(\" + itemId + \")/AttachmentFiles/add(FileName='\" + filename + \"')\", null, customOptions);\n};\n\n/**\r\n * Delete attachment of an item in the list\r\n * @param {int} itemId - The SharePoint Id of the item to update\r\n * @param {string} filename - Filename to be deleted in SharePoint\r\n * @returns {Promise} - A Promise\r\n * @example <caption>Delete attachment 'hello.txt' in itemId 12</caption>\r\n * list.deleteAttachment(12, 'hello.txt').then(function() { console.log\"Success\") });\r\n */\nList.prototype.deleteAttachment = function (itemId, filename, requestDigest) {\n\tvar _this6 = this;\n\n\tif (requestDigest) return this._deleteAttachment(itemId, filename, requestDigest);\n\treturn this._dao.getRequestDigest().then(function (requestDigest) {\n\t\treturn _this6._deleteAttachment(itemId, filename, requestDigest);\n\t});\n};\nList.prototype._deleteAttachment = function (itemId, filename, requestDigest) {\n\tvar _this7 = this;\n\n\treturn this._dao.get(this.baseUrl).then(function (data) {\n\t\tvar customOptions = {\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json;odata=verbose',\n\t\t\t\t'X-RequestDigest': requestDigest,\n\t\t\t\t'X-HTTP-Method': \"DELETE\"\n\t\t\t}\n\t\t};\n\t\treturn _this7._dao.post(_this7.baseUrl + \"/items(\" + itemId + \")/AttachmentFiles('\" + filename + \"')\", null, customOptions);\n\t});\n};\n\n/**\r\n * Retrieves items in the list based on the value of a column\r\n * @param {string} key - The column name\r\n * @param {string} value - The column value to match on\r\n * @param {string} [odata] - OData string\r\n * @returns {Promise<Array>} - A Promise that resolves an array of list items\r\n * @example <caption>Get all items whose status is \"In Progress\"</caption>\r\n * list.findItems(\"Status\", \"In Progress\").then(function(items) { console.log(items) });\r\n * @example <caption>Get first 5 items whose Yes/No field is 'Yes'</caption>\r\n * list.getItems(\"MyYesNoField\", true, \"$top=5\").then(function(items) { console.log(items) });\r\n */\nList.prototype.findItems = function (key, value, extraOData) {\n\t//if its a string, wrap in single quotes\n\tvar filterValue = typeof value === \"string\" ? \"'\" + value + \"'\" : value;\n\tvar odata = \"$filter=\" + key + \" eq \" + filterValue + appendOData(extraOData, \"&\");\n\n\treturn this.getItems(odata);\n};\n\n/**\r\n * Retrieves the first list item that matches the column value you pass\r\n * @param {string} key - The column name\r\n * @param {string} value - The column value to match on\r\n * @param {string} [odata] - OData string\r\n * @returns {Promise} - A Promise that resolves to a list items\r\n * @example <caption>The first item whose Title is \"TODO\"</caption>\r\n * list.findItem(\"Title\", \"TODO\").then(function(item) { console.log(item) });\r\n */\nList.prototype.findItem = function (key, value, odata) {\n\treturn this.findItems(key, value, odata).then(function (items) {\n\t\tif (items && items.length && items.length > 0) {\n\t\t\treturn items[0];\n\t\t}\n\t\treturn null;\n\t});\n};\n\nvar appendOData = function appendOData(odata, prefix) {\n\tprefix = prefix || \"?\";\n\tif (odata) return prefix + odata;\n\treturn \"\";\n};\n\nmodule.exports = List;\n//# sourceMappingURL=list.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/list.js\n// module id = 24\n// module chunks = 1","\"use strict\";\n\nvar utils = require(\"./utils\");\nvar headers = require(\"./requestHeaders\");\n\n/**\r\n * Allows you to perform queries agains the SP Profile Service. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n * @class\r\n * @param {IBaseDao} dao - Data access object used to make requests.\r\n * @example <caption>You access this Profiles class using the 'profiles' property of the dao</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n * dao.profiles.current().then(function(profile) { console.log(profile) });\r\n */\nvar Profiles = function Profiles(dao) {\n\tthis._dao = dao;\n\tthis.baseUrl = \"/SP.UserProfiles.PeopleManager\";\n};\n\nvar transformPersonProperties = function transformPersonProperties(profile) {\n\tprofile.UserProfileProperties.results.forEach(function (keyvalue) {\n\t\tprofile[keyvalue.Key] = keyvalue.Value;\n\t});\n\treturn profile;\n};\n\n/**\r\n * Gets the profile of the current user\r\n * @returns {Promise} - A Promise that resolves an object containing all the profile properties\r\n * @example\r\n * dao.profiles.current().then(function(profile) { console.log(profile.PreferredName) });\r\n */\nProfiles.prototype.current = function () {\n\tvar url = this.baseUrl + \"/GetMyProperties\";\n\treturn this._dao.get(url).then(utils.validateODataV2).then(transformPersonProperties);\n};\n\n/**\r\n * Sets a profile property\r\n * @param {User|string} userOrEmail - Pass in a User object (must have 'AccountName' or 'LoginName') or an email address\r\n * @returns {Promise} - A Promise\r\n * @example\r\n * var email = \"andrew@andrewpetersen.onmicrosoft.com\";\r\n * var aboutMe = \"I am a web developer\";\r\n * dao.profiles.setProperty(email, \"AboutMe\", aboutMe).then(function() { console.log(\"Success\") });\r\n */\n// Supports email string or a user object\nProfiles.prototype.setProperty = function (userOrEmail, key, value, digest) {\n\tvar _this = this;\n\n\treturn this._dao.ensureRequestDigest(digest).then(function (digest) {\n\t\tvar url = _this.baseUrl + \"/SetSingleValueProfileProperty\";\n\t\tvar args = {\n\t\t\tpropertyName: key,\n\t\t\tpropertyValue: value\n\t\t};\n\n\t\tvar customOptions = {\n\t\t\theaders: headers.getStandardHeaders(digest)\n\t\t};\n\n\t\t// if a string is passed, assume its an email address, otherwise a user was passed\n\t\tif (typeof userOrEmail === \"string\") {\n\t\t\treturn _this.getByEmail(userOrEmail).then(function (user) {\n\t\t\t\targs.accountName = user.AccountName;\n\t\t\t\treturn _this._dao.post(url, args, customOptions);\n\t\t\t});\n\t\t} else {\n\t\t\targs.accountName = userOrEmail.LoginName || userOrEmail.AccountName;\n\t\t\treturn _this._dao.post(url, args, customOptions);\n\t\t}\n\t});\n};\n\nProfiles.prototype.getProfile = function (user) {\n\tvar login = encodeURIComponent(user.LoginName);\n\tvar url = this.baseUrl + \"/GetPropertiesFor(accountName=@v)?@v='\" + login + \"'\";\n\treturn this._dao.get(url).then(utils.validateODataV2).then(transformPersonProperties);\n};\n\n/**\r\n * Gets the profile of the user tied to the specified email\r\n * @returns {Promise} - A Promise that resolves an object containing all the profile properties\r\n * @example\r\n * var email = \"andrew@andrewpetersen.onmicrosoft.com\";\r\n * dao.profiles.getByEmail(email)\r\n *    .then(function(profile) { console.log(profile.PreferredName) });\r\n */\nProfiles.prototype.getByEmail = function (email) {\n\tvar _this2 = this;\n\n\treturn this._dao.web.getUser(email).then(function (user) {\n\t\treturn _this2.getProfile(user);\n\t});\n};\n\nmodule.exports = Profiles;\n//# sourceMappingURL=profiles.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/profiles.js\n// module id = 25\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar BaseDao = require(\"./baseDao\");\nvar ajax = require('./ajax');\nvar utils = require(\"./utils\");\n/**\r\n * Main point of entry. Big Daddy class that all SP requests are routed through. Data Access Object (DAO)\r\n * @class\r\n * @augments BaseDao\r\n\r\n * @param {string} [url] - Url of the site you are connected to. _spPageContextInfo.webAbsoluteUrl will be used if no value is passed.\r\n * @property {string} webUrl - Url of the site you are connected to\r\n * @property {Web} web - Allows interacting with the SharePoint site you connected to\r\n * @property {Search} search - Allows querying through the SP Search Service\r\n * @property {Profiles} profiles - Allows interacting with the SP Profile Service\r\n * @example <caption>Create a new instance of a RestDao</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n */\nvar RestDao = function RestDao(url) {\n\tvar self = this;\n\tBaseDao.call(this);\n\tthis.webUrl = url || _spPageContextInfo.webAbsoluteUrl;\n};\n\nRestDao.prototype = Object.create(BaseDao.prototype);\n\nRestDao.prototype.executeRequest = function (url, options) {\n\tvar fullUrl = /^http/i.test(url) ? url : this.webUrl + \"/_api\" + url;\n\n\tvar defaultOptions = {\n\t\turl: fullUrl,\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\t\"Accept\": \"application/json; odata=verbose\",\n\t\t\t\"Content-Type\": \"application/json; odata=verbose\"\n\t\t}\n\t};\n\n\tvar ajaxOptions = _extends({}, defaultOptions, options);\n\treturn ajax(ajaxOptions).catch(utils.handleErrorResponse);\n};\n\nmodule.exports = RestDao;\n//# sourceMappingURL=restDao.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/restDao.js\n// module id = 26\n// module chunks = 1","'use strict';\n\nvar queryString = require('./queryString');\nvar utils = require('./utils');\n\n/**\r\n * Allows you to perform queries agains the SP Search Service. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n * @class\r\n * @param {IBaseDao} dao - Data access object used to make requests.\r\n * @example <caption>You access this Search class using the 'search' property of the dao</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n * dao.search.query('andrew').then(function(result) { console.log(result.items) });\r\n */\nvar Search = function Search(dao) {\n  this._dao = dao;\n};\n\n/**\r\n * Represents the response sent back from the Search Service after a query\r\n * @typedef {Object} QueryOptions\r\n * @property {string} sourceid - Special id that allows filter of types\r\n * @property {int} startrow - \r\n * @property {int} rowlimit - How many items to bring back\r\n * @property {Array<string>} selectedproperties - An array of the property names to bring back\r\n * @property {Array<string>} refiners - An array of the refiners to bring back\r\n * @property {?} hiddenconstraints - \r\n * @property {?} sortlist - \r\n */\nSearch.QueryOptions = function () {\n  this.sourceid = null;\n  this.startrow = null;\n  this.rowlimit = 30;\n  this.selectedproperties = null;\n  this.refiners = null;\n  this.refinementfilters = null;\n  this.hiddenconstraints = null;\n  this.sortlist = null;\n};\n\nvar convertRowsToObjects = function convertRowsToObjects(itemRows) {\n  var items = [];\n\n  for (var i = 0; i < itemRows.length; i++) {\n    var row = itemRows[i],\n        item = {};\n    for (var j = 0; j < row.Cells.results.length; j++) {\n      item[row.Cells.results[j].Key] = row.Cells.results[j].Value;\n    }\n\n    items.push(item);\n  }\n\n  return items;\n};\n\n/**\r\n * Represents the response sent back from the Search Service after a query\r\n * @typedef {Object} SearchResults\r\n * @property {string} elapsedTime - How long the query took\r\n * @property {object} suggestion - Spelling suggestion\r\n * @property {int} resultsCount - Number of results in this batch\r\n * @property {int} totalResults - Total number of results that could be returned\r\n * @property {int} totalResultsIncludingDuplicates - Total number of results that could be returned including duplicates\r\n * @property {Array} items - An array of search result items.  Properties will depend of the item type.\r\n * @property {?Array<Refiner>} refiners - An array of refiners. Can be null.\r\n */\nvar SearchResults = function SearchResults(queryResponse) {\n  this.elapsedTime = queryResponse.ElapsedTime;\n  this.suggestion = queryResponse.SpellingSuggestion;\n  this.resultsCount = queryResponse.PrimaryQueryResult.RelevantResults.RowCount;\n  this.totalResults = queryResponse.PrimaryQueryResult.RelevantResults.TotalRows;\n  this.totalResultsIncludingDuplicates = queryResponse.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n  this.items = convertRowsToObjects(queryResponse.PrimaryQueryResult.RelevantResults.Table.Rows.results);\n  this.refiners = mapRefiners(queryResponse.PrimaryQueryResult.RefinementResults);\n};\n\n/**\r\n * Represents the response sent back from the Search Service after a query\r\n * @typedef {Object} Refiner\r\n * @property {string} RefinerName - How long the query took\r\n * @property {Array} RefinerOptions - An array of valid refiner values\r\n */\n\nvar mapRefiners = function mapRefiners(refinementResults) {\n  var refiners = [];\n\n  if (refinementResults && refinementResults.Refiners && refinementResults.Refiners.results) {\n    refiners = refinementResults.Refiners.results.map(function (r) {\n      return {\n        RefinerName: r.Name,\n        RefinerOptions: r.Entries.results\n      };\n    });\n  }\n  return refiners;\n};\n\n/**\r\n * Performs a query using the search service\r\n * @param {string} queryText - The query text to send to the Search Service\r\n * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n * @example\r\n * dao.search.query('audit').then(function(result) { console.log(result.items) });\r\n */\nSearch.prototype.query = function (queryText, queryOptions) {\n  var optionsQueryString = queryOptions != null ? \"&\" + queryString.fromObj(queryOptions, true) : \"\";\n\n  var url = \"/search/query?querytext='\" + queryText + \"'\" + optionsQueryString;\n  return this._dao.get(url).then(utils.validateODataV2).then(function (resp) {\n    if (resp.query) {\n      return new SearchResults(resp.query);\n    }\n    throw new Error(\"Invalid response back from search service\");\n  });\n};\n\n/**\r\n * Performs a query using the search service\r\n * @param {string} queryText - The query text to send to the Search Service\r\n * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n * @example\r\n * dao.search.people('andrew').then(function(result) { console.log(result.items) });\r\n */\nSearch.prototype.people = function (queryText, queryOptions) {\n  var options = queryOptions || {};\n  options.sourceid = 'b09a7990-05ea-4af9-81ef-edfab16c4e31';\n  return this.query(queryText, options);\n};\n\n/**\r\n * Performs a query for just sites using the search service\r\n * @param {string} queryText - The query text to send to the Search Service\r\n * @param {string} [[scope]] - A url to scope the results to\r\n * @param {QueryOptions} [[queryOptions]] - Override the default query options\r\n * @returns {Promise<SearchResults>} - A Promise that resolves to a SearchResults object\r\n * @example\r\n * dao.search.sites('andrew').then(function(result) { console.log(result.items) });\r\n */\nSearch.prototype.sites = function (queryText, scope) {\n  var queryOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  queryText = queryText || \"\";\n  scope = scope ? 'Path:' + scope + '*' : \"\";\n  var query = (queryText + ' contentclass:STS_Web ' + scope).trim();\n  queryOptions.rowlimit = queryOptions.rowlimit || 499;\n  return this.query(query, queryOptions);\n};\n\nmodule.exports = Search;\n//# sourceMappingURL=search.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/search.js\n// module id = 27\n// module chunks = 1","\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar utils = require(\"./utils\");\nvar Permissions = require(\"./permissions\");\nvar headers = require(\"./requestHeaders\");\nvar Folder = require(\"./filesystem\").Folder;\n/**\r\n * Represents a SharePoint site. You shouldn't ever be new'ing this class up up yourself, instead you'll get it from your dao as shown in first example.\r\n * @class\r\n * @param {IBaseDao} dao - Data access object used to make requests.\r\n * @property {Permissions} permissions - allows checking security information of the Web\r\n * @property {string} baseUrl - API relative url (value = \"/web\")\r\n * @example <caption>You access this Web class using the 'web' property of the dao</caption>\r\n * var dao = new SPScript.RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n * dao.web.info().then(function(info) { console.log(info) });\r\n */\nvar Web = function Web(dao) {\n\tthis._dao = dao;\n\tthis.baseUrl = \"/web\";\n\tthis.permissions = new Permissions(this.baseUrl, this._dao);\n};\n\n/**\r\n * Retrieves basic information about the site\r\n * @returns {Promise<SP.Web>} - A Promise that resolves to an object containing non-deferred properties of SP.Web (https://msdn.microsoft.com/en-us/library/office/jj244873.aspx)\r\n * @example\r\n * dao.web.info().then(function(info) { console.log(info) });\r\n */\nWeb.prototype.info = function () {\n\treturn this._dao.get(this.baseUrl).then(utils.validateODataV2);\n};\n\n/**\r\n * Retrieves all of the subsites\r\n * @returns {Promise<SP.Web[]>} - A Promise that resolves to an array of subsite object, each loaded with all non-deferred properties\r\n * @example\r\n *  dao.web.subsites().then(function(sites) { console.log(sites) });\r\n */\nWeb.prototype.subsites = function () {\n\treturn this._dao.get(this.baseUrl + \"/webinfos\").then(utils.validateODataV2);\n};\n\n/**\r\n * Retrieves a token needed to authorize any updates\r\n * @return {string} - A Promise that resolves to a the token that needs to added to the \"X-RequestDigest\" request header\r\n * @example\r\n *  dao.web.getRequestDigest().then(function(digest) { console.log(digest) });\r\n */\nWeb.prototype.getRequestDigest = function () {\n\treturn this._dao.getRequestDigest();\n};\n\n/**\r\n * Retrieves a folder\r\n * @param {string} serverRelativeUrl - The server relative url of the folder\r\n * @returns {Promise<Folder>} - A Promise that resolves to a folder object contain a files and folders arrays\r\n * @example\r\n *  dao.web.getFolder(\"/sites/mysite/Shared Documents\")\r\n *\t\t\t.then(function(folder) { console.log(folder) });\r\n */\nWeb.prototype.getFolder = function (serverRelativeUrl) {\n\t//remove leading slash\n\tif (serverRelativeUrl.charAt(0) === \"/\") {\n\t\tserverRelativeUrl = serverRelativeUrl.substr(1);\n\t}\n\tvar url = \"/web/GetFolderByServerRelativeUrl('\" + serverRelativeUrl + \"')?$expand=Folders,Files\";\n\n\treturn this._dao.get(url).then(utils.validateODataV2).then(function (spFolder) {\n\t\tvar folder = new Folder(spFolder);\n\t\tfolder.populateChildren(spFolder);\n\t\treturn folder;\n\t});\n};\n\n/**\r\n * Uploads a file\r\n * @param {HTML5.File|string} fileContent - Either an HTML5 File object (from a File input element) or the string content of the file\r\n * @param {string} folderUrl - The server relative folder where the file should be uploaded\r\n * @param {object} [[fields]] - An optional object containig the fields that should be set on the file after the upload completes. You can override the filename by passing 'name' property { name: \"NewFileName.docx\"}\r\n * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n * @example <caption>Upload files with file input element, assumes <input type='file' id='file-input' /> </caption>\r\n\t*var inputElement = document.getElementById(\"file-input\");\r\n\t*inputElement.addEventListener(\"change\", handleFiles, false);\r\n\t*function handleFiles() {\r\n\t*    var fileList = this.files;\r\n\t*    var folderUrl = \"/spscript/Shared Documents\";\r\n\t*    for (var i = 0; i < fileList.length; i++) {\r\n\t*        dao.web.uploadFile(fileList[i], folderUrl).then(function(result){\r\n\t*            console.log(result);\r\n\t*        });\r\n\t*    }\r\n\t*}\r\n */\nWeb.prototype.uploadFile = function (fileContent, folderUrl, fields, digest) {\n\tvar _this = this;\n\n\tif (digest) return this._uploadFile(fileContent, folderUrl, fields, digest);\n\treturn this.getRequestDigest().then(function (digest) {\n\t\treturn _this._uploadFile(fileContent, folderUrl, fields, digest);\n\t});\n};\n\nWeb.prototype._uploadFile = function (fileContent, folderUrl, fields, digest) {\n\tvar _this2 = this;\n\n\tfields = fields || {};\n\t// if its a string, just treat that as the raw content\n\tif (typeof fileContent === \"string\") {\n\t\tfields.name = fields.name || \"NewFile.txt\";\n\t\treturn this._uploadBinaryData(fileContent, folderUrl, fields, digest);\n\t}\n\n\t// If its a browser File object, use FileReader to get ArrayBuffer\n\tif (fileContent instanceof File) {\n\t\tfields.name = fields.name || fileContent.name;\n\t\treturn utils.getArrayBuffer(fileContent).then(function (arrayBuffer) {\n\t\t\treturn _this2._uploadBinaryData(arrayBuffer, folderUrl, fields, digest);\n\t\t});\n\t}\n};\n\nWeb.prototype._setFileFields = function (spFile, fields, digest) {\n\tvar _this3 = this;\n\n\t// Get the ListItem with ParentList properties so we can query by list title\n\treturn this._dao.get(spFile.__metadata.uri + \"/ListItemAllFields?$expand=ParentList\").then(utils.validateODataV2).then(function (item) {\n\t\tdelete fields.name;\n\t\t// if there were no fields passed in just return the file and list item\n\t\tif (Object.keys(fields).length === 0) {\n\t\t\treturn {\n\t\t\t\titem: item,\n\t\t\t\tfile: spFile\n\t\t\t};\n\t\t};\n\t\t// If extra fields were passed in, update the list item\n\t\treturn _this3._dao.lists(item.ParentList.Title).updateItem(item.Id, fields, digest).then(function () {\n\t\t\titem = _extends({}, item, fields);\n\t\t\treturn { item: item, file: spFile };\n\t\t});\n\t});\n};\n\nWeb.prototype._uploadBinaryData = function (binaryContent, folderUrl, fields, digest) {\n\tvar _this4 = this;\n\n\tvar uploadUrl = \"/web/GetFolderByServerRelativeUrl('\" + folderUrl + \"')/Files/Add(url='\" + fields.name + \"',overwrite=true)\";\n\tvar options = {\n\t\theaders: headers.getFilestreamHeaders(digest)\n\t};\n\treturn this._dao.post(uploadUrl, binaryContent, options).then(utils.validateODataV2).then(function (spFile) {\n\t\treturn _this4._setFileFields(spFile, fields, digest);\n\t});\n};\n\n/**\r\n * Retrieves a file object\r\n * @param {string} url - The server relative url of the file\r\n * @returns {Promise<File>} - A Promise that resolves to a file object\r\n * @example\r\n *  dao.web.getFile(\"/sites/mysite/Shared Documents/myfile.docx\")\r\n *\t\t\t.then(function(file) { console.log(file) });\r\n */\nWeb.prototype.getFile = function (url) {\n\tvar url = \"/web/getfilebyserverrelativeurl('\" + url + \"')\";\n\treturn this._dao.get(url).then(utils.validateODataV2);\n};\n\n/**\r\n * Copies a file\r\n * @param {string} sourceUrl - The server relative url of the file you want to copy\r\n * @param {string} destinationUrl - The server relative url of the destination\r\n * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n * @example\r\n * var sourceFile = \"/sites/mysite/Shared Documents/myfile.docx\";\r\n * var destination = \"/sites/mysite/Restricted Docs/myFile.docx\";\r\n * dao.web.copyFile(sourceFile, destination).then(function() { console.log(\"Success\") });\r\n */\nWeb.prototype.copyFile = function (sourceUrl, destinationUrl, digest) {\n\tvar _this5 = this;\n\n\tif (digest) return this._copyFile(sourceUrl, destinationUrl, digest);\n\n\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\treturn _this5._copyFile(sourceUrl, destinationUrl, requestDigest);\n\t});\n};\n\nWeb.prototype._copyFile = function (sourceUrl, destinationUrl, digest) {\n\tvar url = \"/web/getfilebyserverrelativeurl('\" + sourceUrl + \"')/CopyTo\"; //(strnewurl='${destinationUrl}',boverwrite=true)`\n\tvar options = {\n\t\theaders: headers.getAddHeaders(digest)\n\t};\n\tvar body = {\n\t\tstrNewUrl: destinationUrl,\n\t\tbOverWrite: true\n\t};\n\treturn this._dao.post(url, body, options);\n};\n\nWeb.prototype.fileAction = function (file, action) {\n\tvar _this6 = this;\n\n\tvar params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\tvar digest = arguments[3];\n\n\tif (digest) this._fileAction(file, action, params, digest);\n\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\treturn _this6._fileAction(file, action, params, requestDigest);\n\t});\n};\n\nWeb.prototype._fileAction = function (file, action, params, digest) {\n\tvar url = \"/web/getfilebyserverrelativeurl('\" + file + \"')/\" + action;\n\tvar options = {\n\t\theaders: headers.getAddHeaders(digest)\n\t};\n\treturn this._dao.post(url, params, options);\n};\n\n/**\r\n * Deletes a file\r\n * @param {string} fileUrl - The server relative url of the file you want to delete\r\n * @param {string} [[requestDigest]] - The request digest token used to authorize the request. One will be automatically retrieved if not passed.\r\n * @example\r\n * dao.web.deleteFile(\"/sites/mysite/Shared Documents/myFile.docx\")\r\n *\t\t\t.then(function() { console.log(\"Success\")});\r\n */\nWeb.prototype.deleteFile = function (fileUrl, digest) {\n\tvar _this7 = this;\n\n\tif (digest) return this._deleteFile(fileUrl, digest);\n\n\treturn this.getRequestDigest().then(function (requestDigest) {\n\t\treturn _this7._deleteFile(fileUrl, requestDigest);\n\t});\n};\n\nWeb.prototype._deleteFile = function (sourceUrl, requestDigest) {\n\tvar url = \"/web/getfilebyserverrelativeurl(@url)/?@Url='\" + sourceUrl + \"'\";\n\tvar options = {\n\t\theaders: headers.getDeleteHeaders(requestDigest)\n\t};\n\treturn this._dao.post(url, {}, options);\n};\n\n/**\r\n * Retrieves a users object based on an email address\r\n * @param {string} email - The email address of the user to retrieve\r\n * @returns {Promise<SP.User>} - A Promise that resolves to a an SP.User object\r\n * @example\r\n * dao.web.getUser(\"andrew@andrewpetersen.onmicrosoft.com\")\r\n * \t\t\t.then(function(user) { console.log(user)});\r\n */\nWeb.prototype.getUser = function (email) {\n\tvar url = this.baseUrl + \"/SiteUsers/GetByEmail('\" + email + \"')\";\n\treturn this._dao.get(url).then(utils.validateODataV2);\n};\n\nWeb.prototype.ensureUser = function (login) {\n\treturn this._dao.post(\"/web/ensureUser('\" + login + \"')\").then(utils.validateODataV2);\n};\n\nmodule.exports = Web;\n//# sourceMappingURL=web.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/web.js\n// module id = 28\n// module chunks = 1","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/decode.js\n// module id = 55\n// module chunks = 1","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/encode.js\n// module id = 56\n// module chunks = 1","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/index.js\n// module id = 57\n// module chunks = 1"],"sourceRoot":""}